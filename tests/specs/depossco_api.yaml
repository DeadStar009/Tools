openapi: 3.0.1
info:
  title: Deposco API
  version: 2.0.2519
  license:
    name: Deposco terms of use
    url: https://developer.deposco.com/terms-and-conditions/
  description: |-
    Welcome to the Deposco API Reference! The Deposco API enables you to integrate your system with Deposco.

    * Integrate a product information system (PIM) by creating and retrieving data for items, packs, UPCs, and kits.
    * Set up warehouse data by creating facilities, zones, locations, and storage details.
    * Create inbound orders that can be received and outbound orders that can be fulfilled with Deposco warehouse management processes.

    This reference provides details on available operations, endpoints, parameters, schemas, and responses.  Example requests and responses are also available for you to use as a reference. You can copy the examples to use as a starting point for your own requests.

    Review the guides to learn how the API is used in common business scenarios such as setting up the warehouse and integrating a Product Information Management (PIM) system.

    When you're ready to get started, register for a developer account and then log in to create your application in the developer portal.
servers:
  - url: https://api.deposco.com/latest
    description: Production API
  - url: https://api.deposco.com/beta
    description: Beta API
tags:
  - name: Authentication and authorization
    description: |-
      The Deposco API uses OAuth2 for authorization. Perform the steps below to obtain an access token for your requests.

      ## Step 1: Create an application
      Log in to the developer portal and create an application. The application includes your intent for using the API and identifies required access scopes.

      After you submit the application to Deposco for review and approval, a client ID, secret, and installation link are created for the application. You can view these values on the detail page for the application.

      ## Step 2: Install the application
      Once your application is approved by Deposco, it can be installed in a Deposco customer environment. A user with an account in the environment must open the installation link, log in, and grant access to the application.

      A refresh token is then generated for the application in that environment.

      ## Step 3: Request an access token

      Use the refresh token with the client ID and secret for the application to request an access token. For example:

          curl --location 'https://auth.deposco.com/oauth2/token' \
          --header 'Content-Type: application/x-www-form-urlencoded' \
          --data-urlencode 'grant_type=refresh_token' \
          --data-urlencode 'refresh_token=JKxUWi3a2JGZ9tUOY5yza0lbX9Ocz53ldfUb8gZoE3m3yfv3kCiHKQDcyaxk2K8LJWFlS2K7IPQgloU8NwSilI-Le0RNlJbgFfrdRJCK3Olt7eYTFLKzis7hXumZzL3a' \
          --data-urlencode 'client_id=325f639c-c66a-45e2-b027-c5373b4f3ad9' \
          --data-urlencode 'client_secret=c0etmhtyasgXZbgyi4LvPKbRFP9KrQY5yUcDrG_dH40'

      The access token that is returned is valid for one hour. When it expires, use the refresh token to request a new access token. Refresh tokens are valid until the application is updated in the developer portal.

      Provide the access token as a bearer token in the 'Authorization' header of each request.
  - name: URLs
    description: |-
      The URL to access the Deposco API is:

      ```https://api.deposco.com/version/```

      where _version_ is one of the following values:

      - The API version number, such as ```v2.0```. Only the grade number and major version number must be provided. In the example of ```v2.0```, the grade number is 2 and the major version number is 0.

      - ```latest```, which uses the most recent stable version of the API. This prevents you from having to update the version number on an ongoing basis; however, breaking changes are introduced when the major version number is incremented.

      - ```beta```, which uses the current beta version of the API. The beta version may include recently developed API features that have not yet been fully tested.

      **NOTE**: In previous versions of the Deposco API, different URLs were used to access the user acceptance (UA) and production environments. Starting with version 2.0 of the API, the access token in the request is used to direct the request to a specific environment.

      ## Example URLs
      Use the endpoint below to create or update items with API version 2.0:

      ```https://api.deposco.com/v2.0/items```

      Use the endpoint below to create or update items with the most recent stable version of the API:

      ```https://api.deposco.com/latest/items```

      Use the endpoint below to create or update items with the current beta version of the API:

      ```https://api.deposco.com/beta/items```
  - name: Versioning
    description: |-
      The Deposco API is versioned. Version numbers follow a pattern of _grade.major.minor-build_, such as 2.0.2419-01, where:

      - _grade_ is the grade number, which is incremented for disruptive changes such as a change in release policy.

      - _major_ is the major version number, which is incremented for breaking changes such as the removal of a field or endpoint.

      - _minor_ is the minor version number, which is incremented when the version includes only non-breaking changes such as bug fixes or functionality for backward compatibility.

      - _build_ is the build number, which is incremented when the version includes only bug fixes for existing functionality.

      New API versions are announced in the [Changelog](./changelog). When a new major version is introduced, a timeline will be provided for the deprecation and sunsetting of any older API versions.

      The most recent version appears by default in this API Reference. You can view the reference for earlier versions by selecting from the list at the beginning of the reference.

      The version number must be included in the URL to access the Deposco API. Only the grade number and major version number must be provided, such as v2.1. For example, the endpoint to create or update items in a production environment with API version 2.1 is:

      ```https://api.deposco.com/v2.1/items```

      You can optionally use ```latest``` in the URL instead of the version number to use the most recent version of the API. This prevents you from having to update the version number on an ongoing basis; however, breaking changes are introduced when the major version number is incremented.

      The full version number for a request is returned in the response header for a request. For example:

      ```X-Deposco-API-Version: 2.1.2419-01```
  - name: Throttling
    description: |-
      An API gateway has been implemented to increase performance and stability across our API servers. The API gateway throttles API requests to maintain reliability and better throughput across API servers.

      To use the Deposco API with the gateway, API requests must use HTTPS. Requests that use HTTP are blocked because they are not secure.

      ## Request rate
      The API request rate depends on the Bright Cloud platform tier that is defined on your Master SaaS Agreement Schedule A, or specified in an Addendum or Statement of Work.

      |Bright Cloud platform tier|API request rate|Burst request size
      |--------------------------|----------------|------------------
      1, 2, or 3  | 4 requests per second  | 20 requests
      4, 5, or 6* | 20 requests per second | 100 requests

      *Contact your Deposco representative for more information if the metrics for your environment exceed tier 6.

      If the API continually receives more than 4 requests per second, then the burst bucket continues to grow until the burst request size limit is reached. At that point, an HTTP status code of 429 (Too Many Requests) is returned, and the request must be resubmitted. These rate limits are at the API client level, meaning that they are applied at an application and environment level.

      ## Rate limit headers
      A set of HTTP headers is included in each API response to identify your current rate limit and the number of remaining requests in the current 1 second time window.

      The `X-RateLimit-Limit` header provides the current rate limit for the API client. In the example below, the API client can make 4 requests every second (in other words, within the time window of 1 second) with a burst size of 20.

          X-RateLimit-Limit: 4;w=1;burst=20

      The `X-RateLimit-Remaining` header indicates the number of remaining requests that are allowed within the 1-second time window before an HTTP status code of 429 (Too Many Requests) is returned. This value is initialized from the burst size for the API client and decreases by 1 with each request that is sent within the time window. The value replenishes at the end of each 1 second time window by the number of requests per second defined in the `X-RateLimit-Limit` header.

          X-RateLimit-Remaining: 19

      The `X-RateLimit-Reset` header is included when an HTTP status code of 429 (Too Many Requests) is returned. The value indicates how many seconds to wait before submitting another request.

          X-RateLimit-Reset: 1

      ## Timeout threshold for requests
      The Deposco API gateway has a timeout threshold of 29 seconds for all requests. If a request reaches this threshold, then an HTTP status code of 400 (Bad Request) is returned, and the request be resubmitted.

      ## Maximum file size
      The maximum file size for the API gateway is 10 MB. If an API request or response exceeds this limit, then an HTTP status code of 500 (Internal Server Error) is returned.

      If a request is larger than 10 MB, then it must be divided into multiple requests that meet the file size requirement to be successful.

      If a response is larger than 10 MB, then use the `pageSize` parameter to reduce the number of entries on each page of the response.
  - name: Additional considerations
    description: The Deposco API supports Unicode characters that are encoded with UTF-8 using 1 to 3 bytes. Encoded symbols that take up to 4 bytes, such as emojis, are not supported.
  - name: Items
    description: |-
      An item, or stock keeping unit (SKU), is a distinct type of item for sale, including all attributes that distinguish the item type from other item types, such as manufacturer, description, material, size, color, and packaging.

      Packs are a sub-resource for items that enable you to manage the stock of an item in multiple units of measure. Each item must have at least one pack with a pack type of Each and a quantity value of 1, which represents the most granular unit by which the item is managed.

      Universal Product Codes (UPCs), or barcodes, are a sub-resource for items that enable you to scan and track stock in the warehouse. UPCs can be created at either the item level or the pack level, depending on the types of items and packs in the environment. Each UPC code must be unique. However, multiple UPCs can be assigned to a single item or pack.

      Channel listings are a sub-resource for items that connect the item to its integration source. Creation of a channel listing for each item is recommended.

      <a href="https://developer.deposco.com/guides/?page=Integrating%20a%20PIM%20system" target="_blank">Learn more about creating items as part of integrating a Product Information Management (PIM) system with Deposco.</a>
  - name: Kits
    description: |-
      A kit is comprised of a kit header and a set of kit detail records. The kit header is the parent record that identifies a kit that is built from a set of component items. There are two types of kit detail records:

      - An input record identifies an individual component item that is part of the kit.

      - An output record identifies the resulting item when the kit is created.

      Each kit header should include one output kit detail record and one or more input kit detail records.
  - name: Trading partners
    description: |-
      A trading partner in Deposco represents an external party to the company that is typically associated with an order, such as a supplier or vendor that provides products or services or a customer that purchases products from the company.

      If a trading partner has multiple locations/addresses, then a trading partner site can be created for each address.
      Different addresses may be used, for example, to ship orders to multiple locations for a single retail/B2B customer or to receive orders from multiple locations for a single supplier.

      Trading partner parameters can be created for identifying either reports that should be used for formatting packing slips for a trading partner or label templates that should be used for formatting retailer labels for a retail/B2B customer.
  - name: Companies
    description: |-
      A company record enables you to define a contact name and address for a business, as well as options related to international settings and packing slips. A company is also referred to as a business unit in Deposco.

      All other entities in Deposco, such as items and orders, are assigned to a company. This enables you to limit data access to only users and applications who have permissions for the company.

      A company record is configured by default when a customer environment is created in Deposco as part of the implementation process. Third party logistics (3PL) providers must create additional company
      records for each of their customers (tenant companies). Companies can also be created for environments with multiple business units where warehouse activity should be tracked separately for each one.
  - name: Facilities
    description: A facility is a physical location for a company, typically a building such as a warehouse/distribution center or a retail store. A facility record should be created for every facility that is involved in warehouse and order management activities.
  - name: Locations
    description: |-
      Locations are specific areas in a facility that are used for tracking movement of physical objects such as inventory, containers, and shipments. A location can be a specific inventory storage shelf, or a location might represent an area like the receiving or shipping area of the facility.

      Locations are typically defined as smaller, more granular units than zones. A zone can include many locations. However, a location is not limited to a specific zone; locations can be associated with multiple zones if the zones physically overlap.

      Every facility must include a Receiving location and a Shipping location. Other locations in the facility can be as general as a certain rack, or as specific as a certain shelf or even a section of a shelf.

      Storage detail records are created and updated as a sub-resource when creating or updating a location. A storage detail record assigns an item (more specifically, the pack for an item) to the location.
      If multiple items are stored in the location, a storage detail record must be created for each item.

      A storage detail record also defines the minimum and maximum inventory levels for the item in that picking location. When the stock in the location falls below the minimum,
      a warehouse replenishment task can be generated to move inventory from a reserve location so that the quantity of inventory at the picking location equals but does not exceed the specified maximum.
  - name: Zones
    description: |-
      A zone is an area in a facility that is dedicated to a specific functional task, such as picking, receiving, or shipping.

      Zones are used for controlling the areas in which users can perform warehouse management tasks. Zones can also be created to segregate work based on the type of equipment that is required, such as a fork truck or cherry picker.

      Zones may physically overlap. In other words, zones are not required to be defined as discrete areas. For example, a Secure Reserve Storage zone might be an area in a Reserve Storage zone that provides secure, caged storage for reserve inventory.
  - name: Users
    description: Each person who accesses the Deposco application should have their own user account. Dedicated user accounts enable you to precisely assign work and to track activity in the system for audit logging purposes.
  - name: Containers
    description: |-
      A container is any object that holds stock, such as a cart, bin, pallet, or shipping box. A container can also hold other containers, such as when shipping boxes are stacked on a pallet.

      Containers may also be called _LPNs (for license plate number)_ since they have preprinted, sequential barcode labels for tracking.
  - name: Inventory
    description: |-
      Inventory endpoints enable you to retrieve and manage specific quantities of stock for an item by facility and location.

      Inventory for an item is identified by attributes such as status or inventory condition. It may also be identified by item tracking attributes such as lot number, serial number, born on date, and expiration date.
  - name: Sales orders
    description: |-
      Sales orders are used for fulfillment processing through waving, picking, packing, and shipping. As a result, sales orders are also referred to as _fulfillment orders_.

      The primary record for a sales order is the order header, which contains information for the entire sales order such as the date the order was placed and the name and address of the customer.

      A sales order also has one or more order lines, which identify each item that the customer purchased, including the pack and quantity. A maximum of 100 order lines can be created or updated for an order in a single request.

      Additional related records provide other information about the order, such as notes or channel cross-references.
  - name: Customer orders
    description: |-
      Customer orders are orders from customers to purchase goods, including both B2C/D2C (direct to consumer) orders and B2B (wholesale) orders, as part of an enterprise order management strategy with Bright Order.

      The primary record for a customer order is the customer order header (CoHeader), which contains information for the entire order such as the date the order was created and the name and address of the customer.

      A customer order also has one or more order lines, which identify each item that the customer purchased, including the pack and quantity.

      Additional related records provide other information about the order, such as notes, dates, reference values, or channel cross-references.
  - name: Purchase orders
    description: |-
      A purchase order is an order that is sent to a vendor/supplier for items that are received into the warehouse.

      The primary record for a purchase order is the order header, which contains information for the entire purchase order such as the date the order was placed, the name and address of the supplier, and the address to which the stock for the order should be shipped.

      A purchase order also has one or more order lines, which identify each item to purchase from the supplier, including the pack and quantity. A maximum of 100 order lines can be created or updated for an order in a single request.

      Additional related records provide other information about the order, such as notes or channel cross-references.
  - name: Outbound transfer orders
    description: |-
      Outbound transfer orders are used by a source facility to manage the process of picking, packing, and shipping stock to a specific destination facility.

      The primary record for an outbound transfer order is the order header, which contains information for the entire order such as the source (Ship From) and destination (Ship To) facilities, as well as the overall status of the order.

      An outbound transfer order also has one or more order lines, which identify each item that is transferred, including the pack and quantity. A maximum of 100 order lines can be created or updated for an order in a single request.

      Additional related records provide other information about the order, such as notes or channel cross-references.
  - name: Inbound transfer orders
    description: |-
      Inbound transfer orders enable you to track the receipt of stock that has been transferred from another facility by using an outbound transfer order.

      The primary record for an inbound transfer order is the order header, which contains information for the entire inbound transfer order such as the source (Ship From) and destination (Ship To) facilities, as well as the overall status of the order.

      An inbound transfer order also has one or more order lines, which identify each item that has been transferred, including the pack and quantity. A maximum of 100 order lines can be created or updated for an order in a single request.

      Additional related records provide other information about the order, such as notes or channel cross-references.
  - name: Customer returns
    description: |-
      A customer return is a type of order that is used to manage the stock that is returned from a customer and received into a warehouse or distribution center (DC). A customer return is often called a *return merchandise authorization (RMA)* in other systems.

      The primary record for a customer return is the order header, which contains information for the entire order such as the fulfillment order that is associated with the customer return, customer contact information, and status information.

      A customer return also has one or more order lines, which identify each item that the customer is returning, including the pack and quantity. A maximum of 100 order lines can be created or updated for a customer return in a single request.

      Additional related records provide other information about the customer return, such as notes or channel cross-references.
  - name: Vendor returns
    description: |-
      A vendor return is a type of order that is used to manage the stock that is returned from the warehouse or distribution center (DC) to a supplier. This may occur if the stock is received for a purchase order but is either damaged or no longer needed.

      The primary record for a vendor return is the order header, which contains information for the entire order such as the purchase order that is associated with the vendor return, supplier contact information, and status information.

      A vendor return also has one or more order lines, which identify each item that is being returned to the supplier, including the pack and quantity. A maximum of 100 order lines can be created or updated for a vendor return in a single request.

      Additional related records provide other information about the vendor return, such as notes or channel cross-references.
  - name: Outbound shipments
    description: |-
      An outbound shipment is a shipment that is sent from a facility in Deposco, typically by using the services of a shipping carrier.

      An outbound shipment is associated with one or more outbound orders, such as sales orders or outbound transfer orders.

      An outbound shipment may also be associated with a trip, which is a collection of shipments that are loaded onto a single vehicle for pickup by a specific shipping carrier.

      The primary record for an outbound shipment is the shipment header, which contains information for the entire shipment such as address information, dates, billing information, and shipping carrier information.

      An outbound shipment also has one or more shipment lines, which identify each item in the shipment, including the pack and quantity.
  - name: Trips
    description: |-
      A trip is a collection of outbound shipments and the containers assigned to those shipments. The containers, which are typically shipping boxes and may also include pallets, are loaded onto a single vehicle such as a van or truck either for pickup by a specific shipping carrier or for transport to another facility.

      A bill of lading (BOL) can be generated for a trip with shipping information, billing information, and details about the contents of the trip, such as orders, packages, package types, and weights.
  - name: Receipts
    description: |-
      A receipt is created when stock has been received for an item on either a purchase order or an inbound shipment. The receipt tracks the quantity of an item and pack that was received and the date on which the stock was received.

      A receipt is also called a receipt line in Deposco because it corresponds to an order line on a purchase order or a shipment line on an inbound shipment.

      Multiple receipts may be created for a single order if stock to fulfill the purchase order is sent in multiple inbound shipments.
  - name: Asynchronous operations
    description: |-
      Asynchronous operations enable you to submit an API request and then proceed with other tasks so that you do not have to wait for an immediate response.

      Endpoints for asynchronous requests include the POST endpoints to:
      - Create or update a customer order
      - Perform a bulk import

      When you submit an asynchronous request, a request ID is returned in the response. The request is processed in the background. You must then submit a separate GET request to retrieve the status of the asynchronous request to determine whether the request completed successfully.
  - name: Delivery Promises
    description: |-
      ##Delivery promises API Overview
      The Delivery Promises is a collection of commitments or estimations either for a product or a checkout cart.

      ## Key Concepts
      - The commitment provided to the customer is based on various factors including the customer's location and selected shipping service tier.
      - **Shipping Service Tier**
        - The API supports three distinct service tiers, each offering different speed of delivery.
          - **Standard:** The default delivery tier, offering standard shipping speed.
          - **Fast:** An accelerated delivery tier, compared to the Standard tier.
          - **Fastest:** The quickest delivery tier available, providing the shortest delivery time.

      ## Implementation Notes

      - **Integration Considerations:**
        - Verify that your application correctly identifies the customer's geographic location by either providing a valid IP Address or both postal code and country code.
        - If both postal code and IP Address are provided, postal code is prioritized.
        - Ensure that the Shipping service tiers are aligned with your shipping providers and system capabilities in the Customer Delivery Promise application configuration.
paths:
  /items:
    post:
      operationId: postItem
      summary: Create or update an item
      tags:
        - Items
      description: Creates a new item or updates data for an existing item.
      security:
        - oauth2:
            - items/write
      responses:
        '200':
          description: Item updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
              examples:
                item:
                  $ref: '#/components/examples/itemResponse'
        '201':
          description: Item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemDTO'
            examples:
              item:
                $ref: '#/components/examples/itemRequest'
    get:
      operationId: getItems
      summary: Get a list of items
      tags:
        - Items
      description: Retrieves a list of items, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - items/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - name: number
          in: query
          description: Item number of the requested item.
          schema:
            type: string
        - name: name
          in: query
          description: Name of the requested item.
          schema:
            type: string
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: Items retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCollectionDTO'
              examples:
                item:
                  $ref: '#/components/examples/itemCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /items/{itemId}:
    get:
      operationId: getItem
      summary: Get an item
      tags:
        - Items
      description: Retrieves the details of an existing item. Provide the unique identifier that was returned when the item was created.
      security:
        - oauth2:
            - items/read
      parameters:
        - $ref: '#/components/parameters/itemId'
      responses:
        '200':
          description: Item found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
              examples:
                item:
                  $ref: '#/components/examples/itemResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Item not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
  /items/{itemId}/packs/{packId}:
    get:
      operationId: getItemPack
      summary: Get a pack for an item
      tags:
        - Items
      description: Retrieves the details of an existing pack for an item. Provide the unique identifiers that were returned when the item and pack were created.
      security:
        - oauth2:
            - items/read
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/packId'
      responses:
        '200':
          description: Pack found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackDTO'
              examples:
                example:
                  $ref: '#/components/examples/packResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Pack not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /items/{itemId}/upcs:
    get:
      operationId: getItemUPCs
      summary: Get a list of item UPCs for an item
      tags:
        - Items
      description: Retrieves a list of item UPCs for an item, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the item was created.
      security:
        - oauth2:
            - items/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: UPCs retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemUPCCollectionDTO'
              examples:
                example:
                  $ref: '#/components/examples/itemUpcCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Item not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /items/{itemId}/itemVendors:
    get:
      operationId: getItemVendors
      summary: Get a list of item vendors for an item
      tags:
        - Items
      description: Retrieves a list of item vendors for an item, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the item was created.
      security:
        - oauth2:
            - items/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: Item vendors retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemVendorCollectionDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Item not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /items/{itemId}/hsCodes:
    get:
      operationId: getHSCodes
      summary: Get a list of HS codes for an item
      tags:
        - Items
      description: Retrieves a list of HS codes for an item, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the item was created.
      security:
        - oauth2:
            - items/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: HS codes retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HSCodeCollectionDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Item not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /items/{itemId}/packs/{packId}/upcs:
    get:
      operationId: getPackUPC
      summary: Get a list of pack UPCs for an item
      tags:
        - Items
      description: Retrieves a list of pack UPCs for an item and pack, paginated and sorted by ID in descending order. Provide the unique identifiers that were returned when the item and pack were created.
      security:
        - oauth2:
            - items/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/packId'
      responses:
        '200':
          description: UPCs retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackUPCCollectionDTO'
              examples:
                example:
                  $ref: '#/components/examples/packUpcCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Pack or item not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /items/{itemId}/upcs/{upcId}:
    delete:
      operationId: deleteItemUPC
      summary: Delete an item UPC
      tags:
        - Items
      description: Deletes an existing UPC for an item. Provide the unique identifiers that were returned when the item and UPC were created.
      security:
        - oauth2:
            - items/write
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/upcId'
      responses:
        '200':
          description: UPC deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: UPC not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /items/{itemId}/packs/{packId}/upcs/{upcId}:
    delete:
      operationId: deletePackUPC
      summary: Delete a pack UPC
      tags:
        - Items
      description: Deletes an existing UPC for a pack and item. Provide the unique identifiers that were returned when the item, pack, and UPC were created.
      security:
        - oauth2:
            - items/write
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/packId'
        - $ref: '#/components/parameters/upcId'
      responses:
        '200':
          description: UPC deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: UPC not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /kitHeaders:
    post:
      operationId: postKitHeaders
      summary: Create or update a kit header
      tags:
        - Kits
      description: Creates a new kit or updates data for an existing kit.
      security:
        - oauth2:
            - kits/write
      responses:
        '200':
          description: Kit header updated
          headers:
            X-DEP-REQUEST-ID:
              $ref: '#/components/headers/X-DEP-REQUEST-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KitHeaderDTO'
              examples:
                example:
                  $ref: '#/components/examples/kitHeaderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KitHeaderDTO'
            examples:
              example:
                $ref: '#/components/examples/kitHeaderRequest'
    get:
      operationId: getKitHeaders
      summary: Get a list of kit headers
      tags:
        - Kits
      description: Retrieves a list of kits, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - kits/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - name: name
          in: query
          description: Name of the requested kit header.
          schema:
            type: string
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: Kit headers retrieved
          headers:
            X-DEP-REQUEST-ID:
              $ref: '#/components/headers/X-DEP-REQUEST-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KitHeaderCollectionDTO'
              examples:
                example:
                  $ref: '#/components/examples/kitHeaderCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /kitHeaders/{kitHeaderId}:
    get:
      operationId: getKitHeader
      summary: Get a kit header
      tags:
        - Kits
      description: Retrieves the details of an existing kit. Provide the unique identifier that was returned when the kit header was created.
      security:
        - oauth2:
            - kits/read
      parameters:
        - $ref: '#/components/parameters/kitHeaderId'
      responses:
        '200':
          description: Kit header found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KitHeaderDTO'
              examples:
                example:
                  $ref: '#/components/examples/kitHeaderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Kit header not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /kitHeaders/{kitHeaderId}/kitDetails:
    get:
      operationId: getKitDetails
      summary: Get a list of kit details
      tags:
        - Kits
      description: Retrieves a list of kit detail records for a kit header, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the kit header was created.
      security:
        - oauth2:
            - kits/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/kitHeaderId'
        - name: itemNumber
          in: query
          description: Item number that is associated with the requested kit detail record.
          schema:
            type: string
        - name: type
          in: query
          description: Whether the kit detail record is for an input or output item for the kit.
          schema:
            type: string
            enum:
              - Input
              - Output
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/createdAfter'
      responses:
        '200':
          description: Kit details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KitDetailCollectionDTO'
              examples:
                example:
                  $ref: '#/components/examples/kitDetailCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Kit header not found.
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /kitHeaders/{kitHeaderId}/kitDetails/{kitDetailId}:
    get:
      operationId: getKitDetail
      summary: Get a kit detail
      tags:
        - Kits
      description: Retrieves the details of an existing kit detail record for a kit header. Provide the unique identifiers that were returned for the kit header and kit detail record when the kit was created.
      security:
        - oauth2:
            - kits/read
      parameters:
        - $ref: '#/components/parameters/kitHeaderId'
        - $ref: '#/components/parameters/kitDetailId'
      responses:
        '200':
          description: Kit detail found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KitDetailDTO'
              examples:
                example:
                  $ref: '#/components/examples/kitDetailResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Kit detail not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
    delete:
      operationId: deleteKitDetail
      summary: Delete a kit detail
      tags:
        - Kits
      description: Deletes an existing kit detail record for a kit header. Provide the unique identifiers that were returned for the kit header and kit detail record when the kit was created.
      security:
        - oauth2:
            - kits/write
      parameters:
        - $ref: '#/components/parameters/kitHeaderId'
        - $ref: '#/components/parameters/kitDetailId'
      responses:
        '200':
          description: Kit detail deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Kit detail not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /tradingPartners:
    post:
      operationId: postTradingPartner
      summary: Create or update a trading partner
      tags:
        - Trading partners
      description: Creates a new trading partner or updates data for an existing trading partner.
      security:
        - oauth2:
            - tradingPartners/write
      responses:
        '200':
          description: Trading partner updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingPartnerDTO'
              examples:
                example:
                  $ref: '#/components/examples/tradingPartnerResponse'
        '201':
          description: Trading partner created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingPartnerDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TradingPartnerDTO'
            examples:
              example:
                $ref: '#/components/examples/tradingPartnerRequest'
    get:
      operationId: getTradingPartners
      summary: Get a list of trading partners
      tags:
        - Trading partners
      description: Retrieves a list of trading partners, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - tradingPartners/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/pageSize'
        - name: code
          in: query
          description: Code of the requested trading partner.
          schema:
            type: string
        - name: name
          in: query
          description: Name of the requested trading partner.
          schema:
            type: string
      responses:
        '200':
          description: Trading partners retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingPartnerCollectionDTO'
              examples:
                example:
                  $ref: '#/components/examples/tradingPartnerCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
  /tradingPartners/{tradingPartnerId}:
    get:
      operationId: getTradingPartner
      summary: Get a trading partner
      tags:
        - Trading partners
      description: Retrieves the details of an existing trading partner. Provide the unique identifier that was returned when the trading partner was created.
      security:
        - oauth2:
            - tradingPartners/read
      parameters:
        - $ref: '#/components/parameters/tradingpartner_id_path_param'
      responses:
        '200':
          description: Trading partner found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingPartnerDTO'
              examples:
                example:
                  $ref: '#/components/examples/tradingPartnerResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Trading partner not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
  /tradingPartners/{tradingPartnerId}/sites:
    get:
      operationId: getTradingPartnerSites
      summary: Get a list of trading partner sites
      tags:
        - Trading partners
      description: Retrieves a list of sites for a trading partner, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the trading partner was created.
      security:
        - oauth2:
            - tradingPartners/read
      parameters:
        - $ref: '#/components/parameters/tradingpartner_id_path_param'
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/pageSize'
        - name: siteCode
          in: query
          description: Code of the trading partner for the requested sites.
          schema:
            type: string
      responses:
        '200':
          description: Trading partner sites retrieved
          headers:
            X-DEP-REQUEST-ID:
              $ref: '#/components/headers/X-DEP-REQUEST-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingPartnerSiteCollectionDTO'
              examples:
                example:
                  $ref: '#/components/examples/tradingPartnerSiteCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Trading partner not found.
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
  /tradingPartners/{tradingPartnerId}/parameters:
    get:
      operationId: getTradingPartnerParameters
      summary: Get a list of trading partner parameters
      tags:
        - Trading partners
      description: Retrieves a list of parameters for a trading partner, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the trading partner was created.
      security:
        - oauth2:
            - tradingPartners/read
      parameters:
        - $ref: '#/components/parameters/tradingpartner_id_path_param'
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/pageSize'
        - name: code
          in: query
          description: Code of the trading partner for the requested parameters.
          schema:
            type: string
      responses:
        '200':
          description: Trading partner parameters retrieved
          headers:
            X-DEP-REQUEST-ID:
              $ref: '#/components/headers/X-DEP-REQUEST-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingPartnerParameterCollectionDTO'
              examples:
                example:
                  $ref: '#/components/examples/tradingPartnerParameterCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Trading partner not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
  /tradingPartners/{tradingPartnerId}/parameters/{parameterId}:
    delete:
      operationId: deleteTradingPartnerParameter
      summary: Delete a trading partner parameter
      tags:
        - Trading partners
      description: Deletes an existing parameter for a trading partner. Provide the unique identifier that was returned when the trading partner and parameter were created.
      security:
        - oauth2:
            - tradingPartners/write
      parameters:
        - $ref: '#/components/parameters/tradingpartner_id_path_param'
        - name: parameterId
          in: path
          description: ID of the requested trading partner parameter.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Trading partner parameter deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Trading partner parameter not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
  /companies:
    post:
      operationId: postCompanies
      summary: Create or update a company
      tags:
        - Companies
      description: |-
        Creates a new company (business unit) or updates data for an existing company. 
        You cannot delete a company or update the code for a company after it has been created.
      security:
        - oauth2:
            - companies/write
      responses:
        '200':
          description: Company updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDTO'
              examples:
                example:
                  $ref: '#/components/examples/companyResponse'
        '201':
          description: Company created
          headers:
            X-DEP-REQUEST-ID:
              $ref: '#/components/headers/X-DEP-REQUEST-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyDTO'
            examples:
              example:
                $ref: '#/components/examples/companyRequest'
    get:
      operationId: getCompanies
      summary: Get a list of companies
      tags:
        - Companies
      description: Retrieves a list of companies (business units), paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - companies/read
      parameters:
        - $ref: '#/components/parameters/searchId'
        - name: code
          in: query
          description: Search field for Company code
          schema:
            type: string
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: Companies retrieved
          headers:
            X-DEP-REQUEST-ID:
              $ref: '#/components/headers/X-DEP-REQUEST-ID'
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/CompanyDTO'
                  - $ref: '#/components/schemas/CollectionResourceMeta'
              examples:
                example:
                  $ref: '#/components/examples/companyCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /companies/{companyId}:
    get:
      operationId: getCompany
      summary: Get a company
      tags:
        - Companies
      description: Retrieves the details of an existing company (business unit). Provide the unique identifier that was returned when the company was created.
      security:
        - oauth2:
            - companies/read
      parameters:
        - $ref: '#/components/parameters/companyId'
      responses:
        '200':
          description: Company found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDTO'
              examples:
                example:
                  $ref: '#/components/examples/companyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Company not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /facilities:
    post:
      operationId: postFacility
      summary: Create or update a facility
      tags:
        - Facilities
      description: Creates a new facility or updates data for an existing facility.
      security:
        - oauth2:
            - facilities/write
      responses:
        '200':
          description: Facility updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityDTO'
              examples:
                item:
                  $ref: '#/components/examples/facilityResponse'
        '201':
          description: Facility created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityDTO'
            examples:
              item:
                $ref: '#/components/examples/facilityRequest'
    get:
      operationId: getFacilities
      summary: Get a list of facilities
      description: Retrieves a list of facilities, paginated and sorted by ID in descending order.
      tags:
        - Facilities
      security:
        - oauth2:
            - facilities/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/pageSize'
        - name: number
          in: query
          description: Facility number of the requested facility.
          schema:
            type: string
        - name: name
          in: query
          description: Name of the requested facility.
          schema:
            type: string
      responses:
        '200':
          description: Facilities retrieved
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/FacilityDTO'
                  - $ref: '#/components/schemas/CollectionResourceMeta'
              examples:
                item:
                  $ref: '#/components/examples/facilityCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
  /facilities/{facilityId}:
    get:
      operationId: getFacility
      summary: Get a facility
      tags:
        - Facilities
      description: Retrieves the details of an existing facility. Provide the unique identifier that was returned when the facility was created.
      security:
        - oauth2:
            - facilities/read
      parameters:
        - $ref: '#/components/parameters/facilityId'
      responses:
        '200':
          description: Facility found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityDTO'
              examples:
                item:
                  $ref: '#/components/examples/facilityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Facility not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
  /zones:
    post:
      operationId: postZones
      summary: Create or update a zone
      tags:
        - Zones
      description: Creates a new zone or updates data for an existing zone.
      security:
        - oauth2:
            - zones/write
      responses:
        '200':
          description: Zone updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneDTO'
              examples:
                example:
                  $ref: '#/components/examples/zoneResponse'
        '201':
          description: Zone created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneDTO'
            examples:
              example:
                $ref: '#/components/examples/zoneRequest'
    get:
      operationId: getZones
      summary: Get a list of zones
      tags:
        - Zones
      description: Retrieves a list of zones, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - zones/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - name: name
          in: query
          description: Name of the requested zone.
          schema:
            type: string
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: Zones retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneCollectionDTO'
              examples:
                example:
                  $ref: '#/components/examples/zoneCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /zones/{zoneId}:
    get:
      operationId: getZoneById
      summary: Get a zone
      tags:
        - Zones
      description: Retrieves the details of an existing zone. Provide the unique identifier that was returned when the zone was created.
      security:
        - oauth2:
            - zones/read
      parameters:
        - $ref: '#/components/parameters/zone_id_path_param'
      responses:
        '200':
          description: Zone found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneDTO'
              examples:
                example:
                  $ref: '#/components/examples/zoneResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Zone not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /zones/{zoneId}/locations:
    get:
      operationId: getLocationsByZone
      summary: Get a list of locations for a zone
      tags:
        - Zones
      description: Retrieves a list of locations for a zone, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the zone was created.
      security:
        - oauth2:
            - zones/read
      parameters:
        - $ref: '#/components/parameters/zone_id_path_param'
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - name: locator
          in: query
          description: Locator of the requested location for the zone.
          schema:
            type: string
        - name: name
          in: query
          description: Name of the requested location for the zone.
          schema:
            type: string
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: Locations found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationCollectionDTO'
              examples:
                example:
                  $ref: '#/components/examples/locationCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Zone not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /zones/{zoneId}/locations/{locationId}:
    delete:
      operationId: deleteLocationWithinAZone
      summary: Remove a location from a zone
      tags:
        - Zones
      description: Removes a location from a zone. Provide the unique identifier that was returned when the zone and location were created.
      security:
        - oauth2:
            - zones/write
      parameters:
        - $ref: '#/components/parameters/zone_id_path_param'
        - $ref: '#/components/parameters/location_id_path_param'
      responses:
        '200':
          description: Location removed from zone
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Location not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /locations:
    post:
      operationId: postLocations
      summary: Create or update a location
      tags:
        - Locations
      description: Creates a new location or updates data for an existing location.
      security:
        - oauth2:
            - locations/write
      responses:
        '200':
          description: Location updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDTO'
              examples:
                item:
                  $ref: '#/components/examples/locationResponse'
        '201':
          description: Location created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDTO'
              examples:
                item:
                  $ref: '#/components/examples/locationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationDTO'
            examples:
              item:
                $ref: '#/components/examples/locationRequest'
    get:
      operationId: getLocations
      summary: Get a list of locations
      tags:
        - Locations
      description: Retrieves a list of locations, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - locations/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - name: locator
          in: query
          description: Locator of the requested location.
          schema:
            type: string
        - name: name
          in: query
          description: Name of the requested location.
          schema:
            type: string
        - name: facilityNumber
          in: query
          description: Number of the facility.
          schema:
            type: string
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
      responses:
        '200':
          description: Locations retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationCollectionDTO'
              examples:
                item:
                  $ref: '#/components/examples/locationCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /locations/{locationId}:
    get:
      operationId: getLocationById
      summary: Get a location
      tags:
        - Locations
      description: Retrieves the details of an existing location. Provide the unique identifier that was returned when the location was created.
      security:
        - oauth2:
            - locations/read
      parameters:
        - $ref: '#/components/parameters/location_id_path_param'
      responses:
        '200':
          description: Location found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDTO'
              examples:
                item:
                  $ref: '#/components/examples/locationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Location not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /locations/{locationId}/zones:
    get:
      operationId: getZonesWithinLocation
      summary: Get a list of zones for a location
      tags:
        - Locations
      description: Retrieves a list of zones for a location, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the location was created.
      security:
        - oauth2:
            - locations/read
      parameters:
        - $ref: '#/components/parameters/location_id_path_param'
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - name: name
          in: query
          description: Name of the requested zone for the location.
          schema:
            type: string
      responses:
        '200':
          description: Zones retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneCollectionDTO'
              examples:
                example:
                  $ref: '#/components/examples/zoneCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Zone not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /locations/{locationId}/storageDetails:
    get:
      operationId: getStorageDetailsForALocation
      summary: Get a list of storage details for a location
      tags:
        - Locations
      description: Retrieves a list of storage detail records for a location, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the location was created.
      security:
        - oauth2:
            - locations/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/location_id_path_param'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
      responses:
        '200':
          description: Storage details found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageCollectionDTO'
              examples:
                item:
                  $ref: '#/components/examples/storageDetailCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Storage details not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /locations/{locationId}/storageDetails/{storageDetailId}:
    get:
      operationId: getStorageDetailById
      summary: Get a storage detail for a location
      tags:
        - Locations
      description: Retrieves the details of an existing storage detail record for a location. Provide the unique identifier that was returned when the location and storage detail record were created.
      security:
        - oauth2:
            - locations/read
      parameters:
        - $ref: '#/components/parameters/location_id_path_param'
        - $ref: '#/components/parameters/storage_id_path_param'
      responses:
        '200':
          description: Storage detail found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageDTO'
              examples:
                item:
                  $ref: '#/components/examples/storageDetailResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Storage details not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
    delete:
      operationId: deleteStorageDetailFromALocation
      summary: Delete a storage detail for a location
      tags:
        - Locations
      description: Deletes an existing storage detail record for a location. Provide the unique identifier that was returned when the location and storage detail record were created.
      security:
        - oauth2:
            - locations/write
      parameters:
        - $ref: '#/components/parameters/location_id_path_param'
        - $ref: '#/components/parameters/storage_id_path_param'
      responses:
        '200':
          description: Storage detail deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Storage detail not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /users:
    get:
      operationId: getUsers
      summary: Get a list of users
      tags:
        - Users
      description: Retrieves a list of user accounts, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - users/read
      parameters:
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/pageSize'
        - name: username
          in: query
          description: Username of the requested user account.
          schema:
            type: string
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
      responses:
        '200':
          description: Users retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCollectionDTO'
              examples:
                item:
                  $ref: '#/components/examples/userCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
  /users/{userId}:
    get:
      operationId: getUser
      summary: Get a user
      tags:
        - Users
      description: Retrieves the details of an existing user account. Provide the unique identifier that was returned when the user was created.
      security:
        - oauth2:
            - users/read
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
              examples:
                item:
                  $ref: '#/components/examples/userResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
  /containers:
    post:
      operationId: postContainers
      summary: Create or update a container
      tags:
        - Containers
      description: Creates a new container or updates data for an existing container.
      security:
        - oauth2:
            - containers/write
      responses:
        '200':
          description: Container updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerDTO'
              examples:
                example:
                  $ref: '#/components/examples/containerResponse'
        '201':
          description: Container created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerDTO'
              examples:
                example:
                  $ref: '#/components/examples/containerResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerDTO'
            examples:
              example:
                $ref: '#/components/examples/containerRequest'
    get:
      operationId: getContainers
      summary: Get a list of containers
      tags:
        - Containers
      description: Retrieves a list of containers, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - containers/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/pageSize'
        - name: lpnNumber
          in: query
          description: LPN number of the requested container.
          schema:
            type: string
        - name: number
          in: query
          description: Number of the requested container.
          schema:
            type: string
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
      responses:
        '200':
          description: Containers retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerCollectionDTO'
              examples:
                example:
                  $ref: '#/components/examples/containerCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /containers/{containerId}:
    get:
      operationId: getContainerById
      summary: Get a container
      tags:
        - Containers
      description: Retrieves the details of an existing container. Provide the unique identifier that was returned when the container was created.
      security:
        - oauth2:
            - containers/read
      parameters:
        - $ref: '#/components/parameters/container_id_path_param'
      responses:
        '200':
          description: Container found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerDTO'
              examples:
                example:
                  $ref: '#/components/examples/containerResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Container not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /orders/salesOrders:
    post:
      operationId: postSalesOrders
      summary: Create or update a sales order
      description: |-
        Creates a new sales order or updates data for an existing sales order.

        The requirements to update data for a sales order depend on the type of update:

        * To update data attributes such as the shipping address, shipping service (Ship Via), planned ship date, or notes, the order must have a status of Draft, New, Hold, Ready for Fulfillment, Wave Built, or Back Ordered.
        * To add an order line or increase the quantity of an order line, the order must have a status of Draft, New, Hold, Ready for Fulfillment, Wave Built, or Back Ordered, and the order line must have a status of New or Back Ordered. If the order has a status of either Partially Released or Released and there are backordered or unreleased quantities for the order line, then you can increase the quantity of the order line. The increase is applied to the backordered or unreleased quantity.

        Decreasing the quantity of an order line is considered a cancellation. Use the endpoint for canceling all or part of a sales order instead.

        If the sales order is associated with a customer order, then updates are not allowed. The customer order must be updated instead.
      tags:
        - Sales orders
      security:
        - oauth2:
            - salesOrders/write
      responses:
        '200':
          description: Sales order updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderDTO'
        '201':
          description: Sales order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderDTO'
            examples:
              example:
                $ref: '#/components/examples/salesOrderRequest'
    get:
      operationId: getSalesOrders
      summary: Get a list of sales orders
      tags:
        - Sales orders
      description: Retrieves a list of sales orders, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - salesOrders/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/searchId'
        - name: pageSize
          in: query
          description: Number of records returned on each page of the search results. The default page size is 25.
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
            minimum: 1
        - $ref: '#/components/parameters/number'
        - in: query
          name: orderStatus
          description: Status of the requested order.
          required: false
          schema:
            $ref: '#/components/schemas/orderStatus'
      responses:
        '200':
          description: Sales orders retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderCollectionDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/salesOrders/{orderId}:
    get:
      operationId: getSalesOrder
      summary: Get a sales order
      tags:
        - Sales orders
      description: Retrieves the details of an existing sales order. Provide the unique identifier that was returned when the sales order was created.
      security:
        - oauth2:
            - salesOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        '200':
          description: Sales order found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Sales order not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
  /orders/salesOrders/{orderId}/orderLines:
    get:
      operationId: getSalesOrderLines
      summary: Get a list of order lines for a sales order
      tags:
        - Sales orders
      description: Retrieves a list of order lines for a sales order, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the sales order was created.
      security:
        - oauth2:
            - salesOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/searchId'
        - name: pageSize
          in: query
          description: Number of records returned on each page of the search results. The default page size is 25.
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
            minimum: 1
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/lineNumber'
        - in: query
          name: orderLineStatus
          description: Status of the requested order line.
          required: false
          schema:
            $ref: '#/components/schemas/orderLineStatus'
      responses:
        '200':
          description: Sales order lines retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderLineCollectionDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Sales order lines not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
  /orders/salesOrders/{orderId}/orderLines/{orderLineId}:
    get:
      operationId: getSalesOrderLine
      summary: Get an order line for a sales order
      tags:
        - Sales orders
      description: Retrieves the details of an existing order line for a sales order. Provide the unique identifiers that were returned when the sales order and order line were created.
      security:
        - oauth2:
            - salesOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/orderLineId'
      responses:
        '200':
          description: Sales order line found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderLineDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Sales order or line not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
    post:
      operationId: updateSalesOrderLine
      summary: Update an order line for a sales order
      tags:
        - Sales orders
      description: |-
        Updates data for an existing order line for a sales order. Provide the unique identifiers that were returned when the sales order and order line were created.

        The requirements to update data for an order line depend on the type of update:

        * To update data attributes such as lot numbers or notes, the order must have a status of Draft, New, Hold, Ready for Fulfillment, Wave Built, or Back Ordered.
        * To increase the quantity of an order line, the order must have a status of New, Hold, Ready for Fulfillment, Wave Built, or Back Ordered, and the order line must have a status of New or Back Ordered. If the order has a status of either Partially Released or Released and there are backordered or unreleased quantities for the order line, then you can increase the quantity of the order line. The increase is applied to the backordered or unreleased quantity.

        Decreasing the quantity of an order line is considered a cancellation. Use the endpoint for canceling all or part of a sales order instead.

        If the sales order is associated with a customer order, then updates are not allowed. The customer order must be updated instead.
      security:
        - oauth2:
            - salesOrders/write
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/orderLineId'
      responses:
        '200':
          description: Sales order line updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderLineDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Sales order or line not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderLineDTO'
  /orders/salesOrders/{orderId}/cancellations:
    post:
      operationId: postSalesOrderCancellation
      summary: Cancel all or part of a sales order
      tags:
        - Sales orders
      description: |-
        Cancels an entire sales order, order lines for a sales order, or a partial quantity for order lines for a sales order. Provide the unique identifier that was returned when the sales order was created.

        The order must have a status of New, Hold, Ready for Fulfillment, Wave Built, or Back Ordered. In addition, an entire order can be canceled if it has a status of Draft, and a partial quantity of an order line can be canceled if the order has a status of Partially Released and there are backordered quantities for the order line. The cancellation can be applied only to the backordered quantity.
      security:
        - oauth2:
            - salesOrders/write
      parameters:
        - $ref: '#/components/parameters/orderId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCancellationDTO'
      responses:
        '200':
          description: Cancellation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Sales order not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/salesOrders/{orderId}/status:
    post:
      operationId: postSalesOrderStatus
      summary: Update the status of a sales order
      tags:
        - Sales orders
      description: |-
        Updates the status of an existing sales order. For example, you can update the status of an order from Hold to New when it is ready for fulfillment. Supported status updates include:

        * From Draft to New, Hold, or Canceled
        * From New to Hold or Canceled
        * From Hold to New or Canceled
        * From Ready for Fulfillment to New, Hold, or Canceled
        * From Wave Built to New, Hold, or Canceled
        * From Back Ordered to New, Hold, or Canceled

        Provide the unique identifier that was returned when the sales order was created.
      security:
        - oauth2:
            - salesOrders/write
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/salesOrderStatus'
      responses:
        '200':
          description: Update successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Sales order not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
    get:
      operationId: getSalesOrderStatus
      summary: Get the status of a sales order
      tags:
        - Sales orders
      description: Retrieves the status of an existing sales order. Provide the unique identifier that was returned when the sales order was created.
      security:
        - oauth2:
            - salesOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        '200':
          description: Status found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderStatusDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Sales order not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/customerOrders:
    post:
      operationId: postCustomerOrder
      summary: Create or update a customer order
      tags:
        - Customer orders
      description: "Creates a new customer order or updates data for an existing customer order.\n\nIf the customer order is successfully received in Deposco, then an HTTP status code of 202 is returned in the response as well as a request status of Pending and a transaction ID. Event-based processing then takes a new order through automated validations and actions to prepare the order for fulfillment. If acknowledgements have been enabled in the order management profile that is assigned to the order, then the order may be accepted or rejected.\n\nYou can then retrieve the status of the staged request by using the GET operation with the asynchronous operations (async) endpoint and the transaction ID to determine the status of the order, or use the GET operation with the customer order endpoint to retrieve functional information for the order.\n\nThe requirements to update data for a customer order depend on the status of the customer order and any associated fulfillment orders, as well as the order management profile that is assigned to the order.\n\nDecreasing the quantity of an order line is considered a cancellation. Use the endpoint for canceling all or part of a customer order instead.\n\t\t\t\t\t\t<div class=\"alert alert-info d-flex gap-3\">\n\t\t\t\t\t\t\t\t<i class=\"material-icons\">info</i><p class=\"mb-0\"><b>Product Subscription Requirement</b>:\n\t\t\t\t\t\tEnterprise Order Management</p>\n</div>"
      security:
        - oauth2:
            - customerOrders/write
      x-license-requirements:
        - description: Enterprise Order Management
      responses:
        '202':
          description: Customer order request staged
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncRequestIdDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerOrderRequestDTO'
    get:
      operationId: getCustomerOrders
      summary: Get a list of customer orders
      tags:
        - Customer orders
      description: "Retrieves a list of customer orders, paginated and sorted by ID in descending order.\n\t\t\t\t\t\t<div class=\"alert alert-info d-flex gap-3\">\n\t\t\t\t\t\t\t\t<i class=\"material-icons\">info</i><p class=\"mb-0\"><b>Product Subscription Requirement</b>:\n\t\t\t\t\t\tEnterprise Order Management</p>\n</div>"
      security:
        - oauth2:
            - customerOrders/read
      x-license-requirements:
        - description: Enterprise Order Management
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - name: pageSize
          in: query
          description: Number of records returned on each page of the search results. The default page size is 25.
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
            minimum: 1
        - name: externalOrderNumber
          in: query
          description: Order number in an external system for the requested customer order.
          schema:
            type: string
        - name: tradingPartnerCode
          in: query
          description: Code for the trading partner that is assigned to the requested customer orders.
          schema:
            type: string
      responses:
        '200':
          description: Customer orders retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOrderResponseCollectionDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /orders/customerOrders/{orderId}:
    get:
      operationId: getCustomerOrder
      summary: Get a customer order
      tags:
        - Customer orders
      description: "Retrieves the details of an existing customer order. Provide the unique identifier for the customer order.\n\t\t\t\t\t\t<div class=\"alert alert-info d-flex gap-3\">\n\t\t\t\t\t\t\t\t<i class=\"material-icons\">info</i><p class=\"mb-0\"><b>Product Subscription Requirement</b>:\n\t\t\t\t\t\tEnterprise Order Management</p>\n</div>"
      security:
        - oauth2:
            - customerOrders/read
      x-license-requirements:
        - description: Enterprise Order Management
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        '200':
          description: Customer order found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOrderResponseDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Customer order not found
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /orders/customerOrders/{orderId}/customerOrderLines:
    get:
      operationId: getCustomerOrderLines
      summary: Get a list of order lines for a customer order
      tags:
        - Customer orders
      description: "Retrieves a list of order lines for a customer order, paginated and sorted by ID in descending order. Provide the unique identifier for the customer order.\n\t\t\t\t\t\t<div class=\"alert alert-info d-flex gap-3\">\n\t\t\t\t\t\t\t\t<i class=\"material-icons\">info</i><p class=\"mb-0\"><b>Product Subscription Requirement</b>:\n\t\t\t\t\t\tEnterprise Order Management</p>\n</div>"
      security:
        - oauth2:
            - customerOrders/read
      x-license-requirements:
        - description: Enterprise Order Management
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - name: pageSize
          in: query
          description: Number of records returned on each page of the search results. The default page size is 25.
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
            minimum: 1
        - name: externalLineNumber
          in: query
          description: Search field for external line number
          schema:
            type: string
      responses:
        '200':
          description: Customer order lines retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOrderLineCollectionDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /orders/customerOrders/{orderId}/customerOrderLines/{orderLineId}:
    get:
      operationId: getCustomerOrderLine
      summary: Get an order line for a customer order
      tags:
        - Customer orders
      description: "Retrieves the details of an existing order line for a customer order. Provide the unique identifiers for the customer order and order line.\n\t\t\t\t\t\t<div class=\"alert alert-info d-flex gap-3\">\n\t\t\t\t\t\t\t\t<i class=\"material-icons\">info</i><p class=\"mb-0\"><b>Product Subscription Requirement</b>:\n\t\t\t\t\t\tEnterprise Order Management</p>\n</div>"
      security:
        - oauth2:
            - customerOrders/read
      x-license-requirements:
        - description: Enterprise Order Management
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/orderLineId'
      responses:
        '200':
          description: Customer order line retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOrderLineDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Customer Order Line not found
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /orders/purchaseOrders:
    post:
      operationId: postPurchaseOrder
      summary: Create or update a purchase order
      tags:
        - Purchase orders
      description: |-
        Creates a new purchase order or updates data for an existing purchase order.

        You can update data attributes, add an order line, or increase the quantity of an order line when the purchase order is in any status except for Closed or Canceled.

        Decreasing the quantity of an order line is considered a cancellation. Use the endpoint for canceling all or part of a purchase order instead.
      security:
        - oauth2:
            - purchaseOrders/write
      responses:
        '200':
          description: Purchase order updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderDTO'
        '201':
          description: Purchase order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderDTO'
            examples:
              example:
                $ref: '#/components/examples/purchaseOrderRequest'
    get:
      operationId: getPurchaseOrders
      summary: Get a list of purchase orders
      tags:
        - Purchase orders
      description: Retrieves a list of purchase orders, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - purchaseOrders/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - name: pageSize
          in: query
          description: Number of records returned on each page of the search results. The default page size is 25.
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
            minimum: 1
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/number'
        - in: query
          name: orderStatus
          description: Status of the requested order.
          required: false
          schema:
            $ref: '#/components/schemas/properties-orderStatus'
      responses:
        '200':
          description: Purchase orders retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderCollectionDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/purchaseOrders/{orderId}:
    get:
      operationId: getPurchaseOrder
      summary: Get a purchase order
      tags:
        - Purchase orders
      description: Retrieves the details of an existing purchase order. Provide the unique identifier that was returned when the purchase order was created.
      security:
        - oauth2:
            - purchaseOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        '200':
          description: Purchase order found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Purchase order not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/purchaseOrders/{orderId}/orderLines:
    get:
      operationId: getPurchaseOrderLines
      summary: Get a list of order lines for a purchase order
      tags:
        - Purchase orders
      description: Retrieves a list of order lines for a purchase order, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the purchase order was created.
      security:
        - oauth2:
            - purchaseOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/searchId'
        - name: pageSize
          in: query
          description: Number of records returned on each page of the search results. The default page size is 25.
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
            minimum: 1
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/lineNumber'
        - in: query
          name: orderLineStatus
          description: Status of the requested order line.
          required: false
          schema:
            $ref: '#/components/schemas/properties-orderLineStatus'
      responses:
        '200':
          description: Purchase order lines retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderLineCollectionDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Purchase order lines not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/purchaseOrders/{orderId}/orderLines/{orderLineId}:
    get:
      operationId: getPurchaseOrderLine
      summary: Get an order line for a purchase order
      tags:
        - Purchase orders
      description: Retrieves the details of an existing order line for a purchase order. Provide the unique identifiers that were returned when the purchase order and order line were created.
      security:
        - oauth2:
            - purchaseOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/orderLineId'
      responses:
        '200':
          description: Purchase order line found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderLineDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Purchase order or line not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
    post:
      operationId: updatePurchaseOrderLine
      summary: Update an order line for a purchase order
      tags:
        - Purchase orders
      description: |-
        Updates data for an existing order line for a purchase order. Provide the unique identifiers that were returned when the purchase order and order line were created.

        You can update an order line when the purchase order is in any status except for Closed or Canceled.

        Decreasing the quantity of an order line is considered a cancellation. Use the endpoint for canceling all or part of a purchase order instead.
      security:
        - oauth2:
            - purchaseOrders/write
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/orderLineId'
      responses:
        '200':
          description: Purchase order line updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderLineDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Purchase order or line not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderLineDTO'
  /orders/purchaseOrders/{orderId}/cancellations:
    post:
      operationId: postPurchaseOrderCancellation
      summary: Cancel all or part of a purchase order
      tags:
        - Purchase orders
      description: |-
        Cancels an entire purchase order, order lines for a purchase order, or a partial quantity for order lines for a purchase order. Provide the unique identifier that was returned when the purchase order was created.

        To cancel an entire purchase order, the order must have a status of New, Hold, In-Transit, Arrived, or Receiving.

        To cancel an order line for a purchase order or a partial quantity of an order line, the order must have a status of New, Hold, In-Transit, Arrived, Receiving, or Partial Receipt, and the order line must have a status of New.

        You can also cancel an entire purchase order if it has a status of Draft.
      security:
        - oauth2:
            - purchaseOrders/write
      parameters:
        - $ref: '#/components/parameters/orderId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCancellationDTO'
      responses:
        '200':
          description: Cancellation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Purchase order not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/purchaseOrders/{orderId}/status:
    post:
      operationId: postPurchaseOrderOrderStatus
      summary: Update the status of a purchase order
      tags:
        - Purchase orders
      description: |-
        Updates the status of an existing purchase order. Supported status updates include:

        * From Draft to New, Hold, or Canceled
        * From New to Hold, In-Transit, Arrived, or Canceled
        * From Hold to New, In-Transit, Arrived, or Canceled
        * From In-Transit to New, Arrived, or Canceled
        * From Arrived to Canceled
        * From Receiving to Canceled
        * From Received to Closed  

        Provide the unique identifier that was returned when the purchase order was created.
      security:
        - oauth2:
            - purchaseOrders/write
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/purchaseOrderStatus'
      responses:
        '200':
          description: Update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Purchase order not found
        '429':
          $ref: '#/components/responses/RateLimit'
    get:
      operationId: getPurchaseOrderOrderStatus
      summary: Get the status of a purchase order
      tags:
        - Purchase orders
      description: Retrieves the status of an existing purchase order. Provide the unique identifier that was returned when the purchase order was created.
      security:
        - oauth2:
            - purchaseOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        '200':
          description: Status found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderStatusDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Purchase order not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/customerReturns:
    post:
      operationId: postCustomerReturns
      summary: Create or update a customer return
      tags:
        - Customer returns
      description: |-
        Creates a new customer return or updates data for an existing customer return.

        You can update data attributes, add an order line, or increase the quantity of an order line when the customer return is in any status except Canceled.

        Decreasing the quantity of an order line is considered a cancellation. Use the endpoint for canceling all or part of a customer return instead.
      security:
        - oauth2:
            - customerReturns/write
      responses:
        '200':
          description: Customer return updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReturnDTO'
        '201':
          description: Customer return created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReturnDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerReturnDTO'
            examples:
              example:
                $ref: '#/components/examples/customerReturnOrderRequest'
    get:
      operationId: getCustomerReturns
      summary: Get a list of customer returns
      tags:
        - Customer returns
      description: Retrieves a list of customer returns, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - customerReturns/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/searchId'
        - name: pageSize
          in: query
          description: Number of records returned on each page of the search results. The default page size is 25.
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
            minimum: 1
        - $ref: '#/components/parameters/number'
        - in: query
          name: orderStatus
          description: Status of the requested order.
          required: false
          schema:
            $ref: '#/components/schemas/CustomerReturnStatusDTO'
      responses:
        '200':
          description: Customer returns retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReturnCollectionDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/customerReturns/{orderId}:
    get:
      operationId: getCustomerReturn
      summary: Get a customer return
      tags:
        - Customer returns
      description: Retrieves the details of an existing customer return. Provide the unique identifier that was returned when the customer return was created.
      security:
        - oauth2:
            - customerReturns/read
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        '200':
          description: Customer return found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReturnDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Customer return not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/customerReturns/{orderId}/orderLines:
    get:
      operationId: getCustomerReturnLines
      summary: Get a list of order lines for a customer returns
      tags:
        - Customer returns
      description: Retrieves a list of order lines for a customer return, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the customer return was created.
      security:
        - oauth2:
            - customerReturns/read
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/searchId'
        - name: pageSize
          in: query
          description: Number of records returned on each page of the search results. The default page size is 25.
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
            minimum: 1
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/lineNumber'
        - in: query
          name: orderLineStatus
          description: Status of the requested order line.
          required: false
          schema:
            $ref: '#/components/schemas/CustomerReturnLineStatusDTO_properties-orderLineStatus'
      responses:
        '200':
          description: Customer return lines retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReturnLineCollectionDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Customer return lines not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/customerReturns/{orderId}/orderLines/{orderLineId}:
    get:
      operationId: getCustomerReturnLine
      summary: Get an order line for a customer return
      tags:
        - Customer returns
      description: Retrieves the details of an existing order line for a customer return. Provide the unique identifiers that were returned when the customer return and order line were created.
      security:
        - oauth2:
            - customerReturns/read
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/orderLineId'
      responses:
        '200':
          description: Customer return line found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReturnLineDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Customer return line not found
        '429':
          $ref: '#/components/responses/RateLimit'
    post:
      operationId: updateCustomerReturnLine
      summary: Update an order line for a customer return
      tags:
        - Customer returns
      description: |-
        Updates data for an existing order line for a customer return. Provide the unique identifiers that were returned when the customer return and order line were created.

        You can update an order line when the customer return is in any status except Canceled.

        Decreasing the quantity of an order line is considered a cancellation. Use the endpoint for canceling all or part of a customer return instead.
      security:
        - oauth2:
            - customerReturns/write
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/orderLineId'
      responses:
        '200':
          description: Customer return line updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReturnLineDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Customer return or line not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerReturnLineDTO'
  /orders/customerReturns/{orderId}/cancellations:
    post:
      operationId: postCustomerReturnsCancellation
      summary: Cancel all or part of an customer return
      tags:
        - Customer returns
      description: |-
        Cancels an entire customer return, order lines for a customer return, or a partial quantity for order lines for a customer return. Provide the unique identifier that was returned when the customer return was created.

        The order must have a status of New or Receiving.
      security:
        - oauth2:
            - customerReturns/write
      parameters:
        - $ref: '#/components/parameters/orderId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCancellationDTO'
      responses:
        '200':
          description: Cancellation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReturnDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Customer return not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/customerReturns/{orderId}/status:
    post:
      operationId: postCustomerReturnOrderStatus
      summary: Updates the status of a customer return
      tags:
        - Customer returns
      description: |-
        Updates the status of an existing customer return. Supported status updates include:

        * From New to Canceled
        * From Receiving to Canceled

        Provide the unique identifier that was returned when the customer return was created.
      security:
        - oauth2:
            - customerReturns/write
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/customerReturnStatus'
      responses:
        '200':
          description: Update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReturnDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Customer return not found
        '429':
          $ref: '#/components/responses/RateLimit'
    get:
      operationId: getCustomerReturnOrderStatus
      summary: Get the status of a customer return
      tags:
        - Customer returns
      description: Retrieves the status of an existing customer return. Provide the unique identifier that was returned when the customer return was created.
      security:
        - oauth2:
            - customerReturns/read
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        '200':
          description: Status found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReturnStatusDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Customer return not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/vendorReturns:
    post:
      operationId: postVendorReturns
      summary: Create or update a vendor return
      description: |-
        Creates a new vendor return or updates data for an existing vendor return.

        The requirements to update data for a vendor return depend on the type of update:

        * To update data attributes such as the shipping address, shipping service (Ship Via), planned ship date, or notes, the order must have a status of Draft, New, Hold, Ready for Fulfillment, Wave Built, or Back Ordered.

        * To add an order line or increase the quantity of an order line, the order must have a status of Draft, New, Hold, Ready for Fulfillment, Wave Built, or Back Ordered, and the order line must have a status of New or Back Ordered. If the order has a status of Partially Released and there are backordered or unreleased quantities for the order line, then you can increase the quantity of the order line. The increase is applied to the backordered or unreleased quantity.

        Decreasing the quantity of an order line is considered a cancellation. Use the endpoint for canceling all or part of a vendor return instead.
      tags:
        - Vendor returns
      security:
        - oauth2:
            - vendorReturns/write
      responses:
        '200':
          description: Vendor return updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorReturnDTO'
        '201':
          description: Vendor return created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorReturnDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorReturnDTO'
            examples:
              example:
                $ref: '#/components/examples/vendorReturnOrderRequest'
    get:
      operationId: getVendorReturns
      summary: Get a list of vendor returns
      description: Retrieves a list of vendor returns, paginated and sorted by ID in descending order.
      tags:
        - Vendor returns
      security:
        - oauth2:
            - vendorReturns/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/searchId'
        - name: pageSize
          in: query
          description: Number of records returned on each page of the search results. The default page size is 25.
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
            minimum: 1
        - $ref: '#/components/parameters/number'
        - in: query
          name: orderStatus
          description: Status of the requested order.
          required: false
          schema:
            $ref: '#/components/schemas/orderStatus'
      responses:
        '200':
          description: Vendor returns retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorReturnCollectionDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/vendorReturns/{orderId}:
    get:
      operationId: getVendorReturn
      summary: Get a vendor return
      description: Retrieves the details of an existing vendor return. Provide the unique identifier that was returned when the vendor return was created.
      tags:
        - Vendor returns
      security:
        - oauth2:
            - vendorReturns/read
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        '200':
          description: Vendor return found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorReturnDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Vendor return not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/vendorReturns/{orderId}/orderLines:
    get:
      operationId: getVendorReturnLines
      summary: Get a list of order lines for a vendor return
      tags:
        - Vendor returns
      description: Retrieves a list of order lines for a vendor return, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the vendor return was created.
      security:
        - oauth2:
            - vendorReturns/read
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/searchId'
        - name: pageSize
          in: query
          description: Number of records returned on each page of the search results. The default page size is 25.
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
            minimum: 1
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/lineNumber'
        - in: query
          name: orderLineStatus
          description: Status of the requested order line.
          required: false
          schema:
            $ref: '#/components/schemas/orderLineStatus'
      responses:
        '200':
          description: Vendor return lines retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorReturnLineCollectionDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Vendor return lines not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/vendorReturns/{orderId}/orderLines/{orderLineId}:
    get:
      operationId: getVendorReturnLine
      summary: Get an order line for a vendor return
      tags:
        - Vendor returns
      description: Retrieves the details of an existing order line for a vendor return. Provide the unique identifiers that were returned when the vendor return and order line were created.
      security:
        - oauth2:
            - vendorReturns/read
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/orderLineId'
      responses:
        '200':
          description: Vendor return line retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorReturnLineDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Vendor return line not found
        '429':
          $ref: '#/components/responses/RateLimit'
    post:
      operationId: updateVendorReturnLine
      summary: Update an order line for a vendor return
      tags:
        - Vendor returns
      description: |-
        Updates data for an existing order line for a vendor return. Provide the unique identifiers that were returned when the vendor return and order line were created.

        The requirements to update data for an order line depend on the type of update:

        * To update data attributes such as lot numbers or notes, the order must have a status of Draft, New, Hold, Ready for Fulfillment, Wave Built, or Back Ordered.

        * To increase the quantity of an order line, the order must have a status of Draft, New, Hold, Ready for Fulfillment, Wave Built, or Back Ordered, and the order line must have a status of New or Back Ordered. If the order has a status of Partially Released and there are backordered or unreleased quantities for the order line, then you can increase the quantity of the order line. The increase is applied to the backordered or unreleased quantity.

        Decreasing the quantity of an order line is considered a cancellation. Use the endpoint for canceling all or part of a vendor return instead.
      security:
        - oauth2:
            - vendorReturns/write
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/orderLineId'
      responses:
        '200':
          description: Vendor return line updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorReturnLineDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Vendor return or line not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorReturnLineDTO'
  /orders/vendorReturns/{orderId}/cancellations:
    post:
      operationId: postVendorReturnsCancellation
      summary: Cancel all or part of a vendor return
      tags:
        - Vendor returns
      description: |-
        Cancels an entire vendor return, order lines for a vendor return, or a partial quantity for order lines for a vendor return. Provide the unique identifier that was returned when the vendor return was created.

        The order must have a status of New, Hold, Ready for Fulfillment, Wave Built, or Back Ordered. A partial quantity of an order line can also be canceled if the order has a status of Partially Released and there are backordered quantities for the order line. The cancellation can be applied only to the backordered quantity.
      security:
        - oauth2:
            - vendorReturns/write
      parameters:
        - $ref: '#/components/parameters/orderId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCancellationDTO'
      responses:
        '200':
          description: Cancellation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorReturnDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Vendor return not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/vendorReturns/{orderId}/status:
    post:
      operationId: postVendorReturnStatus
      summary: Update the status of a vendor return
      tags:
        - Vendor returns
      description: Updates the status of an existing vendor return from either New or Hold to New, Hold, or Canceled. For example, you can update the status of an order from Hold to New when it is ready for fulfillment. Provide the unique identifier that was returned when the vendor return was created.
      security:
        - oauth2:
            - vendorReturns/write
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/vendorReturnStatus'
      responses:
        '200':
          description: Update successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorReturnDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Vendor return not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
    get:
      operationId: getVendorReturnStatus
      summary: Get the status of a vendor return
      tags:
        - Vendor returns
      description: Retrieves the status of an existing vendor return. Provide the unique identifier that was returned when the vendor return was created.
      security:
        - oauth2:
            - vendorReturns/read
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        '200':
          description: Status found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorReturnStatusDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Vendor return not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/outboundTransferOrders:
    post:
      operationId: postOutboundTransferOrders
      summary: Create or update an outbound transfer order
      tags:
        - Outbound transfer orders
      description: |-
        Creates a new outbound transfer order or updates data for an existing outbound transfer order.

        The requirements to update data for an outbound transfer order depend on the type of update:

        - To update data attributes such as the shipping service (Ship Via), planned ship date, or notes, the order must have a status of Draft, New, Ready for Fulfillment, Wave Built, or Back Ordered.

        - To add an order line or increase the quantity of an order line, the order must have a status of Draft, New, Ready for Fulfillment, Wave Built, or Back Ordered, and the order line must have a status of New or Back Ordered. If the order has a status of Released and there are backordered or unreleased quantities for the order line, then you can increase the quantity of the order line. The increase is applied to the backordered or unreleased quantity.

        Decreasing the quantity of an order line is considered a cancellation. Use the endpoint for canceling all or part of an outbound transfer order instead.
      security:
        - oauth2:
            - outboundTransferOrders/write
      responses:
        '200':
          description: Outbound transfer order updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundTransferOrderDTO'
        '201':
          description: Outbound transfer order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundTransferOrderDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboundTransferOrderDTO'
            examples:
              example:
                $ref: '#/components/examples/outboundTransferOrderRequest'
    get:
      operationId: getOutboundTransferOrders
      summary: Get a list of outbound transfer orders
      tags:
        - Outbound transfer orders
      description: Retrieves a list of outbound transfer orders, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - outboundTransferOrders/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/searchId'
        - name: pageSize
          in: query
          description: Number of records returned on each page of the search results. The default page size is 25.
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
            minimum: 1
        - $ref: '#/components/parameters/number'
        - in: query
          name: orderStatus
          description: Status of the requested order.
          required: false
          schema:
            $ref: '#/components/schemas/OutboundTransferOrderStatusDTO_properties-orderStatus'
      responses:
        '200':
          description: Outbound transfer orders retrieved
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/OutboundTransferOrderCollectionDTO'
                  - $ref: '#/components/schemas/CollectionResourceMeta'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/outboundTransferOrders/{orderId}:
    get:
      operationId: getOutboundTransferOrder
      summary: Get an outbound transfer order
      tags:
        - Outbound transfer orders
      description: Retrieves the details of an existing outbound transfer order. Provide the unique identifier that was returned when the outbound transfer order was created.
      security:
        - oauth2:
            - outboundTransferOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        '200':
          description: Outbound transfer order found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundTransferOrderDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Outbound transfer order not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/outboundTransferOrders/{orderId}/orderLines:
    get:
      operationId: getOutboundTransferOrderLines
      summary: Get a list of order lines for an outbound transfer order
      tags:
        - Outbound transfer orders
      description: Retrieves a list of order lines for an outbound transfer order, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the outbound transfer order was created.
      security:
        - oauth2:
            - outboundTransferOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/searchId'
        - name: pageSize
          in: query
          description: Number of records returned on each page of the search results. The default page size is 25.
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
            minimum: 1
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/lineNumber'
        - in: query
          name: orderLineStatus
          description: Status of the requested order line.
          required: false
          schema:
            $ref: '#/components/schemas/orderLineStatus'
      responses:
        '200':
          description: Outbound transfer order lines retrieved
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/OutboundTransferOrderLineCollectionDTO'
                  - $ref: '#/components/schemas/CollectionResourceMeta'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Outbound transfer order not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/outboundTransferOrders/{orderId}/orderLines/{orderLineId}:
    get:
      operationId: getOutboundTransferOrderLine
      summary: Get an order line for an outbound transfer order
      tags:
        - Outbound transfer orders
      description: Retrieves the details of an existing order line for an outbound transfer order. Provide the unique identifiers that were returned when the outbound transfer order and order line were created.
      security:
        - oauth2:
            - outboundTransferOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/orderLineId'
      responses:
        '200':
          description: Outbound transfer order line found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundTransferOrderLineDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Outbound transfer order line not found
        '429':
          $ref: '#/components/responses/RateLimit'
    post:
      operationId: updateOutboundTransferOrderLine
      summary: Update an order line for a outbound transfer order
      tags:
        - Outbound transfer orders
      description: |-
        Updates data for an existing order line for an outbound transfer order. Provide the unique identifiers that were returned when the outbound transfer order and order line were created.

        The requirements to update data for an order line depend on the type of update:

        - To update data attributes such as the shipping service (Ship Via), planned ship date, or notes, the order must have a status of Draft, New, Ready for Fulfillment, Wave Built, or Back Ordered.

        - To increase the quantity of an order line, the order must have a status of Draft, New, Ready for Fulfillment, Wave Built, or Back Ordered, and the order line must have a status of New or Back Ordered. You can also increase the quantity of the order line if the order has a status of Released and there are backordered or unreleased quantities for the order line. The increase is applied to the backordered or unreleased quantity.

        Decreasing the quantity of an order line is considered a cancellation. Use the endpoint for canceling all or part of an outbound transfer order instead.
      security:
        - oauth2:
            - outboundTransferOrders/write
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/orderLineId'
      responses:
        '200':
          description: Outbound transfer order line updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundTransferOrderLineDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Outbound transfer order or line not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboundTransferOrderLineDTO'
  /orders/outboundTransferOrders/{orderId}/cancellations:
    post:
      operationId: postOutboundTransferOrderCancellation
      summary: Cancel all or part of an outbound transfer order
      tags:
        - Outbound transfer orders
      description: |-
        Cancels an entire outbound transfer order, order lines for an outbound transfer order, or a partial quantity for order lines for an outbound transfer order. Provide the unique identifier that was returned when the outbound transfer order was created.

        The order must have a status of New, Wave Built, or Back Ordered.
      security:
        - oauth2:
            - outboundTransferOrders/write
      parameters:
        - $ref: '#/components/parameters/orderId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCancellationDTO'
      responses:
        '200':
          description: Cancellation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundTransferOrderDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Outbound transfer order not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/outboundTransferOrders/{orderId}/status:
    post:
      operationId: postOutboundTransferOrderStatus
      summary: Update the status of an outbound transfer order
      tags:
        - Outbound transfer orders
      description: |-
        Updates the status of an existing outbound transfer order. Supported status updates include:  

        * From New to Hold or Canceled
        * From Hold to New or Canceled
        * From Ready for Fulfillment to New, Hold, or Canceled
        * From Wave Built to New, Hold, or Canceled
        * From Back Ordered to New, Hold, or Canceled

        Provide the unique identifier that was returned when the outbound transfer order was created.
      security:
        - oauth2:
            - outboundTransferOrders/write
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/updateStatus'
      responses:
        '200':
          description: Update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundTransferOrderStatusDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Outbound transfer order not found
        '429':
          $ref: '#/components/responses/RateLimit'
    get:
      operationId: getOutboundTransferOrderStatus
      summary: Get the status of an outbound transfer order
      tags:
        - Outbound transfer orders
      description: Retrieves the status of an existing outbound transfer order. Provide the unique identifier that was returned when the outbound transfer order was created.
      security:
        - oauth2:
            - outboundTransferOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        '200':
          description: Status found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundTransferOrderStatusDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Outbound transfer order not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/inboundTransferOrders:
    post:
      operationId: postInboundTransferOrders
      summary: Create or update an inbound transfer order
      tags:
        - Inbound transfer orders
      description: |-
        Creates a new inbound transfer order or updates data for an existing inbound transfer order.

        You can update data attributes, add an order line, or increase the quantity of an order line when the inbound transfer order is in any status except Canceled.

        Decreasing the quantity of an order line is considered a cancellation. Use the endpoint for canceling all or part of an inbound transfer order instead.
      security:
        - oauth2:
            - inboundTransferOrders/write
      responses:
        '200':
          description: Inbound transfer order updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundTransferOrderDTO'
        '201':
          description: Inbound transfer order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundTransferOrderDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundTransferOrderDTO'
            examples:
              example:
                $ref: '#/components/examples/inboundTransferOrderRequest'
    get:
      operationId: getInboundTransferOrders
      summary: Get a list of inbound transfer orders
      tags:
        - Inbound transfer orders
      description: Retrieves a list of inbound transfer orders, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - inboundTransferOrders/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/searchId'
        - name: pageSize
          in: query
          description: Number of records returned on each page of the search results. The default page size is 25.
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
            minimum: 1
        - $ref: '#/components/parameters/number'
        - in: query
          name: orderStatus
          description: Status of the requested order.
          required: false
          schema:
            $ref: '#/components/schemas/InboundTransferOrderStatusDTO'
      responses:
        '200':
          description: Inbound transfer orders retrieved
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/InboundTransferOrderCollectionDTO'
                  - $ref: '#/components/schemas/CollectionResourceMeta'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/inboundTransferOrders/{orderId}:
    get:
      operationId: getInboundTransferOrder
      summary: Get an inbound transfer order
      tags:
        - Inbound transfer orders
      description: Retrieves the details of an existing inbound transfer order. Provide the unique identifier that was returned when the inbound transfer order was created.
      security:
        - oauth2:
            - inboundTransferOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        '200':
          description: Inbound transfer order found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundTransferOrderDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Inbound transfer order not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/inboundTransferOrders/{orderId}/orderLines:
    get:
      operationId: getInboundTransferOrderLines
      summary: Get a list of order lines for an inbound transfer order
      tags:
        - Inbound transfer orders
      description: Retrieves a list of order lines for an inbound transfer order, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the inbound transfer order was created.
      security:
        - oauth2:
            - inboundTransferOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/searchId'
        - name: pageSize
          in: query
          description: Number of records returned on each page of the search results. The default page size is 25.
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
            minimum: 1
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/lineNumber'
        - in: query
          name: orderLineStatus
          description: Status of the requested order line.
          required: false
          schema:
            $ref: '#/components/schemas/InboundTransferOrderLineStatusDTO_properties-orderLineStatus'
      responses:
        '200':
          description: Inbound transfer order lines retrieved
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/InboundTransferOrderLineCollectionDTO'
                  - $ref: '#/components/schemas/CollectionResourceMeta'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Inbound transfer order not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/inboundTransferOrders/{orderId}/orderLines/{orderLineId}:
    get:
      operationId: getInboundTransferOrderLine
      summary: Get an order line for an inbound transfer order
      tags:
        - Inbound transfer orders
      description: Retrieves the details of an existing order line for an inbound transfer order. Provide the unique identifiers that were returned when the inbound transfer order and order line were created.
      security:
        - oauth2:
            - inboundTransferOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/orderLineId'
      responses:
        '200':
          description: Inbound transfer order line found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundTransferOrderLineDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Inbound transfer order line not found
        '429':
          $ref: '#/components/responses/RateLimit'
    post:
      operationId: updateInboundTransferOrderLine
      summary: Update an order line for an inbound transfer order
      tags:
        - Inbound transfer orders
      description: |-
        Updates data for an existing order line for an inbound transfer order. Provide the unique identifiers that were returned when the inbound transfer order and order line were created.

        You can update an order line when the inbound transfer order is in any status except Canceled.

        Decreasing the quantity of an order line is considered a cancellation. Use the endpoint for canceling all or part of an inbound transfer order instead.
      security:
        - oauth2:
            - inboundTransferOrders/write
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/orderLineId'
      responses:
        '200':
          description: Inbound transfer order line updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundTransferOrderLineDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Inbound transfer order or line not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundTransferOrderLineDTO'
  /orders/inboundTransferOrders/{orderId}/cancellations:
    post:
      operationId: postInboundTransferOrderCancellation
      summary: Cancel all or part of an inbound transfer order
      tags:
        - Inbound transfer orders
      description: |-
        Cancels an entire inbound transfer order, order lines for an inbound transfer order, or a partial quantity for order lines for an inbound transfer order. Provide the unique identifier that was returned when the inbound transfer order was created.

        The order must have a status of New or Receiving.
      security:
        - oauth2:
            - inboundTransferOrders/write
      parameters:
        - $ref: '#/components/parameters/orderId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCancellationDTO'
      responses:
        '200':
          description: Cancellation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundTransferOrderDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Inbound transfer order not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /orders/inboundTransferOrders/{orderId}/status:
    post:
      operationId: postInboundTransferOrderStatus
      summary: Update the status of an inbound transfer order
      tags:
        - Inbound transfer orders
      description: Updates the status of an existing inbound transfer order from either New or Receiving to Canceled. Provide the unique identifier that was returned when the inbound transfer order was created.
      security:
        - oauth2:
            - inboundTransferOrders/write
      parameters:
        - $ref: '#/components/parameters/orderId'
        - $ref: '#/components/parameters/updateStatus'
      responses:
        '200':
          description: Update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundTransferOrderStatusDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Inbound transfer order not found
        '429':
          $ref: '#/components/responses/RateLimit'
    get:
      operationId: getInboundTransferOrderStatus
      summary: Get the status of an inbound transfer order
      tags:
        - Inbound transfer orders
      description: Retrieves the status of an existing inbound transfer order. Provide the unique identifier that was returned when the inbound transfer order was created.
      security:
        - oauth2:
            - inboundTransferOrders/read
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        '200':
          description: Status found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundTransferOrderStatusDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Inbound transfer order not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /trips:
    get:
      operationId: getTrips
      summary: Get a list of trips
      tags:
        - Trips
      description: Retrieves a list of trips, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - trips/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/pageSize'
        - name: number
          in: query
          description: Number of the requested trip.
          schema:
            type: string
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
      responses:
        '200':
          description: Trips retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripCollectionDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /trips/{tripId}:
    get:
      operationId: getTripById
      summary: Get a trip
      tags:
        - Trips
      description: Retrieves the details of an existing trip. Provide the unique identifier that was returned when the trip was created.
      security:
        - oauth2:
            - trips/read
      parameters:
        - $ref: '#/components/parameters/trip_id_path_param'
      responses:
        '200':
          description: Trip found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Trip not found
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /shipments/outboundShipments:
    get:
      operationId: getOutboundShipments
      summary: Get a list of outbound shipments
      tags:
        - Outbound shipments
      description: Retrieves a list of outbound shipments, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - outboundShipments/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/shipmentNumber'
        - name: orderNumber
          in: query
          description: Order number of the order that is related to the requested shipments.
          schema:
            type: string
        - name: customerOrderNumber
          in: query
          description: Customer order number for the order that is related to the requested shipments. This parameter filters results based on the `customerOrderNumber` field on the order header. For fulfillment orders that were generated from customer orders in Bright Order, `customerOrderNumber` is set to the `externalOrderNumber` on the customer order header.
          schema:
            type: string
        - $ref: '#/components/parameters/shipmentStatus'
        - $ref: '#/components/parameters/shippedAfter'
      responses:
        '200':
          description: Outbound shipments retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundShipmentCollectionDTO'
              examples:
                example:
                  $ref: '#/components/examples/outboundShipmentCollection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
  /shipments/outboundShipments/{shipmentId}:
    get:
      operationId: getOutboundShipment
      summary: Get an outbound shipment
      tags:
        - Outbound shipments
      description: Retrieves the details of an existing outbound shipment. Provide the unique identifier that was returned when the shipment was created.
      security:
        - oauth2:
            - outboundShipments/read
      parameters:
        - $ref: '#/components/parameters/shipmentId'
      responses:
        '200':
          description: Outbound shipment found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundShipmentDTO'
              examples:
                example:
                  $ref: '#/components/examples/outboundShipment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Outbound shipment not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /shipments/outboundShipments/{shipmentId}/shipmentLines:
    get:
      operationId: getOutboundShipmentLines
      summary: Get a list of shipment lines for an outbound shipment
      tags:
        - Outbound shipments
      description: Retrieves a list of shipment lines for an outbound shipment, paginated and sorted by ID in descending order. Provide the unique identifier that was returned when the shipment was created.
      security:
        - oauth2:
            - outboundShipments/read
      parameters:
        - $ref: '#/components/parameters/shipmentId'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/shipmentLineNumber'
      responses:
        '200':
          description: Outbound shipment found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundShipmentLineCollectionDTO'
              examples:
                example:
                  $ref: '#/components/examples/outboundShipmentLineCollection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Outbound shipment lines not found
        '429':
          $ref: '#/components/responses/RateLimit'
  /shipments/outboundShipments/{shipmentId}/shipmentLines/{shipmentLineId}:
    get:
      operationId: getOutboundShipmentLine
      summary: Get a shipment line for an outbound shipment
      tags:
        - Outbound shipments
      description: Retrieves the details of an existing shipment line for an outbound shipment. Provide the unique identifiers that were returned when the outbound shipment and shipment line were created.
      security:
        - oauth2:
            - outboundShipments/read
      parameters:
        - $ref: '#/components/parameters/shipmentId'
        - $ref: '#/components/parameters/shipmentLineId'
      responses:
        '200':
          description: Outbound shipment line found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundShipmentLineDTO'
              examples:
                example:
                  $ref: '#/components/examples/outboundShipmentLine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Outbound shipment or line not found
        '429':
          $ref: '#/components/responses/RateLimit'
        '500':
          $ref: '#/components/responses/Error'
  /async/bulkImports:
    post:
      operationId: postBulkImport
      summary: Perform a bulk import
      tags:
        - Asynchronous operations
      description: |-
        Performs a bulk import to create or update multiple entities in a single asynchronous request. 

        All of the entities that are listed in the request body must be the same type of entity, and the entity type must be provided as a parameter for the request. The entities must be provided in an array of JSON objects. Refer to the POST endpoint for the specific entity type for details on the required format for the JSON objects.

        Only one bulk import request can be processed at a time, and the objects in the request may not be processed in the order they were listed. The request must be less than the maximum file size for the API gateway of 10 MB. The import must complete within one hour. Otherwise, the import stops processing.

        If the bulk import request is successfully received in Deposco, then an HTTP status code of 202 is returned in the response along with a transaction ID.

        You can then retrieve the status of the asynchronous request by using the `GET` endpoint for asynchronous operations and the transaction ID. One of the following responses is returned for the status request:
        - `Success` - All entities were successfully created or updated.
        - `Failed` - None of the entities were successfully created or updated. Individual error messages are provided for each entity.
        - `Partially Failed` - Some entities were successfully created or updated, but a failure occurred for one or more entities.
        - `Processing` - The request is still processing.
        - `Error` - An unexpected error occurred.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBulkRequestDTO'
      responses:
        '202':
          description: Asynchronous bulk import staged
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncRequestIdDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /async/{requestId}:
    get:
      operationId: getRequest
      summary: Get the status of an asynchronous request
      tags:
        - Asynchronous operations
      description: Retrieves the status of an asynchronous request. Provide the unique identifier that was returned when the request was submitted.
      security: []
      parameters:
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: Asynchronous request found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncResponseDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Asynchronous request not found
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /inventory/facilities/{facilityId}/locations/{locationId}/updates:
    post:
      operationId: updateDiscreteInventory
      summary: Update inventory attributes
      tags:
        - Inventory
      description: "Updates inventory attributes for an item at a specific location in a facility. Available attributes include status, quantity, inventory condition, and item tracking attributes such as lot number, serial number, born on date, and expiration date.\n\t\t\t\t\t\t<div class=\"alert alert-info d-flex gap-3\">\n\t\t\t\t\t\t\t\t<i class=\"material-icons\">info</i><p class=\"mb-0\"><b>Product Subscription Requirement</b>:\n\t\t\t\t\t\tDiscrete Inventory</p>\n</div>"
      security:
        - oauth2:
            - inventory/write
      x-license-requirements:
        - description: Discrete Inventory
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/facilityId'
        - $ref: '#/components/parameters/location_id_path_param'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryUpdateDTO'
      responses:
        '200':
          description: Inventory attributes updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryUpdateDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /inventory/inventoryAdjustments:
    get:
      operationId: getInventoryAdjustments
      summary: Get a list of inventory adjustments
      tags:
        - Inventory
      description: Retrieves a list of inventory adjustments, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - inventory/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/searchId'
        - name: actionType
          in: query
          description: Action type of the requested inventory adjustment.
          schema:
            type: string
            enum:
              - Adjustment
              - Status Change
        - name: facilityNumber
          in: query
          description: Facility number of the facility for the requested inventory adjustment.
          schema:
            type: string
        - name: itemNumber
          in: query
          description: Item number of the item for the requested inventory adjustment.
          schema:
            type: string
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: Inventory adjustments retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryAdjustmentCollectionDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /receipts:
    get:
      operationId: getReceipts
      summary: Get a list of receipts
      tags:
        - Receipts
      description: Retrieves a list of receipts, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - receipts/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/orderId-2'
        - $ref: '#/components/parameters/orderLineId-2'
        - in: query
          name: status
          description: Status of the receipt.
          required: false
          schema:
            type: string
            enum:
              - Received
              - Canceled
        - name: lotNumber
          in: query
          description: Lot number of the receipt.
          schema:
            type: string
        - name: serialNumber
          in: query
          description: Serial number of the receipt.
          schema:
            type: string
      responses:
        '200':
          description: Receipts retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptCollectionDTO'
              examples:
                item:
                  $ref: '#/components/examples/receiptCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
  /billing/transactions:
    get:
      operationId: getBillableTransactions
      summary: Get a list of billable transactions
      tags:
        - Billable transactions
      description: Retrieves a list of billable transactions, paginated and sorted by ID in descending order.
      security:
        - oauth2:
            - billingTransactions/read
      parameters:
        - $ref: '#/components/parameters/businessUnit'
          required: true
        - name: billingProfileName
          in: query
          description: Name of the billing profile that is associated with the requested billable transaction.
          schema:
            type: string
        - name: billingConfigType
          in: query
          description: Type of billing config record that is associated with the requested billable transaction.
          schema:
            type: string
        - name: facility
          in: query
          description: Facility number of the facility for the requested billable transaction.
          schema:
            type: string
        - name: status
          in: query
          description: Status of the requested billable transaction.
          schema:
            type: string
            enum:
              - Approved
              - Rejected
              - Pending Approval
        - name: orderId
          in: query
          description: ID of the order header that is associated with the requested billable transaction.
          schema:
            type: string
        - name: transactionType
          in: query
          description: Type of the requested billable transaction.
          schema:
            type: string
        - name: transactionNumber
          in: query
          description: Transaction number of the requested billable transaction.
          schema:
            type: string
        - name: transactionSource
          in: query
          description: Source system from which the requested billable transaction was generated.
          schema:
            type: string
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/updatedAfter'
        - $ref: '#/components/parameters/searchId'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: Billable transactions retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillableTransactionCollectionDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimit'
        default:
          $ref: '#/components/responses/Error'
components:
  x-licenseRequirements:
    deliveryPromise:
      productCode: PF001_OMS
      productServiceCode: CUSTOMER_DELIVERY_PROMISE
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://developer.deposco.com/applications/install?client_id={{client_id}}
          refreshUrl: https://auth.deposco.com/oauth2/token
          tokenUrl: https://auth.deposco.com/oauth2/token
          scopes:
            items/read: Read items
            items/write: Modify items
            kits/read: Read kits
            kits/write: Modify kits
            tradingPartners/read: Read trading partners
            tradingPartners/write: Modify trading partners
            companies/read: Read companies
            companies/write: Modify companies
            facilities/read: Read facilities
            facilities/write: Modify facilities
            zones/read: Read zones
            zones/write: Modify zones
            locations/read: Read locations
            locations/write: Modify locations
            users/read: Read users
            users/write: Modify users
            salesOrders/read: Read sales orders
            salesOrders/write: Modify sales orders
            purchaseOrders/read: Read purchase orders
            purchaseOrders/write: Modify purchase orders
            outboundTransferOrders/read: Read outbound transfer orders
            outboundTransferOrders/write: Modify outbound transfer orders
            inboundTransferOrders/read: Read inbound transfer orders
            inboundTransferOrders/write: Modify inbound transfer orders
            customerReturns/read: Read customer returns
            customerReturns/write: Modify customer returns
            vendorReturns/read: Read vendor returns
            vendorReturns/write: Modify vendor returns
            customerOrders/read: Read customer orders
            customerOrders/write: Modify customer orders
            containers/read: Read containers
            containers/write: Modify containers
            trips/read: Read trips
            trips/write: Modify trips
            outboundShipments/read: Read outbound shipments
            outboundShipments/write: Modify outbound shipments
            receipts/read: Read receipts
            receipts/write: Modify receipts
            inventory/write: Modify inventory
            inventoryAdjustments/read: Read inventory adjustments
            itemDeliveryPromise/write: Request Delivery Promise per item
            checkoutDeliveryPromise/write: Request Delivery Promise per shopping cart
      x-scope-categories:
        masterData:
          label: Master Data
          subcategories:
            - name: items
              label: Items
            - name: kits
              label: Kits
            - name: tradingPartners
              label: Trading partners
            - name: companies
              label: Companies
            - name: facilities
              label: Facilities
            - name: zones
              label: Zones
            - name: locations
              label: Locations
            - name: users
              label: Users
            - name: containers
              label: Containers
            - name: inventory
              label: Inventory
        orders:
          label: Orders
          subcategories:
            - name: salesOrders
              label: Sales orders
            - name: customerOrders
              label: Customer orders
            - name: purchaseOrders
              label: Purchase orders
            - name: customerReturns
              label: Customer returns
            - name: vendorReturns
              label: Vendor returns
            - name: outboundTransferOrders
              label: Outbound transfer orders
            - name: inboundTransferOrders
              label: Inbound transfer orders
        shippingAndReceiving:
          label: Shipping and Receiving
          subcategories:
            - name: outboundShipments
              label: Outbound shipments
            - name: trips
              label: Trips
            - name: receipts
              label: Receipts
        async:
          label: Asynchronous Operations
          subcategories:
            - name: asynchronousOperations
              label: Asynchronous operations
        deliveryPromise:
          label: Customer Delivery Promise
          subcategories:
            - name: itemDeliveryPromise
              label: Item delivery promise
            - name: checkoutDeliveryPromise
              label: Checkout delivery promise
  parameters:
    businessUnit:
      name: businessUnit
      in: query
      description: Code for the company (business unit) to which the resource is assigned. Optional if the application is restricted to one company.
      required: false
      schema:
        type: string
    searchId:
      name: searchId
      in: query
      description: ID that is returned in the links section of incomplete search results. Specify the search ID in this parameter to continue retrieving search results. Other search-related parameters are overridden by this parameter.
      required: false
      schema:
        type: string
    createdAfter:
      name: createdAfter
      in: query
      description: Search field for finding records created after the specified date and time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
      schema:
        type: string
        format: date-time
    updatedAfter:
      name: updatedAfter
      in: query
      description: Search field for finding records updated after the specified date and time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
      schema:
        type: string
        format: date-time
    pageSize:
      name: pageSize
      in: query
      description: Number of records returned on each page of the search results. The default page size is 50.
      required: false
      schema:
        type: integer
        default: 50
        maximum: 100
        minimum: 1
    itemId:
      name: itemId
      in: path
      description: ID of the requested item.
      required: true
      schema:
        type: string
    packId:
      name: packId
      in: path
      description: ID of the requested pack.
      required: true
      schema:
        type: string
    upcId:
      name: upcId
      in: path
      description: ID of the requested item or pack UPC.
      required: true
      schema:
        type: string
    kitHeaderId:
      name: kitHeaderId
      in: path
      description: ID of the requested kit header record.
      required: true
      schema:
        type: string
    kitDetailId:
      name: kitDetailId
      in: path
      description: ID of the requested kit detail record.
      required: true
      schema:
        type: string
    tradingpartner_id_path_param:
      name: tradingPartnerId
      in: path
      description: ID of the requested trading partner.
      required: true
      schema:
        type: integer
    companyId:
      name: companyId
      in: path
      description: ID of the requested company or business unit.
      required: true
      schema:
        type: string
    facilityId:
      name: facilityId
      in: path
      description: ID of the requested facility.
      required: true
      schema:
        type: string
    zone_id_path_param:
      name: zoneId
      in: path
      description: ID of the requested zone.
      required: true
      schema:
        type: string
    location_id_path_param:
      name: locationId
      in: path
      description: ID of the requested location.
      required: true
      schema:
        type: string
    storage_id_path_param:
      name: storageDetailId
      in: path
      description: ID of the requested storage detail record.
      required: true
      schema:
        type: string
    userId:
      name: userId
      in: path
      description: ID of the requested user account.
      required: true
      schema:
        type: string
    container_id_path_param:
      name: containerId
      in: path
      description: ID of the requested container.
      required: true
      schema:
        type: string
    number:
      name: number
      in: query
      description: Order number of the requested order.
      schema:
        type: string
    orderId:
      name: orderId
      in: path
      description: ID of the requested order header.
      required: true
      schema:
        type: integer
    lineNumber:
      name: lineNumber
      in: query
      description: Line number of the requested order line.
      schema:
        type: string
    orderLineId:
      name: orderLineId
      in: path
      description: ID of the requested order line.
      required: true
      schema:
        type: integer
    salesOrderStatus:
      name: value
      in: query
      description: Status to which the requested sales order should be updated.
      required: true
      schema:
        type: string
        enum:
          - New
          - Hold
          - Canceled
    purchaseOrderStatus:
      name: value
      in: query
      description: Status to which the requested purchase order should be updated.
      required: true
      schema:
        type: string
        enum:
          - New
          - Hold
          - In-Transit
          - Arrived
          - Canceled
          - Closed
    customerReturnStatus:
      name: value
      in: query
      description: Status to which the requested purchase order should be updated.
      required: true
      schema:
        type: string
        enum:
          - New
          - Canceled
    vendorReturnStatus:
      name: value
      in: query
      description: Status to which the requested vendor order should be updated.
      required: true
      schema:
        type: string
        enum:
          - New
          - Hold
          - Canceled
    updateStatus:
      name: value
      in: query
      description: Status to which the requested order should be updated.
      required: true
      schema:
        type: string
        enum:
          - New
          - Canceled
          - Hold
    trip_id_path_param:
      name: tripId
      in: path
      description: ID of the requested trip.
      required: true
      schema:
        type: string
    shipmentNumber:
      name: shipmentNumber
      in: query
      description: Number of the requested shipment.
      schema:
        type: string
    shipmentStatus:
      name: shipmentStatus
      in: query
      description: Status of the requested shipments.
      schema:
        type: string
        enum:
          - New
          - Shipping
          - Shipped
          - Rolled Back
    shippedAfter:
      name: shippedAfter
      in: query
      description: Search field for finding shipments that were shipped on or after the specified date and time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. Note that results are returned based on the actual ship date, not the shipment creation date.
      schema:
        type: string
        format: date-time
    shipmentId:
      name: shipmentId
      in: path
      description: ID of the requested shipment.
      required: true
      schema:
        type: integer
    shipmentLineNumber:
      name: shipmentLineNumber
      in: query
      description: Line number of the requested shipment line.
      schema:
        type: string
    shipmentLineId:
      name: shipmentLineId
      in: path
      description: ID of the requested shipment line.
      required: true
      schema:
        type: integer
    requestId:
      name: requestId
      in: path
      description: ID of the asynchronous request for which a status is requested. The request ID is returned in the response for the asynchronous request.
      required: true
      schema:
        type: string
    orderId-2:
      name: orderId
      in: query
      description: ID of the related order header.
      required: true
      schema:
        type: integer
    orderLineId-2:
      name: orderLineId
      in: query
      description: ID of the related order line.
      required: true
      schema:
        type: integer
  headers:
    X-DEP-REQUEST-ID:
      description: Unique identifier for each API call
      schema:
        type: string
    X-DEP-RATE:
      description: Rate limit applied to integration
      schema:
        type: number
    X-DEP-WAIT:
      description: Seconds to wait before retrying
      schema:
        type: number
  responses:
    Error:
      description: Unexpected error
      headers:
        X-DEP-REQUEST-ID:
          $ref: '#/components/headers/X-DEP-REQUEST-ID'
      content:
        application/json:
          schema:
            properties:
              errorMessages:
                type: array
                items:
                  type: string
              pid:
                type: string
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedAPIResponse'
    RateLimit:
      description: Rate limit reached
      headers:
        X-DEP-RATE:
          $ref: '#/components/headers/X-DEP-RATE'
        X-DEP-WAIT:
          $ref: '#/components/headers/X-DEP-WAIT'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RateLimitAPIResponse'
    BadRequest:
      description: Request could not be processed due to a client error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestAPIResponse'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForbiddenAPIResponse'
    NotFound:
      description: Requested data could not be found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundAPIResponse'
  schemas:
    EntityRef:
      type: object
      description: Reference to another resource. For create and update operations, only `id` or `businessKey` must be provided. For read operations, all properties are returned.
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          description: Identifier of the resource.
        businessKey:
          type: object
          description: Collection of properties that uniquely identify the resource.
          additionalProperties: true
        href:
          type: string
          description: Hyperlink to access the resource.
          nullable: true
          readOnly: true
    Measurement:
      type: object
      description: Object that contains the measurement and the unit of measure (UOM).
      properties:
        measurement:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Numeric value for the measurement.
        units:
          type: string
          nullable: true
          enum:
            - in
            - cm
            - ft
            - m
            - CU in
            - CU cm
            - CU ft
            - CU m
          description: |
            Unit of measure for physical dimensions. Available values include:
             * `in` - Inch
             * `cm` - Centimeters
             * `ft` - Feet
             * `m` - Meters
             * `CU in`, `CU cm`, `CU ft`, `CU m` - Cubic (to be used with volume)
    Dimension:
      type: object
      description: Measurements for physical dimensions such as length, width, height, and volume.
      properties:
        length:
          $ref: '#/components/schemas/Measurement'
        width:
          $ref: '#/components/schemas/Measurement'
        height:
          $ref: '#/components/schemas/Measurement'
        volume:
          $ref: '#/components/schemas/Measurement'
    WeightUOM:
      type: string
      enum:
        - lb
        - kg
        - oz
        - g
      description: Unit of measure for the weight.
    NullableEntityRef:
      type: object
      nullable: true
      description: Nullable reference to another resource. For create and update operations, only `id` or `businessKey` must be provided. For read operations, all properties are returned.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
    PackUPCDTO:
      title: Pack UPC
      type: object
      required:
        - value
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        pack:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        value:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: UPC or barcode value.
    Link:
      type: object
      description: Object that contains a hyperlink and a description of how the linked resources are related to the current data.
      readOnly: true
      properties:
        rel:
          type: string
          description: Description of the how the linked resources are related.
        href:
          type: string
          description: Hyperlink to the related resources
    Complete:
      type: boolean
      readOnly: true
      description: Whether this is the last page of resources when multiple resources are returned.
    CollectionResourceMeta:
      type: object
      description: Collection of resources.
      properties:
        links:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Link'
        complete:
          $ref: '#/components/schemas/Complete'
        pages:
          type: integer
          readOnly: true
          description: Number of pages of resources when multiple resources are returned.
          minimum: 1
          nullable: true
    PackUPCCollectionDTO:
      type: object
      title: Pack UPCs
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/PackUPCDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    CarrierSpecialServiceDTO:
      title: Carrier special service
      type: object
      description: Object that defines settings for value-added shipping and handling services provided by a specific shipping carrier.
      required:
        - shipVendor
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        shipVendor:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          maxLength: 50
          description: Shipping carrier that provides the service.
        item:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        pack:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        salesOrder:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        orderLine:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        customerOrder:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        customerOrderLine:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        battery:
          type: boolean
          description: Whether the associated item includes a battery or is itself a battery.
        batteryMaterial:
          type: string
          nullable: true
          enum:
            - LITHIUM_ION
            - LITHIUM_METAL
          description: Type of lithium battery.
        batteryPacking:
          type: string
          nullable: true
          enum:
            - CONTAINED_IN_EQUIPMENT
            - PACKED_WITH_EQUIPMENT
            - STANDALONE
          description: How a lithium battery is packed in the shipment.
        batteryRegulation:
          type: string
          nullable: true
          enum:
            - IATA_SECTION_II
          description: Used when shipping lithium batteries.
        chemicalIdentifier:
          type: string
          nullable: true
          minLength: 1
          maxLength: 30
          description: Record identifier for the chemical in either the UPS Chemical Table or the Personal Chemical Table for the UPS account. Applies only for shipments with UPS socket-based integrations.
        commodityRegulations:
          type: string
          nullable: true
          minLength: 1
          maxLength: 30
          description: Code for the regulation level of the dangerous goods commodity. Applies only for shipments with UPS socket-based integrations. Provide a value of FR for Fully Regulated, LQ for Limited Quantity, EQ for Excepted Quantity, or LR for Lightly Regulated.
        dangerousGoodsAmount:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          nullable: true
          description: Weight of the dangerous good. If a weight is not specified, then the pack weight of the item is used.
        dangerousGoodsUOM:
          type: string
          nullable: true
          minLength: 1
          maxLength: 20
          description: Unit of measure for the weight of the dangerous good.
        hazardClass:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          nullable: true
          description: IATA hazardous material class or division.
        hazardLabelDescription:
          type: string
          nullable: true
          minLength: 1
          maxLength: 50
          description: Type of label that is required on the package for the dangerous goods commodity. Applies only for shipments with UPS socket-based integrations.
        hazmatExceptedQuantity:
          type: string
          nullable: true
          minLength: 1
          maxLength: 20
          description: Maximum quantity per inner and outer packaging for transporting dangerous goods as excepted quantities (very small volumes).
        hazmatLimitedQuantity:
          type: string
          nullable: true
          minLength: 1
          maxLength: 20
          description: Maximum quantity per inner packaging or article for transporting dangerous goods as limited quantities.
        limitedQtyPackingInstructions:
          type: string
          nullable: true
          minLength: 1
          maxLength: 20
          description: Packing instructions for limited quantity hazardous materials.
        packagingGroupType:
          type: string
          nullable: true
          minLength: 1
          maxLength: 30
          description: Group level that reflects the potential degree of danger represented by the regulated good. Provide a value of (null), I, II, or III. Applies only for shipments with UPS socket-based integrations.
        packagingType:
          type: string
          nullable: true
          minLength: 1
          maxLength: 50
          description: Either the IATA packing group for a hazardous commodity or the FedEx package type when packing a shipment in FedEx Express flat rate packaging.
        packingInstructions:
          type: string
          nullable: true
          minLength: 1
          maxLength: 20
          description: IATA documentation and limits for validation of an individual packing group or category.
        properShippingName:
          type: string
          nullable: true
          minLength: 1
          maxLength: 50
          description: Proper shipping name for the hazardous material.
        regulationSet:
          type: string
          nullable: true
          minLength: 1
          maxLength: 30
          description: Regulatory set that is associated with a shipment of dangerous goods. Applies only for shipments with UPS socket-based integrations. Provide a value of ADR for Europe to Europe ground movement, CFR for hazardous materials regulated by the U.S. Department of Transportation within the U.S. or ground shipments to Canada, IATA for worldwide air movement, or TDG for Canada-to-Canada ground movement or Canada-to-U.S. standard movement.
        subRiskClass1:
          type: string
          nullable: true
          minLength: 1
          maxLength: 30
          description: Subrisk class for a dangerous good. Applies only for shipments with UPS socket-based integrations.
        subRiskClass2:
          type: string
          nullable: true
          minLength: 1
          maxLength: 30
          description: Additional subrisk class for a dangerous good with multiple subrisks. Applies only for shipments with UPS socket-based integrations.
        subRiskClass3:
          type: string
          nullable: true
          minLength: 1
          maxLength: 30
          description: Additional subrisk class for a dangerous good with multiple subrisks. Applies only for shipments with UPS socket-based integrations.
        technicalName:
          type: string
          nullable: true
          minLength: 1
          maxLength: 20
          description: Recognized chemical name for the dangerous good that is currently used in scientific handbooks, journals, and texts. Applies only for shipments with UPS socket-based integrations.
        transportationMode:
          type: string
          nullable: true
          minLength: 1
          maxLength: 30
          description: Mode of transportation for the shipment that includes dangerous goods. Applies only for shipments with UPS socket-based integrations. Provide a value of Highway, Ground, PAX, Passenger Aircraft, CAO, or Cargo Aircraft Only.
        unNumber:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
          description: Four-digit number/code that is assigned to a dangerous good by the United Nations Subcommittee of Experts on the Transport of Dangerous Goods. The number identifies dangerous goods and applies all provisions such as packaging, marking, labeling of packages, compatibility between dangerous goods, carriage during transport, and file are spillage control measures in case of emergency.
        shipsWithDryIce:
          type: boolean
          description: Whether an item ships in a package with dry ice.
        medicalUse:
          type: boolean
          description: Whether the item is used for medical purposes, which may enable you to take advantage of discounted rates. Applies only for shipments with UPS socket-based integrations.
        alcohol:
          type: boolean
          description: Whether the associated item is classified as alcohol such as beer, wine, or spirits. Supported only for shipments with UPS socket-based integrations.
        holdAtLocation:
          type: boolean
          description: Whether the shipment should be held at a specific FedEx location instead of being delivered directly to the customer or trading partner that placed the order. The customer or trading partner can then pick up the shipment at their convenience.
        returnReceiptRequested:
          type: boolean
          description: Whether to request a return receipt for shipments with Stamps.com.
        saturdayDelivery:
          type: boolean
          description: Whether to request Saturday delivery for the shipment that is associated with the order. Applies only for shipments with UPS socket-based integrations.
        liftgateDelivery:
          type: boolean
          description: Whether to request liftgate delivery for the shipment that is associated with the order when the order includes large, heavy items.
        exportComplianceStatement:
          type: string
          nullable: true
          description: Reserved for future use.
          enum:
            - NO EEI 30.37(F)
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the Carrier Special Service record was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the Carrier Special Service record was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    PackDTO:
      title: Pack
      description: Unit of measure for an item.
      type: object
      required:
        - type
        - quantity
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        item:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        type:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          maxLength: 50
          description: 'Type of pack. Use one of the following values: `Each`, `Case`, `Bundle`, `Loose`, `Mill Unit`, `Outer`, `Unit`'
        quantity:
          type: integer
          minimum: 1
          description: Number of items in the pack. Must be a positive integer.
        key:
          type: string
          readOnly: true
          description: System-generated identification key for the pack, which is created by adding the item, pack type, and quantity.
        name:
          type: string
          nullable: true
          maxLength: 100
          description: Name that identifies the pack.
        newPackFlag:
          type: boolean
          description: Set to true to require users to capture the weight and dimensions of the pack the next time that the pack is received. This field is then automatically set to false.
        dimensions:
          $ref: '#/components/schemas/Dimension'
        weight:
          type: object
          description: Weight of the pack for the item.
          required:
            - weight
          properties:
            weight:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Numeric value for the weight.
            units:
              $ref: '#/components/schemas/WeightUOM'
        cartonGroup:
          type: string
          nullable: true
          maxLength: 30
          description: ID of the carton type. Used with cartonization to narrow the list of available box types to use for shipping.
        preferredCartonType:
          $ref: '#/components/schemas/NullableEntityRef'
        readyToShip:
          type: boolean
          nullable: true
          description: Set to true if the item is already in a shipping container and therefore does not require any further packaging for shipping, or false if the item must be packed in a box for shipping. For example, a vacuum cleaner can be shipped in its own box.
        lpnTrackingEnabled:
          type: boolean
          description: Whether to enable LPN tracking for the pack.
        upcs:
          $ref: '#/components/schemas/PackUPCCollectionDTO'
        carrierSpecialServices:
          type: array
          items:
            $ref: '#/components/schemas/CarrierSpecialServiceDTO'
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the pack was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the pack was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    ItemUPCDTO:
      title: Item UPC
      type: object
      required:
        - value
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        item:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        value:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: UPC or barcode value.
    ItemUPCCollectionDTO:
      type: object
      title: Item UPCs
      description: Array of UPCs for the item.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ItemUPCDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    ItemVendorDTO:
      title: Item vendor
      type: object
      required:
        - tradingPartner
      description: Record that connects an item to a supplier or vendor (trading partner) from which the item is purchased.
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        item:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        tradingPartner:
          $ref: '#/components/schemas/EntityRef'
        itemSkuUpc:
          type: string
          nullable: true
          maxLength: 50
          description: UPC of the item for the supplier.
        unitCost:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Unit cost for purchasing the item from the supplier.
        shortDescription:
          type: string
          nullable: true
          maxLength: 50
          description: Brief description of the item from the supplier.
        longDescription:
          type: string
          nullable: true
          description: Full description of the item from the supplier.
        isPreferred:
          type: boolean
          description: Whether the supplier is the preferred supplier from which the item is purchased.
        fulfillmentType:
          type: string
          nullable: true
          description: How orders for the item are fulfilled by the supplier.
          enum:
            - INVENTORY
            - DROP SHIP
            - CROSS SHIP
        reorderPoint:
          type: integer
          description: Inventory level at which stock needs to be reordered. Used for informational purposes only. For inventory planning with Bright Inventory, this value is automatically calculated and stored on the plan item record.
        reorderQuantity:
          type: integer
          description: Minimum quantity of the item that can be ordered from the supplier. Used for informational purposes only. For inventory planning with Bright Inventory, this value is defined on the plan item supplier record.
        quantity:
          type: integer
          description: Quantity of the item that is available from the supplier. Used for informational purposes only.
        importReference1:
          type: string
          nullable: true
          maxLength: 50
          description: Used for socket integrations to store the supplier's ID for the item.
        importReference2:
          type: string
          nullable: true
          maxLength: 50
          description: Used for socket integrations to store additional supplier information for the item, such as a SKU.
        exportReference1:
          type: string
          nullable: true
          maxLength: 50
          description: Used for socket integrations to store information about the supplier.
        exportReference2:
          type: string
          nullable: true
          maxLength: 50
          description: Used for socket integrations to store information about the supplier.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the item vendor was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the item vendor was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    ItemVendorCollectionDTO:
      type: object
      title: Item vendors
      description: List of vendors from which the item can be purchased.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ItemVendorDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    ComponentDTO:
      title: Component
      type: object
      description: Record that identifies the item as a component of an assembly or kit.
      required:
        - subComponent
        - quantity
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        quantity:
          type: integer
          description: Quantity of the subcomponent that is required to make the item.
        item:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        subComponent:
          $ref: '#/components/schemas/EntityRef'
          description: Item number for the subcomponent. The record for the item must already exist in Deposco.
        sequence:
          type: integer
          description: Numeric sequence for including the component item when the assembly or kit is built.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the component was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the component was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    HSCodeDTO:
      title: HS code
      type: object
      required:
        - code
        - country
      description: Harmonized System (HS) Code for an item and country that is included in international shipment requests for customs authorities to identify products for assessing duties and taxes.
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        item:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        productCategory:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        country:
          $ref: '#/components/schemas/EntityRef'
        code:
          type: string
          description: HS code for the item and country.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the HS code was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the HS code was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    HSCodeCollectionDTO:
      type: object
      title: HS codes
      description: Array of HS Codes.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/HSCodeDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    CustomFieldDTO:
      title: Custom field
      type: object
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        name:
          type: string
          maxLength: 200
          description: Name of the custom field.
        value:
          type: string
          maxLength: 300
          description: Value of the custom field.
        type:
          type: string
          enum:
            - String
            - Integer
            - Double
          description: Data type of the custom field.
        item:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        orderHeader:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        orderLine:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        shipment:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the field value was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the field value was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    ChannelListingDTO:
      title: Channel listing
      type: object
      description: Record for managing the link between the item in Deposco and the data for the item in an external system.
      required:
        - integration
        - ref1
        - packQuantity
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        item:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        integration:
          $ref: '#/components/schemas/EntityRef'
        listingStatus:
          type: string
          nullable: true
          enum:
            - Linked
            - Deleted
          description: |-
            Status of the channel listing. A value of Linked indicates that the listing is active in the external system and linked to the item in Deposco.
            A value of Deleted is returned if the listing was created through a socket integration and then deleted in the external system.
        packQuantity:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Used in some sockets to perform the unit of measure conversion when an item is sold in different quantities.
        description:
          type: string
          nullable: true
          description: Reserved for future use for a description of the item from the external system.
        listingPrice:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          nullable: true
          description: Reserved for future use for the price of the item that is provided in the sales channel.
        itemCondition:
          type: string
          nullable: true
          description: Reserved for future use primarily in marketplaces to designate an item as Used or New.
        saleable:
          type: boolean
          description: Whether Deposco should fulfill and process orders for the item.
        syncInventory:
          type: boolean
          description: Used for socket integrations to indicate whether Deposco should perform inventory sync for the item.
        ref1:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: Internal reference for the item in the external system. This field should be set to the item number or ID.
        ref2:
          type: string
          nullable: true
          description: Internal reference for the item in the external system.
        ref3:
          type: string
          nullable: true
          description: Internal reference for the item in the external system.
        ref4:
          type: string
          nullable: true
          description: Internal reference for the item in the external system.
        ref5:
          type: string
          nullable: true
          description: Internal reference for the item in the external system.
        secRef1:
          type: string
          nullable: true
          description: Secondary reference for the item in the external system.
        secRef2:
          type: string
          nullable: true
          description: Secondary reference for the item in the external system.
        secRef3:
          type: string
          nullable: true
          description: Secondary reference for the item in the external system.
        secRef4:
          type: string
          nullable: true
          description: Secondary reference for the item in the external system.
        secRef5:
          type: string
          nullable: true
          description: Secondary reference for the item in the external system.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the channel listing was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the channel listing was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    ItemDTO:
      title: Item
      type: object
      required:
        - number
        - businessUnit
        - packs
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        number:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          maxLength: 40
          description: Unique identification code for the item.
        name:
          type: string
          nullable: true
          maxLength: 150
          description: Name that identifies the item.
        packs:
          type: array
          description: Array of packs for the item.
          items:
            $ref: '#/components/schemas/PackDTO'
        upcs:
          $ref: '#/components/schemas/ItemUPCCollectionDTO'
        shortDescription:
          type: string
          nullable: true
          maxLength: 100
          description: Brief description of the item. This description appears to warehouse personnel who use the handheld menu. The description should include only Unicode characters that are encoded with UTF-8 using 1 to 3 bytes. Encoded symbols that take up to 4 bytes, such as emojis, are not supported.
        longDescription:
          type: string
          nullable: true
          description: In-depth description of the item. This description may appear in reports for the item. The description should include only Unicode characters that are encoded with UTF-8 using 1 to 3 bytes. Encoded symbols that take up to 4 bytes, such as emojis, are not supported.
        itemType:
          type: string
          nullable: true
          enum:
            - Simple
            - Custom Fee
          description: Type of item. The default value is 'Simple'. The other available value is 'CustomFee'.
        intangibleItemFlag:
          type: boolean
          description: Used for items such as marketing collateral that are packed in shipment boxes in addition to the ordered items.
        externalImageUrl:
          type: string
          nullable: true
          maxLength: 200
          description: URL for an image of the item that is typically stored in a content management system. A format of GIF, PNG, or JPG is recommended.
        productCategory:
          $ref: '#/components/schemas/NullableEntityRef'
        abcCategory:
          type: string
          nullable: true
          enum:
            - A
            - B
            - C
          description: |
            Sales velocity of the item based on the item's sales history. Top selling items are A, then B, and so on. This field is informational only, and does not impact any workflow processes or other product functionality.
        brandName:
          type: string
          nullable: true
          maxLength: 35
          description: Brand name associated with the product, typically used in retail merchandising.
        productCode:
          type: string
          nullable: true
          maxLength: 40
          description: Identification code for the product, typically used in retail merchandising.
        colorCode:
          type: string
          nullable: true
          maxLength: 100
          description: Identification code of the color variation for the product, typically used in retail merchandising.
        colorName:
          type: string
          nullable: true
          maxLength: 100
          description: Name of the color variation for the product, typically used in retail merchandising.
        size:
          type: string
          nullable: true
          maxLength: 100
          description: Size of the product, typically used in retail merchandising.
        styleName:
          type: string
          nullable: true
          maxLength: 100
          description: Name of the product, typically used in retail merchandising.
        styleNumber:
          type: string
          nullable: true
          maxLength: 100
          description: Style number for the product, typically used in retail merchandising. Note that in retail merchandising, the style number and product code for an item are the same.
        hazmat:
          type: boolean
          description: Whether the item includes hazardous materials.
        hazmatCode:
          type: string
          nullable: true
          maxLength: 4
          description: Code associated with the hazardous materials in the item.
        inspectionRequired:
          type: boolean
          description: Whether stock for the item must be inspected when it is received.
        unitPrice:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Price per unit for the item.
        purchaseCost:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Cost to purchase the item; either the average purchase cost or the purchase cost for each vendor or pack.
        taxable:
          type: boolean
          description: Whether tax should be calculated for the item when the item is included on a sales order.
        lotTrackingEnabled:
          type: boolean
          description: Whether stock for the item must include a lot number.
        serialTrackingEnabled:
          type: boolean
          description: Whether stock for the item must include a serial number.
        bornOnDateRequired:
          type: boolean
          description: Whether a born on date must be entered for the item.
        expirationDateRequired:
          type: boolean
          description: Whether an expiration date must be entered for the item.
        serialCapturePoint:
          type: string
          nullable: true
          description: |-
            Controls when item tracking attributes are captured and entered into the stock unit records for an item. Available values include:

            - `Null` - Capture all item tracking attributes during receiving, and confirm during picking, packing, and inventory move.

            - `Receiving` - Capture all item tracking attributes during receiving, and confirm during picking, packing, and inventory move.

            - `Picking` - Capture lot number, born on date, and expiration date at receiving, and confirm during picking, packing, and inventory move. Capture serial number during picking; confirm during packing and inventory move.

            - `Packing` - Capture lot number, born on date, and expiration date at receiving, and confirm during picking, packing, and inventory move. Capture serial number during packing; confirm during inventory move.
          enum:
            - Receiving
            - Picking
            - Packing
        inventoryTrackingEnabled:
          type: boolean
          description: Whether to track inventory for the item. Set to false if the item can be received, but no stock units should be created. If an item is considered intangible and should not be picked, then this field should be set to false.
        shippable:
          type: boolean
          description: Whether the item can be shipped for order fulfillment.
        salesEnabledFlag:
          type: boolean
          description: Whether to enable sales of the item through the Sales Order Entry feature.
        cycleCount:
          type: boolean
          description: Whether locations that are associated with the item should be counted by using either a cycle count or a physical count.
        cycleCountFrequency:
          type: integer
          description: How often the item should be cycle counted, measured in days. The frequency should be configured on the cycle count profile, and if configured there, takes precedence over the setting for the item.
        receiveOverTolerance:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          nullable: true
          description: During the receiving process, the number of items that can be received over the order pack quantity of the order line. Provide a value based on the percentage over the order line; for example, a value of 1.2 allows receiving of 20% over tolerance.
        reorderPoint:
          type: integer
          description: Minimum number of items to maintain inventory. This is the minimum value in a min/max inventory strategy. This field is informational only, and does not impact any workflow processes or other product functionality.
        reorderQuantity:
          type: integer
          description: Number of items to order to ensure sufficient inventory. This is the maximum value in a min/max inventory strategy.
        tradingPartner:
          $ref: '#/components/schemas/NullableEntityRef'
        itemVendors:
          $ref: '#/components/schemas/ItemVendorCollectionDTO'
        components:
          type: array
          description: For bundled products that are composed of multiple individual items, array of component items that are used to assemble the item.
          items:
            $ref: '#/components/schemas/ComponentDTO'
        kitOrderOnly:
          type: boolean
          description: For bundled products that are composed of multiple individual items, whether the system will only release orders if component inventory is available. If inventory is only available for the parent kit, the system will move to a status of Back Ordered.
        kitStockOnly:
          type: boolean
          description: For bundled products that are composed of multiple individual items, whether to release only kitted items and not the individual items that could be assembled during order processing during the Build and Release Wave process. To release this item on a wave, the item must already be kit assembled through kit to stock processes. This item field setting overrides parameters on an order release profile during the Build and Release Wave process.
        hsCodes:
          $ref: '#/components/schemas/HSCodeCollectionDTO'
        originCountry:
          type: string
          nullable: true
          description: Country in which the item was made. Required when shipping international orders.
        classType:
          type: string
          nullable: true
          maxLength: 20
          description: Freight class of the commodity as classified by the National Motor Freight Classification (NMFC).
        nmfcNumber:
          type: string
          nullable: true
          maxLength: 50
          description: NMFC number, which is used to classify an item and receive the most accurate pricing for freight shipping.
        transportationClass:
          type: string
          nullable: true
          maxLength: 50
          description: General product description as listed in the NMFC.
        weight:
          type: object
          description: Weight of the item.
          required:
            - weight
          properties:
            weight:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Numeric value for the weight.
            units:
              $ref: '#/components/schemas/WeightUOM'
        carrierSpecialServices:
          type: array
          items:
            $ref: '#/components/schemas/CarrierSpecialServiceDTO'
        customAttribute1:
          type: string
          nullable: true
          maxLength: 200
          description: Custom field for the item.
        customAttribute2:
          type: string
          nullable: true
          maxLength: 200
          description: Custom field for the item.
        customAttribute3:
          type: string
          nullable: true
          maxLength: 200
          description: Custom field for the item.
        customAttribute4:
          type: string
          nullable: true
          maxLength: 200
          description: Custom field for the item.
        customAttribute5:
          type: string
          nullable: true
          maxLength: 200
          description: Custom field for the item.
        customFields:
          type: array
          description: Array of custom fields for the item.
          items:
            $ref: '#/components/schemas/CustomFieldDTO'
        channels:
          type: array
          description: Array of channel listings for the item.
          items:
            $ref: '#/components/schemas/ChannelListingDTO'
        accountingType:
          type: string
          nullable: true
          maxLength: 50
          description: Used by the QuickBooks Desktop socket.
        defaultLedgerAccount:
          type: string
          nullable: true
          maxLength: 50
          description: Used by the QuickBooks Desktop socket.
        cogsAccount:
          type: string
          nullable: true
          maxLength: 40
          description: Used by the QuickBooks Desktop socket.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the item was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the item was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    ItemCollectionDTO:
      type: object
      title: Items
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ItemDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    KitDetailDTO:
      title: Kit detail
      type: object
      required:
        - businessUnit
        - item
        - quantity
        - type
      description: Record for either the output item that results when the kit is assembled or an input item that is a component of the kit.
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        type:
          type: string
          enum:
            - Input
            - Output
          description: Whether the kit detail's item is created by the kit build (`Output`) or consumed in the kit build (`Input`).
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        kitHeader:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        item:
          $ref: '#/components/schemas/EntityRef'
        pack:
          $ref: '#/components/schemas/NullableEntityRef'
        quantity:
          type: integer
          description: Quantity of the item that is required for the kit.
        rank:
          type: integer
          description: Order of this kit detail in the build, if applicable.
        customAttribute1:
          type: string
          maxLength: 200
          description: Custom field for the kit detail.
        customAttribute2:
          type: string
          maxLength: 200
          description: Custom field for the kit detail.
        customAttribute3:
          type: string
          maxLength: 200
          description: Custom field for the kit detail.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the kit detail was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the kit detail was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    KitDetailCollectionDTO:
      type: object
      title: Kit details
      description: Collection of fields for associated kit detail records.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/KitDetailDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    KitHeaderDTO:
      title: Kit header
      type: object
      required:
        - name
        - businessUnit
      description: Record with information that applies to the kit as a whole.
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        name:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          maxLength: 50
          description: Name that identifies the kit.
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        kitUsage:
          type: string
          maxLength: 25
          description: Description of how the kit is used.
        kitDetails:
          $ref: '#/components/schemas/KitDetailCollectionDTO'
        minWorkorderSize:
          type: integer
          description: Minimum number of kits described by this kit header that can be built on a single workorder.
        maxWorkorderSize:
          type: integer
          description: Maximum number of kits described by this kit header that can be built on a single workorder.
        leadTime:
          type: integer
          description: Amount of time required to build the kit.
        customAttribute1:
          type: string
          maxLength: 40
          description: Custom field for the kit.
        customAttribute2:
          type: string
          maxLength: 40
          description: Custom field for the kit.
        customAttribute3:
          type: string
          maxLength: 40
          description: Custom field for the kit.
        createdDate:
          type: string
          readOnly: true
          format: date-time
          description: Date and time that the kit header was created.
        updatedDate:
          type: string
          readOnly: true
          format: date-time
          description: Date and time that the kit header was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    KitHeaderCollectionDTO:
      type: object
      title: Kit headers
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/KitHeaderDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    ErrorMessage:
      type: object
      readOnly: true
      description: Contains details about an error.
      properties:
        errorMessage:
          type: string
          description: Textual description of the error.
    UnauthorizedAPIResponse:
      type: object
      title: UnauthorizedAPIResponse
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
    RateLimitAPIResponse:
      type: object
      title: RateLimitAPIResponse
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
    BadRequestAPIResponse:
      type: object
      title: BadRequestAPIResponse
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
    TradingPartnerSiteDTO:
      title: Trading partner site
      type: object
      description: Locations or addresses for a trading partner.
      required:
        - siteName
      properties:
        self:
          $ref: '#/components/schemas/EntityRef'
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        tradingPartner:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        type:
          type: string
          maxLength: 20
          nullable: true
          description: Type of location. Available values are `Store` and `DC`.
        siteName:
          type: string
          maxLength: 50
          description: Name that identifies the trading partner site.
        siteCode:
          type: string
          maxLength: 20
          nullable: true
          description: Code for the site from an incoming electronic data interchange (EDI) file. Used to match and derive relevant information such as the destination distribution center (DC) or address.
        address:
          type: object
          nullable: true
          required:
            - attentionTo
            - line1
            - city
            - postalCode
          properties:
            type:
              type: string
              nullable: true
              enum:
                - SHIPTO
                - BILLTO
              description: Type of address, such as `SHIPTO` or `BILLTO`.
            attentionTo:
              type: string
              maxLength: 100
              description: Contact person for the trading partner site.
            line1:
              type: string
              maxLength: 64
              description: First line of the address for the trading partner site.
            line2:
              type: string
              maxLength: 64
              nullable: true
              description: Second line of the address for the trading partner site.
            line3:
              type: string
              maxLength: 64
              nullable: true
              description: Third line of the address for the trading partner site.
            line4:
              type: string
              maxLength: 64
              nullable: true
              description: Fourth line of the address for the trading partner site.
            city:
              type: string
              maxLength: 50
              description: City for the address for the trading partner site.
            stateProvince:
              type: string
              nullable: true
              description: State or province for the address for the trading partner site.
            postalCode:
              type: string
              maxLength: 20
              description: Postal code for the address for the trading partner site.
            country:
              type: string
              nullable: true
              description: Two-letter (ISO 3166-1 alpha-2) country code for the country in the address for the trading partner site.
        defaultShipVia:
          type: string
          nullable: true
          description: Default shipping service that should be used for shipments that are sent to the trading partner site.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the trading partner site was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the trading partner site was last updated.
    TradingPartnerSiteCollectionDTO:
      type: object
      title: Trading partner sites
      description: Collection of trading partner sites for the trading partner.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/TradingPartnerSiteDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    TradingPartnerParameterDTO:
      title: Trading partner parameter
      type: object
      description: Parameters define settings for the trading partner such as the report that should be used for formatting packing slips for the trading partner or the label template that should be used for formatting retailer labels for a retail/B2B customer.
      required:
        - number
      properties:
        self:
          $ref: '#/components/schemas/EntityRef'
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        tradingPartner:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        code:
          type: string
          maxLength: 30
          nullable: true
          description: Code for the parameter. Use a value of `SSCC_INCLUDE_AI` if the parameter is used for enabling generation of SSCC labels for the trading partner.
        number:
          type: string
          maxLength: 20
          description: Unique identifier for the parameter.
        description:
          type: string
          maxLength: 100
          nullable: true
          description: Additional text that provides information about the parameter.
        resultName:
          type: string
          maxLength: 100
          nullable: true
          description: Name of the result for the parameter. Use a value of `PackingSlipMessage` or `ReturnPolicyMessage` if the parameter is used for adding a general message or return policy message to packing slips for the trading partner. Use a value of `SSCC_INCLUDE_AI` if the parameter is used for enabling generation of SSCC labels for the trading partner.
        resultValue:
          type: string
          maxLength: 5000
          nullable: true
          description: Value of the result for the parameter. If the parameter is used for adding a message to packing slips for the trading partner, then enter the text of the message.  Use a value of `true` if the parameter is used for enabling generation of SSCC labels for the trading partner.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the parameter was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the parameter was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    TradingPartnerParameterCollectionDTO:
      type: object
      title: Trading partner parameters
      description: Collection of trading partner parameters for the trading partner.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/TradingPartnerParameterDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    ChannelDTO:
      title: Channel
      type: object
      required:
        - integration
        - ref1
      description: Record for managing the link between an entity in Deposco and the data for the entity in an external system.
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        integration:
          $ref: '#/components/schemas/EntityRef'
        schedulerTask:
          description: Used in socket integrations to store the name of the scheduler for the interface that was used for sending or receiving the data.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
        ref1:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: Internal reference for the entity in the external system. This field should be set to the ID or number for the entity.
        ref2:
          type: string
          nullable: true
          description: Internal reference for the entity in the external system.
        ref3:
          type: string
          nullable: true
          description: Internal reference for the entity in the external system.
        ref4:
          type: string
          nullable: true
          description: Internal reference for the entity in the external system.
        ref5:
          type: string
          nullable: true
          description: Internal reference for the entity in the external system.
        secRef1:
          type: string
          nullable: true
          description: Secondary reference for the entity in the external system.
        secRef2:
          type: string
          nullable: true
          description: Secondary reference for the entity in the external system.
        secRef3:
          type: string
          nullable: true
          description: Secondary reference for the entity in the external system.
        secRef4:
          type: string
          nullable: true
          description: Secondary reference for the entity in the external system.
        secRef5:
          type: string
          nullable: true
          description: Secondary reference for the entity in the external system.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the channel cross-reference was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the channel cross-reference was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    TradingPartnerDTO:
      title: Trading partner
      type: object
      required:
        - code
      description: External party to the company such as a supplier or vendor that provides products or services or a customer that purchases products.
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        code:
          type: string
          maxLength: 20
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: Unique identification code for the trading partner.
        name:
          type: string
          maxLength: 50
          description: Name of the trading partner. Required when the trading partner is the consignee partner on an order and will be responsible for shipping charges.
        partnershipType:
          type: string
          nullable: true
          description: Type of partnership that the company has with the trading partner. Use a value of `Customer` for partner companies that are purchasing products from the company. Use a value of `Vendor` for partner companies that a company is buying products from.
          enum:
            - Vendor
            - Customer
            - Bill-To
            - Drop Ship Vendor
            - Retailer Label and Parcel
            - Transportation Provider
            - Other
            - Company
        description:
          type: string
          nullable: true
          description: Additional information about the trading partner.
        contact:
          type: object
          description: Contact person for the trading partner.
          properties:
            firstName:
              nullable: true
              type: string
              maxLength: 30
              description: First name of the contact person.
            lastName:
              nullable: true
              type: string
              maxLength: 30
              description: Last name of the contact person.
            email:
              nullable: true
              type: string
              maxLength: 50
              description: Email address of the contact person.
            phone:
              nullable: true
              type: string
              maxLength: 30
              description: Phone number of the contact person.
            fax:
              nullable: true
              type: string
              maxLength: 20
              description: Fax number of the contact person.
        address:
          type: object
          description: Address for the trading partner.
          properties:
            line1:
              nullable: true
              type: string
              maxLength: 64
              description: First line of the address for the trading partner.
            line2:
              nullable: true
              type: string
              maxLength: 64
              description: Second line of the address for the trading partner.
            line3:
              nullable: true
              type: string
              maxLength: 64
              description: Third line of the address for the trading partner.
            line4:
              nullable: true
              type: string
              maxLength: 64
              description: Fourth line of the address for the trading partner.
            city:
              nullable: true
              type: string
              maxLength: 30
              description: City for the address for the trading partner.
            stateProvince:
              nullable: true
              type: string
              maxLength: 100
              description: State or province for the address for the trading partner.
            postalCode:
              nullable: true
              type: string
              maxLength: 20
              description: Postal code for the address for the trading partner.
            country:
              nullable: true
              type: string
              maxLength: 2
              description: Two-letter (ISO 3166-1 alpha-2) country code for the country in the address for the trading partner.
        billToContact:
          type: object
          description: Contact person for billing for the trading partner.
          properties:
            firstName:
              nullable: true
              type: string
              maxLength: 30
              description: First name of the contact person for billing.
            lastName:
              nullable: true
              type: string
              maxLength: 30
              description: Last name of the contact person for billing.
            email:
              nullable: true
              type: string
              maxLength: 50
              description: Email address of the contact person for billing.
            phone:
              nullable: true
              type: string
              maxLength: 30
              description: Phone number of the contact person for billing.
        billToAddress:
          type: object
          description: Billing address for the trading partner.
          properties:
            line1:
              nullable: true
              type: string
              maxLength: 64
              description: First line of the billing address for the trading partner.
            line2:
              nullable: true
              type: string
              maxLength: 64
              description: Second line of the billing address for the trading partner.
            line3:
              nullable: true
              type: string
              maxLength: 64
              description: Third line of the billing address for the trading partner.
            line4:
              nullable: true
              type: string
              maxLength: 64
              description: Fourth line of the billing address for the trading partner.
            city:
              nullable: true
              type: string
              maxLength: 30
              description: City for the billing address for the trading partner.
            stateProvince:
              nullable: true
              type: string
              maxLength: 100
              description: State or province for the billing address for the trading partner.
            postalCode:
              nullable: true
              type: string
              maxLength: 20
              description: Postal code for the billing address for the trading partner.
            country:
              nullable: true
              type: string
              maxLength: 2
              description: Two-letter (ISO 3166-1 alpha-2) country code for the country in the billing address for the trading partner.
        sites:
          $ref: '#/components/schemas/TradingPartnerSiteCollectionDTO'
        accountNumber:
          nullable: true
          type: string
          maxLength: 30
          description: Account number for the trading partner. Required when the trading partner is the consignee partner on an order and will be responsible for shipping charges.
        accountStatus:
          type: string
          nullable: true
          maxLength: 20
          description: If this field is set to `Credit Hold`, `Late Payment`, `On Hold`, or other values that are not `Active`, then the value appears next to the trading partner (customer) on the sales order entry page, which enables sales representatives to view the account status and determine whether to submit new orders for the account. If set to the default value of `Active`, then no account status appears on the sales order entry page.
        doingBusinessAs:
          nullable: true
          type: string
          maxLength: 50
          description: User-friendly company name. Used, for example, on documents that may be formatted for printing such as orders or invoices. Required when creating a Bill-To trading partner for purchase orders that are manually created through data entry in the Purchase Order application.
        packingSlipLevel:
          type: string
          nullable: true
          description: Whether a packing slip is printed at either the shipment level or at the LPN level for orders that are associated with the trading partner. Available values are `Shipment` and `Container`.
          enum:
            - Container
            - Shipment
        packingSlipReport:
          type: string
          nullable: true
          maxLength: 50
          description: Name of the global (Pentaho) report to use for formatting packing slips for orders that are associated with the trading partner.
        zplLabelReport:
          type: string
          nullable: true
          maxLength: 50
          description: Name of the label report to use when printing labels such as retail compliant labels for Single Scan Packing or Print to Panda. Use a comma-separated list to enter multiple values.
        sendASN:
          type: string
          nullable: true
          enum:
            - 'Yes'
            - 'No'
            - Fully Shipped
          description: |-
            Controls if and when an advance shipping notice (ASN) is sent for orders where the trading partner is the consignee partner:
             - `Fully Shipped` - Only send an ASN once the full order is shipped.
             - `No` - Never send an ASN. The ASN may be sent based on other configured processes.
             - `Yes` - Send an ASN for each shipment, even if the full order is not shipped.
        groupASNBy:
          type: string
          nullable: true
          enum:
            - ST
            - DC
          description: Used to group advance ship notices (ASNs) by store or distribution center. By default, one ASN is sent per order.
        groupPalletBy:
          type: string
          nullable: true
          description: Method for grouping pallets for retailer label printing by the Print to Panda process.
          enum:
            - TP_SITE
            - CONTRACT_NUMBER
            - CONTRACT_NUMBER_AND_TP_SITE
        expirationThresholdInDays:
          type: integer
          nullable: true
          description: Used with the 'Sort by FEFO within an expiration day threshold' pick strategy for an order release profile. During the stock allocation process, available pick locations are filtered based on whether the stock meets the threshold for the trading partner on the order.
        ssccNumbersRequiredForTrip:
          type: boolean
          nullable: true
          description: Whether to enable printing of retailer labels with the Print to Panda process.
        sequenceSSCCBy:
          type: string
          nullable: true
          description: |-
            Controls inner container grouping for the Print to Panda process (in other words, the type of Y value in the X of Y calculation).
             - `Item` - Group at the item-level container on the pallet.
             - `Pallet` - Group all containers on the pallet.
          enum:
            - Item
            - Pallet
        ucceanCompanyNumber:
          nullable: true
          type: string
          maxLength: 10
          description: Prefix that is used to generate serial shipping container codes (SSCCs) for shipping labels to retailers that require SSCC-18 codes.
        ssccExpansionDigit:
          type: integer
          description: Extension digit for a Serial Shipping Container Code (SSCC).
        priceList:
          $ref: '#/components/schemas/NullableEntityRef'
        taxRate:
          type: number
          description: Tax rate that is used to calculate tax for a sales order for the trading partner when the Tax Calculation Method is set to Manual on the sales order.
        dropShipFee:
          type: number
          description: Reserved for future use.
        qualityControlPercent:
          nullable: true
          type: number
          description: Reserved for future use.
        useShipFromForShipments:
          type: boolean
          nullable: true
          description: Whether to use the trading partner's address or the facility address as the Ship From address on shipping labels for orders where the trading partner is the consignee partner.
        upsAccountNumber:
          type: string
          nullable: true
          maxLength: 100
          description: UPS account number to use for shipments to the trading partner that are billed to the trading partner.
        fedexAccountNumber:
          type: string
          nullable: true
          maxLength: 10
          description: FedEx account number to use for shipments to the trading partner that are billed to the trading partner.
        transRoutingEnabled:
          type: boolean
          nullable: true
          description: Whether transportation routing is enabled for trips that are associated with the trading partner.
        minOrderAmount:
          type: number
          description: Minimum order amount for purchase orders that are submitted to the trading partner.
        paymentTerms:
          nullable: true
          type: string
          description: Identifies when payment is due for a purchase order where the trading partner is the supplier.
          enum:
            - Net 30
            - Net 45
            - Net 60
            - Net 90
            - Payment in advance
            - 2/10 Net 30
        defaultCurrencyCode:
          type: string
          nullable: true
          description: ISO currency code that is assigned to purchase orders that are generated from plan orders during inventory planning when the trading partner is the supplier.
          enum:
            - USD
            - EUR
            - MXN
            - CAN
            - GBP
        supplierBlackoutCalendar:
          $ref: '#/components/schemas/NullableEntityRef'
        parameters:
          $ref: '#/components/schemas/TradingPartnerParameterCollectionDTO'
        customAttribute1:
          type: string
          nullable: true
          maxLength: 50
          description: Custom field for the trading partner.
        customAttribute2:
          type: string
          nullable: true
          maxLength: 50
          description: Custom field for the trading partner.
        customAttribute3:
          type: string
          nullable: true
          maxLength: 50
          description: Custom field for the trading partner.
        customAttribute4:
          type: string
          nullable: true
          maxLength: 50
          description: Custom field for the trading partner.
        importReference1:
          nullable: true
          type: string
          maxLength: 50
          description: Used for matching incoming EDI files to the trading partner.
        importReference2:
          nullable: true
          type: string
          maxLength: 50
          description: Used for matching incoming EDI files to the trading partner.
        exportReference1:
          type: string
          nullable: true
          maxLength: 50
          description: Information about the trading partner that is sent as part of outgoing data that is associated with the trading partner.
        exportReference2:
          type: string
          nullable: true
          maxLength: 50
          description: Information about the trading partner that is sent as part of outgoing data that is associated with the trading partner.
        channels:
          type: array
          nullable: true
          description: Array of channel cross-references for the trading partner.
          items:
            $ref: '#/components/schemas/ChannelDTO'
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the trading partner was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the trading partner was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    TradingPartnerCollectionDTO:
      type: object
      title: Trading partners
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/TradingPartnerDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    ForbiddenAPIResponse:
      type: object
      title: ForbiddenAPIResponse
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
    Locale:
      type: string
      nullable: true
      enum:
        - EN_US
        - FR_CA
        - ES_MX
      description: |
        Language locale that is used to display text such as screen names and field labels in the Deposco user interface. Available values include:
          * `EN_US` - English US
          * `FR_CA` - French Canada
          * `ES_MX` - Spanish Mexico
    DateFormat:
      type: string
      nullable: true
      enum:
        - yyyy-MM-dd
        - dd-MM-yyyy
        - MMM dd, yyyy
      description: |
        Format that is used to display dates in the Deposco user interface.
    TimeZone:
      type: string
      nullable: true
      description: Time zone in which the resource is located. The time zone can be assigned at the company, facility, or user level. The assignment at the most specific level takes precedence.
      enum:
        - US/Alaska
        - US/Aleutian
        - US/Arizona
        - US/Central
        - US/East-Indiana
        - US/Eastern
        - US/Hawaii
        - US/Indiana-Starke
        - US/Michigan
        - US/Mountain
        - US/Pacific
        - US/Pacific-New
        - US/Samoa
        - Europe/Amsterdam
        - Europe/Andorra
        - Europe/Athens
        - Europe/Belfast
        - Europe/Belgrade
        - Europe/Berlin
        - Europe/Bratislava
        - Europe/Brussels
        - Europe/Bucharest
        - Europe/Budapest
        - Europe/Busingen
        - Europe/Chisinau
        - Europe/Copenhagen
        - Europe/Dublin
        - Europe/Gibraltar
        - Europe/Guernsey
        - Europe/Helsinki
        - Europe/Isle_of_Man
        - Europe/Istanbul
        - Europe/Jersey
        - Europe/Kaliningrad
        - Europe/Kiev
        - Europe/Lisbon
        - Europe/Ljubljana
        - Europe/London
        - Europe/Luxembourg
        - Europe/Madrid
        - Europe/Malta
        - Europe/Mariehamn
        - Europe/Minsk
        - Europe/Monaco
        - Europe/Moscow
        - Europe/Nicosia
        - Europe/Oslo
        - Europe/Paris
        - Europe/Podgorica
        - Europe/Prague
        - Europe/Riga
        - Europe/Rome
        - Europe/Samara
        - Europe/San_Marino
        - Europe/Sarajevo
        - Europe/Simferopol
        - Europe/Skopje
        - Europe/Sofia
        - Europe/Stockholm
        - Europe/Tallinn
        - Europe/Tirane
        - Europe/Tiraspol
        - Europe/Uzhgorod
        - Europe/Vaduz
        - Europe/Vatican
        - Europe/Vienna
        - Europe/Vilnius
        - Europe/Volgograd
        - Europe/Warsaw
        - Europe/Zagreb
        - Europe/Zaporozhye
        - Europe/Zurich
        - Asia/Baghdad
        - Asia/Bangkok
        - Asia/Calcutta
        - Asia/Dubai
        - Asia/Hong_Kong
        - Asia/Saigon
        - Asia/Seoul
        - Asia/Shanghai
        - Asia/Singapore
        - Asia/Taipei
        - Asia/Tokyo
        - Australia/ACT
        - Australia/Perth
        - Australia/Eucla
        - Australia/NSW
        - Australia/Melbourne
        - Australia/Adelaide
        - Australia/Queensland
        - Australia/North
        - Australia/South
        - Australia/Sydney
        - Australia/Tasmania
        - Australia/Victoria
    CompanyDTO:
      type: object
      title: Company
      description: Company record with contact and address information for a business or a business unit within a company. Also used for tenant companies in 3PL environments.
      required:
        - code
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        code:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          maxLength: 30
          description: Unique, short, alphanumeric code for the company. This code cannot be changed after the company is created.
        name:
          type: string
          nullable: true
          maxLength: 50
          description: Name of the company or business unit.
        description:
          type: string
          nullable: true
          description: Text that describes or provides additional information for the company or business unit.
        active:
          type: boolean
          default: true
          description: Whether the company is active and available for use.
        contact:
          type: object
          properties:
            firstName:
              type: string
              nullable: true
              maxLength: 30
              description: First name of the primary contact for the company.
            lastName:
              type: string
              nullable: true
              maxLength: 30
              description: Last name of the primary contact for the company.
            email:
              type: string
              nullable: true
              maxLength: 30
              description: Email address of the primary contact for the company.
            phone:
              type: string
              nullable: true
              maxLength: 30
              description: Phone number of the primary contact for the company.
            fax:
              type: string
              nullable: true
              maxLength: 20
              description: Fax number of the primary contact for the company.
        address:
          type: object
          properties:
            line1:
              type: string
              nullable: true
              maxLength: 50
              description: First line of the address for the company.
            line2:
              type: string
              nullable: true
              maxLength: 50
              description: Second line of the address for the company.
            line3:
              type: string
              nullable: true
              maxLength: 50
              description: Third line of the address for the company.
            line4:
              type: string
              nullable: true
              maxLength: 50
              description: Fourth line of the address for the company.
            city:
              type: string
              nullable: true
              maxLength: 30
              description: City for the address for the company.
            stateProvince:
              type: string
              nullable: true
              maxLength: 100
              description: State or province for the address for the company.
            postalCode:
              type: string
              nullable: true
              maxLength: 20
              description: Postal code for the address for the company.
            country:
              type: string
              nullable: true
              maxLength: 2
              description: Two-letter (ISO 3166-1 alpha-2) country code for the country in the address for the company.
        website:
          type: string
          nullable: true
          maxLength: 50
          description: URL for the website of the company or business unit.
        industry:
          type: string
          nullable: true
          maxLength: 50
          description: Industry that the company serves.
        numberOfEmployees:
          type: integer
          format: int64
          minimum: 1
          maximum: 1000000
          description: Number of employees at the company or business unit.
        annualRevenue:
          type: number
          format: double
          minimum: -10000000000000
          maximum: 10000000000000
          description: Annual revenue for the company or business unit.
        doingBusinessAs:
          type: string
          nullable: true
          maxLength: 50
          description: Trade name or "doing business as" (DBA) name for the company or business unit.
        naics:
          type: string
          nullable: true
          maxLength: 20
          description: North American Industry Classification System (NAICS) code for the company.
        sic:
          type: string
          nullable: true
          maxLength: 20
          description: Standard Industrial Classification (SIC) code for the company.
        locale:
          $ref: '#/components/schemas/Locale'
        dateFormat:
          $ref: '#/components/schemas/DateFormat'
        startDayOfWeek:
          type: string
          nullable: true
          enum:
            - Monday
            - Sunday
          description: Whether Sunday or Monday is the first day of the week when users who are assigned to the company select a date from a calendar control.
        timeZone:
          $ref: '#/components/schemas/TimeZone'
        packingSlipLevel:
          type: string
          nullable: true
          default: Container
          enum:
            - Container
            - Shipment
          description: Whether packing slips for orders that are associated with the company are printed at either the `Shipment` level or at the shipping `Container` level.
        packingSlipReport:
          type: string
          maxLength: 50
          description: Name of the global (Pentaho) report that is used for printing packing slips for orders that are associated with the company.
        useSAS70Compliance:
          type: boolean
          description: Whether to override the configured password policies and enforce more stringent requirements such as requiring all characters in passwords to be unique and requiring passwords to be different than the previous four passwords.
        ucceanCompanyNumber:
          type: string
          nullable: true
          description: Prefix that identifies the company and is used to generate serial shipping container codes (SSCCs) for shipping labels to retailers that require SSCC-18 codes. The prefix should be between 7 and 10 digits.
          maxLength: 10
        ssccExpansionDigit:
          type: integer
          description: Extension digit for a Serial Shipping Container Code (SSCC).
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the company was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the company was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    FacilityDTO:
      title: Facility
      type: object
      required:
        - number
        - businessUnit
      description: Physical location for a company, such as a warehouse/distribution center or a retail store.
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        number:
          type: string
          maxLength: 20
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: Unique code that identifies the facility. Consider using an abbreviated descriptive naming convention for the facility number, such as LA-DC for the Los Angeles distribution center facility.
        name:
          type: string
          maxLength: 30
          nullable: true
          description: Name of the facility.
        type:
          type: string
          nullable: true
          enum:
            - Distribution Center
            - Retail Store
          description: Type of facility.
        isVirtual:
          type: boolean
          description: Used with Bright Order. Whether the inventory in the facility is managed by Deposco (`false`) or by a different system (`true`). Customer orders can be routed to virtual facilities for fulfillment through a system other than Deposco.
        dbaName:
          type: string
          maxLength: 50
          nullable: true
          description: User-friendly doing business as (DBA) name for the company that uses the facility.
        description:
          type: string
          nullable: true
          description: Text that provides more information about the facility.
        phone:
          type: string
          maxLength: 30
          nullable: true
          description: Primary phone number for the facility.
        contact:
          type: object
          description: Contact person for the facility.
          properties:
            name:
              type: string
              maxLength: 30
              nullable: true
              description: First and last name of the contact person for the facility.
            phone:
              type: string
              maxLength: 30
              nullable: true
              description: Phone number of the contact person for the facility.
            email:
              type: string
              maxLength: 50
              nullable: true
              description: Email address of the contact person for the facility.
            fax:
              type: string
              maxLength: 50
              nullable: true
              description: Fax number of the contact person for the facility.
        address:
          type: object
          description: Address for the facility.
          properties:
            line1:
              type: string
              maxLength: 30
              nullable: true
              description: First line of the address for the facility.
            line2:
              type: string
              maxLength: 30
              nullable: true
              description: Second line of the address for the facility.
            city:
              type: string
              maxLength: 20
              nullable: true
              description: City for the address for the facility.
            stateProvince:
              type: string
              maxLength: 10
              nullable: true
              description: State or province for the address for the facility.
            postalCode:
              type: string
              maxLength: 20
              nullable: true
              description: Postal code for the address for the facility.
            country:
              type: string
              maxLength: 2
              nullable: true
              description: Two-letter (ISO 3166-1 alpha-2) country code for the country in the address for the facility.
        facilityUOMSystem:
          type: string
          nullable: true
          description: Whether `Metric` (CM/KG) or `Imperial` (IN/LB) units of measure (UOM) are used for outbound warehouse processes at the facility such as packing, shipping, rate shopping, and cartonization.
          enum:
            - Metric
            - Imperial
        timeZone:
          $ref: '#/components/schemas/TimeZone'
        enableCustomerPickup:
          type: boolean
          description: Used with Bright Order. Whether the facility is used to fulfill orders by pickup in store or only by shipping.
        enableShipToCustomer:
          type: boolean
          description: Used with Bright Order. Whether the facility is used to fulfill orders by shipping or only by pickup in store.
        latitude:
          type: number
          nullable: true
          description: Latitude of the facility. Used with Bright Order for the geo-proximity method for order routing.
        longitude:
          type: number
          nullable: true
          description: Longitude of the facility. Used with Bright Order for the geo-proximity method for order routing.
        squareFeet:
          type: number
          description: Size of the facility in square feet.
        fulfillmentFacility:
          $ref: '#/components/schemas/NullableEntityRef'
        importReference:
          type: string
          maxLength: 25
          nullable: true
          description: Identifying information for the facility in an external system if the facility is imported.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the facility was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the facility was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    PaginatedEntityReference:
      nullable: true
      type: object
      allOf:
        - type: object
          nullable: true
          description: List of related entities. Only the first page (50 records) of a paginated list is returned.
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    ZoneDTO:
      title: Zone
      type: object
      required:
        - facility
        - businessUnit
        - name
      description: Area in a facility that is dedicated to a specific functional task.
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        facility:
          $ref: '#/components/schemas/EntityRef'
        name:
          type: string
          maxLength: 30
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: Name that identifies the zone. You may have multiple zones with the same name, each belonging to a different facility.
        type:
          type: string
          maxLength: 100
          nullable: true
          description: Type of zone. Provide a value of `Picking` for all picking zones to ensure that users can be assigned to pick from those zones. Provide a value of `Staging` for all receiving and shipping zones. Other available values include `Consignment`, `General`, `Kitting`, `Non-Consignment`, and `Packing`.
        pickRating:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: In pick and pass scenarios, the order/sequence of the zone in relation to other zones. Also used in some configurations of Batch Picking to assign a work group to a picking user based on the zone with the highest pick rating.
        pickSystem:
          type: string
          maxLength: 30
          nullable: true
          description: Used for build and release of pick waves for warehouse automation systems such as automated picking with robots.
        maxNumberOfUnitsToWorkGroup:
          type: integer
          description: Used when building pick waves to define the total number of pickable items that are allowed for a work group in the zone.
        allocateAllStockFromZone:
          type: boolean
          description: Used during inventory allocation when releasing pick waves to completely deplete stock from the zone before allocating stock from another zone for an item.
        defaultLocation:
          $ref: '#/components/schemas/NullableEntityRef'
        locations:
          $ref: '#/components/schemas/PaginatedEntityReference'
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the zone was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the zone was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    ZoneCollectionDTO:
      type: object
      title: Zones
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ZoneDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    StorageDTO:
      title: Storage
      type: object
      required:
        - businessUnit
        - location
        - pack
      description: A storage detail record assigns an item to the location and defines the minimum and maximum inventory levels for the item in the location.
      properties:
        self:
          $ref: '#/components/schemas/EntityRef'
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        location:
          $ref: '#/components/schemas/EntityRef'
        pack:
          $ref: '#/components/schemas/EntityRef'
        type:
          type: string
          description: 'Type of storage. May optionally be associated with replenishment logic. Available values include:'
          enum:
            - Damaged
            - Full Case Picking
            - Receiving
            - Reserve Storage
            - Shipping
            - Split Case Picking
            - Staging
        minimum:
          type: integer
          description: |-
            Minimum number of stock units that should be stored at the specified location.
            When the stock in the location falls below the minimum, a warehouse replenishment task can be generated to move inventory
            from a reserve location so that the quantity of inventory at the picking location equals but does not exceed the specified maximum.
        maximum:
          type: integer
          description: Maximum number of stock units that can be stored at the specified location.
        minimumPick:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Minimum number of stock units that can be picked from the specified location.
        maximumPick:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Maximum number of stock units that can be picked from the specified location.
        opportunisticCountThreshold:
          type: integer
          description: When the number of stock units at the location reaches this value, then a cycle count can be automatically generated. Typically, this value is a number below the minimum for the storage detail record.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the storage detail record was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the storage detail record was last updated.
    StorageCollectionDTO:
      type: object
      title: Storage details
      description: Collection of storage records for the location.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/StorageDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    LocationDTO:
      title: Location
      type: object
      required:
        - locator
        - businessUnit
        - facility
      description: Specific area in a facility where stock can be tracked.
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        facility:
          $ref: '#/components/schemas/EntityRef'
        zones:
          $ref: '#/components/schemas/PaginatedEntityReference'
        number:
          nullable: true
          type: string
          maxLength: 150
          description: |-
            Unique, descriptive code that identifies the location.
            For the Receiving and Shipping locations, include an abbreviated reference to the facility, such as LA-Receiving for the receiving location at the Los Angeles facility or CHI-Shipping for the shipping location at the Chicago facility.
            For other locations, include an abbreviated reference to the facility as well as other location identifiers such as the aisle, rack, and shelf. For example, NY-01AA03 might be the number for the third shelf on rack AA in aisle 01 in the New York facility.
        locator:
          type: string
          maxLength: 150
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: Unique identifier for the facility, typically represented as a barcode, that users can scan to confirm that picks and moves are occurring at the correct location within the facility. For the Receiving and Shipping locations, the locator is `Receiving` and `Shipping`, respectively.
        name:
          nullable: true
          type: string
          maxLength: 50
          description: Name that identifies the location.
        description:
          nullable: true
          type: string
          maxLength: 50
          description: Text that provides additional information about the location.
        type:
          nullable: true
          type: string
          description: Type of location. Used for sorting, filtering, and reporting purposes.
          enum:
            - Bulk Picking
            - Damaged
            - Permanent
            - Rack Picking
            - Reconcile
            - Rejected Return Goods
            - Staging
            - Station
            - Temporary
            - Transient
            - Value Added Service
        storageType:
          nullable: true
          type: string
          description: |-
            Type of storage that the location is used for:
             - `Staging` - Use this value for all shipping and receiving locations.
             - `Split Case Picking` - Use this value to automatically convert stock units to the lowest unit of measure for the pack when stock is moved to this location.
             - `Putwall Slot` and `Putwall Staging` - Use these values for locations associated with a put wall, which is used to sort picked orders before packing.
             - The remaining values are informational only, and do not impact any workflow processes or other product functionality.
          enum:
            - Damaged
            - Full Case Picking
            - Hazmat
            - Inspection
            - Mixed Bin
            - Putwall Slot
            - Putwall Staging
            - Quarantine
            - Receiving
            - Reserve Storage
            - Returned
            - Shipping
            - Split Case Picking
            - Staging
        status:
          nullable: true
          type: string
          description: Current status of the location.
          enum:
            - Cycle Count
            - Miscount
            - On Hold
            - Ready
        dimensions:
          $ref: '#/components/schemas/Dimension'
        pickable:
          type: boolean
          description: Whether the location is available to be picked from. When a pick wave is released, the wave includes pick tasks only for pickable locations.
        reserved:
          type: boolean
          description: Whether the location is used for reserve storage. The replenishment process validates that this field is set to `true` when determining whether you can replenish from a location.
        lpnControlled:
          type: boolean
          description: Whether the location includes LPNs that can be used to identify which stock unit to move, pick, or pack.
        mixedItemThreshold:
          nullable: true
          type: string
          description: Whether more than one item is stored in the location. Move processes validate this behavior and will either allow or prevent a user from putting a second item in the location.
          enum:
            - Single Item
            - Multi Item
        cycleCount:
          type: boolean
          description: Whether cycle counts should occur for the location.
        cycleCountFrequency:
          type: integer
          description: Frequency in days at which cycle counts should occur for the location. This field is informational only, and does not impact any workflow processes or other product functionality.
        lastCountedDate:
          nullable: true
          type: string
          format: date-time
          description: Date on which either a cycle count or a physical count occurred for the location.
          readOnly: true
        pickSequence:
          type: integer
          description: Numeric value that indicates the order in which the location should be picked from in relation to other locations.
        putawaySequence:
          type: integer
          description: Numeric value that indicates the order in which stock should be put away after receiving or during replenishment in relation to other locations.
        useForKit:
          type: boolean
          description: Whether the location is used for assembling the component items for a bundled product. This option is informational only, and does not impact any workflow processes or other product functionality.
        allocatedToBusinessUnit:
          $ref: '#/components/schemas/NullableEntityRef'
        customAttribute1:
          nullable: true
          type: string
          maxLength: 50
          description: Custom field for the location.
        customAttribute2:
          nullable: true
          type: string
          maxLength: 50
          description: Custom field for the location.
        customAttribute3:
          nullable: true
          type: string
          maxLength: 50
          description: Custom field for the location.
        storageDetails:
          $ref: '#/components/schemas/StorageCollectionDTO'
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the location was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the location was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    LocationCollectionDTO:
      type: object
      title: Locations
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/LocationDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    UserDTO:
      title: User
      type: object
      description: User account information.
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        username:
          type: string
          nullable: true
          maxLength: 30
          description: Username for the user account.
        firstName:
          type: string
          nullable: true
          maxLength: 30
          description: First name of the user.
        lastName:
          type: string
          nullable: true
          maxLength: 30
          description: Last name of the user.
        email:
          type: string
          nullable: true
          maxLength: 50
          description: Email address for contacting the user.
        enabled:
          type: boolean
          description: Whether the user account is enabled or disabled. An account should be disabled when the user should no longer be allowed to log in to Deposco on a more permanent basis, such as when a user leaves the company.
        active:
          type: boolean
          description: Whether the user account is active or inactive. This field is set to false when a user exceeds the maximum number of failed attempts to enter their password during login.
        lastLoggedInTime:
          type: string
          nullable: true
          format: date-time
          readOnly: true
          description: Date and time that the user last logged in to Deposco.
        lastLogInAttempt:
          type: string
          nullable: true
          format: date-time
          readOnly: true
          description: Date and time that the user last attempted to log in to Deposco.
        userOfTenant:
          $ref: '#/components/schemas/NullableEntityRef'
        companyAssignments:
          type: array
          nullable: true
          description: Additional business units or tenant companies that are assigned to the user account.
          items:
            $ref: '#/components/schemas/EntityRef'
        facility:
          $ref: '#/components/schemas/NullableEntityRef'
        activeZone:
          $ref: '#/components/schemas/NullableEntityRef'
        activeResource:
          $ref: '#/components/schemas/NullableEntityRef'
        homePage:
          type: string
          nullable: true
          maxLength: 40
          description: First page of the application that appears when the user logs in.
        handheldMenu:
          type: string
          nullable: true
          maxLength: 100
          description: Handheld menu that is assigned to the user.
        locale:
          $ref: '#/components/schemas/Locale'
        timeZone:
          $ref: '#/components/schemas/TimeZone'
        dateFormat:
          $ref: '#/components/schemas/DateFormat'
        startDayOfWeek:
          type: string
          nullable: true
          description: Whether Sunday or Monday is the first day of the week when the user selects a date from a calendar control.
          enum:
            - Monday
            - Sunday
        pinCode:
          type: string
          nullable: true
          maxLength: 64
          description: PIN code for entering an exception during picking.
        costCenter:
          $ref: '#/components/schemas/NullableEntityRef'
        organization:
          type: string
          nullable: true
          maxLength: 50
          description: Organization that is assigned to the user.
        division:
          type: string
          nullable: true
          maxLength: 30
          description: Division that is assigned to the user.
        department:
          type: string
          nullable: true
          maxLength: 50
          description: Department that is assigned to the user.
        jobTitle:
          type: string
          nullable: true
          maxLength: 100
          description: Job title that is assigned to the user.
        participantType:
          type: string
          nullable: true
          description: Description of how the user participates in the company's operations.
          enum:
            - Provider of Services
            - Analyst or Academic
            - Practitioner
            - Consultant
            - Provider of Solutions
            - Sales Associate
        employeeNumber:
          type: string
          nullable: true
          maxLength: 50
          description: Corporate employee number for the user.
        profile:
          type: string
          nullable: true
          maxLength: 500
          description: Profile that is assigned to the user.
        phone:
          type: string
          nullable: true
          maxLength: 30
          description: Phone number for contacting the user.
        mobile:
          type: string
          nullable: true
          maxLength: 20
          description: Mobile phone number for contacting the user.
        fax:
          type: string
          nullable: true
          maxLength: 20
          description: Fax number for contacting the user.
        city:
          type: string
          nullable: true
          maxLength: 30
          description: City for the user's address.
        stateProvince:
          type: string
          nullable: true
          maxLength: 100
          description: State or province for the user's address.
        postalCode:
          type: string
          nullable: true
          maxLength: 20
          description: Postal code for the user's address.
        country:
          type: string
          nullable: true
          maxLength: 100
          description: Two-letter (ISO 3166-1 alpha-2) country code for the country for the user's address.
        customAttribute1:
          type: string
          nullable: true
          maxLength: 50
          description: Custom field value for the user account.
        customAttribute2:
          type: string
          nullable: true
          maxLength: 50
          description: Custom field value for the user account.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the user account was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the user account was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    UserCollectionDTO:
      type: object
      title: Users
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/UserDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    NotFoundAPIResponse:
      type: object
      title: NotFoundAPIResponse
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
    ContainerDTO:
      title: Container
      type: object
      required:
        - lpnNumber
        - number
        - businessUnit
      description: Container record for an object that holds stock, such as a cart, bin, pallet, or shipping box. A container can also hold other containers, such as when shipping boxes are stacked on a pallet.
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        lpnNumber:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: Unique LPN label number or barcode for the container that is scanned during warehouse management processes.
          maxLength: 30
        number:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: Unique identification code for the container. May be the same as the value in `lpnNumber`.
          maxLength: 30
        type:
          nullable: true
          type: string
          description: Type of container.
          enum:
            - 20Ft
            - 40Ft
            - 40Ft Hicube
            - Cart
            - Packaging
            - Shipping
            - Transient
            - Auto Ship
            - Case
        secondaryType:
          nullable: true
          type: string
          description: When shipping on a pallet, the `type` of the container is `Shipping`, and the `secondaryType` is `Pallet`.
          enum:
            - Pallet
        cartonType:
          $ref: '#/components/schemas/NullableEntityRef'
        description:
          nullable: true
          type: string
          maxLength: 200
          description: Text that provides additional information about the container.
        status:
          nullable: true
          type: string
          description: Status of the container. New containers should be created with a status of `Ready`.
          enum:
            - Receiving
            - Complete
            - Ready
            - Inbound
            - Storage
            - Shipping
            - Loading
            - Planned
            - In-Transit
            - Outbound
            - Needs Attention
            - Miscount
            - Validated
            - Released
            - Shipped
            - Exception
            - SSCC Generated
            - On Hold
        gtin:
          nullable: true
          type: string
          maxLength: 20
          description: Reserved for future use.
        dimensions:
          $ref: '#/components/schemas/Dimension'
          description: Physical dimensions of the container in length, width, and height.
        weight:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Weight of the container.
        weightUOM:
          nullable: true
          type: string
          enum:
            - LB
            - KG
          description: Unit of measure for the weight of the container.
        activeZone:
          $ref: '#/components/schemas/NullableEntityRef'
        location:
          $ref: '#/components/schemas/NullableEntityRef'
        cart:
          $ref: '#/components/schemas/NullableEntityRef'
        cartSlotNumber:
          type: integer
          description: Slot on a cart in which the container is located. Used for cartonization.
        copySourceLpnNumber:
          nullable: true
          type: string
          maxLength: 30
          description: Previous source container for the current container. For example, if you pick into a transient container, and then move the stock into a shipping container, then this field can be used on the shipping container record to store the identification code of the transient container.
        parent:
          $ref: '#/components/schemas/NullableEntityRef'
        masterLpnNumber:
          nullable: true
          type: string
          maxLength: 30
          description: LPN number of an outer container in which other containers are packed for an inbound shipment (which may also be called an _advance ship notice_ or _ASN_).
        packageType:
          nullable: true
          type: string
          maxLength: 45
          description: Type of package for the container, which enables shipping carriers to determine how the container is packed. Typically populated on the shipping service request.
        shipment:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
        trip:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
        insuredValue:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Value of the contents of a shipping container, which is used to calculate the insurance for the container that is sent to the shipping providers.
        shippingCost:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Cost to ship the container.
        baseTrackingLink:
          nullable: true
          type: string
          maxLength: 400
          description: Link for opening a page on the shipping carrier's website to track the status of the shipment that is assigned to the container.
        trackingUrl:
          nullable: true
          type: string
          maxLength: 400
          description: URL that is used with the shipment tracking number for tracking the status of the shipment that is assigned to the container.
        trackingNumber:
          nullable: true
          type: string
          maxLength: 100
          description: Tracking number for the shipment that is associated with the container.
        trackingNumber2:
          nullable: true
          type: string
          maxLength: 100
          description: Secondary tracking number that is provided by some services that use multiple tracking numbers.
        returnTrackingNumber:
          nullable: true
          type: string
          maxLength: 100
          description: Tracking number for the return shipping label that is included in the container.
        uspsConstructCode:
          nullable: true
          type: string
          maxLength: 10
          description: Construct Code from the U.S. Postal Service. The Construct Code is a barcode that consolidates the ZIP code, mailer ID, and serial number.
        orderHeaderSequence:
          type: integer
          description: Used during cartonization at the wave to identify the sequence of the container in relation to other containers that are created during the build and release wave process for a single order.
        orderHeaderSequenceTotal:
          type: integer
          description: Used during cartonization at the wave to identify the sequence of the container in relation to other containers that are created during the build and release wave process for a single order.
        pickWaveSequence:
          type: integer
          description: Used in cubing to identify the sequence of the container in relation to other containers that are created during the build and release wave process. This sequence applies to the entire wave and can span multiple orders.
        pickWaveSequenceTotal:
          type: integer
          description: Used in cubing to identify the sequence of the container in relation to other containers that are created during the build and release wave process. This sequence applies to the entire wave and can span multiple orders.
        sequence:
          type: integer
          description: Used by the Print to Panda process to determine the x of y values for a container.
        sequenceTotal:
          type: integer
          description: Used by the Print to Panda process to determine the x of y values for a container.
        printed:
          type: boolean
          description: Used by the Print to Panda process to indicate whether a retailer label was printed for the container.
        ssccLpnNumber:
          nullable: true
          type: string
          maxLength: 30
          description: Used by the Print to Panda process to store the SSCC number for the pallet, if the process is configured to generate one.
        referenceNumber1:
          nullable: true
          type: string
          maxLength: 100
          description: Used by the Assign Trip to Container process to store the trip number.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the container was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the container was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    ContainerCollectionDTO:
      type: object
      title: Containers
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ContainerDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    orderStatus:
      type: string
      description: Overall status of the order as it progresses through the fulfillment process. New orders should be created with a status of either New or Hold.
      enum:
        - Draft
        - New
        - Hold
        - Ready for Fulfillment
        - Wave Built
        - Back Ordered
        - Partially Released
        - Released
        - Picking
        - Pick Complete
        - Partially Staged
        - Staged
        - Partially Loaded
        - Loaded
        - Partially Shipped
        - Ship Complete
        - Canceled
    AddressContactDTO:
      title: Contact
      type: object
      description: Name and contact information for an address.
      properties:
        firstName:
          nullable: true
          type: string
          maxLength: 30
          description: First name of the contact person for an address.
        lastName:
          nullable: true
          type: string
          maxLength: 30
          description: Last name of the contact person for an address.
        phone:
          nullable: true
          type: string
          maxLength: 30
          description: Phone number of the contact person for an address.
        email:
          nullable: true
          type: string
          maxLength: 50
          description: Email address of the contact person for an address.
    AddressDTO:
      title: Address
      type: object
      properties:
        line1:
          nullable: true
          type: string
          maxLength: 64
        line2:
          nullable: true
          type: string
          maxLength: 64
        line3:
          nullable: true
          type: string
          maxLength: 64
        line4:
          nullable: true
          type: string
          maxLength: 64
        city:
          nullable: true
          type: string
          maxLength: 30
        stateProvince:
          nullable: true
          type: string
          maxLength: 100
        postalCode:
          nullable: true
          type: string
          maxLength: 20
        country:
          nullable: true
          type: string
          maxLength: 100
          description: Two-letter (ISO 3166-1 alpha-2) country code.
    sendASNDTO:
      title: sendASN
      type: string
      nullable: true
      default: 'Yes'
      enum:
        - 'Yes'
        - Fully Shipped
      description: Controls when an advance shipping notice (ASN) is sent for the order. Set to `Yes` to send an ASN for each shipment or `Fully Shipped` to send the ASN when the order has fully shipped.
    PostReleaseStateDTO:
      title: postReleaseState
      readOnly: true
      type: string
      nullable: true
      description: Tracks the state of the order during async post-release processing, which occurs after the pick wave release process as part of the ReprocessWavePostProcess workflow process, which handles cartonization, generation of SSCC numbers, printing of documents or labels, creation of shipments, and generation of shipping labels.
      enum:
        - DEFAULT
        - Pending Cartonization
        - Pending Rate Shopping
        - Pending Shipping Label Generation
        - Post Release Completed
        - null
    NoteDTO:
      title: Note
      type: object
      required:
        - title
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        title:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          maxLength: 150
        body:
          type: string
          nullable: true
        source:
          type: string
          nullable: true
          maxLength: 30
        priority:
          type: string
          maxLength: 50
        orderHeader:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        orderLine:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    BaseOrderHeaderDTO:
      title: Order header
      type: object
      required:
        - number
        - businessUnit
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        number:
          type: string
          maxLength: 50
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: Unique identifier for the order.
        orderPriority:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: Numeric value that represents the importance of the order, where 0 is the highest priority, and 5 is the lowest priority. Can be used in waving logic.
        orderSummary:
          type: string
          maxLength: 1000
          description: Additional information about the order.
        orderSource:
          type: string
          maxLength: 100
          description: Reference field that identifies the source system in which the order was placed.
        secondaryOrderSource:
          type: string
          maxLength: 100
          description: Additional source for the order. For example, the order may have been pulled from a ChannelAdvisor integration but was originally created through Amazon.
        customerOrderNumber:
          type: string
          maxLength: 50
          description: Order number from the external system where the order was created. If the order was generated from a customer order in Bright Order, then this is the customer order number.
        relatedOrderNumber:
          type: string
          maxLength: 50
          description: Order number of another order that is related to this order.
        partnerInvoiceNumber:
          type: string
          maxLength: 20
          description: Used in some socket integrations. Also used to group ASNs with the Group ASN process.
        consigneePartner:
          $ref: '#/components/schemas/NullableEntityRef'
        tradingPartnerSite:
          $ref: '#/components/schemas/NullableEntityRef'
        shipToContact:
          allOf:
            - $ref: '#/components/schemas/AddressContactDTO'
          description: Collection of name and contact information fields for the address to which the order is shipped.
        shipToAddress:
          description: Collection of address fields for the address to which the order is shipped.
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
        billToPartner:
          $ref: '#/components/schemas/NullableEntityRef'
        billToContact:
          allOf:
            - $ref: '#/components/schemas/AddressContactDTO'
          description: Collection of name and contact information fields for the address to which the order is billed.
        billToAccountNumber:
          type: string
          maxLength: 30
          description: Account number of the person or company to whom the order is billed.
        billToAddress:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          description: Collection of address fields for the address to which the order is billed.
        shipFromContact:
          allOf:
            - $ref: '#/components/schemas/AddressContactDTO'
          description: Collection of name and contact information fields for the address from which the order is shipped.
        shipFromAddress:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          description: Collection of address fields for the address from which the order is shipped.
        placedDate:
          type: string
          format: date-time
          description: Date that the order was placed, regardless of when the order was sent to Deposco.
        plannedArrivalDate:
          type: string
          format: date-time
          description: Date when the buyer expects that stock for the order will be delivered.
        plannedReleaseDate:
          type: string
          format: date-time
          description: Date on which the order should be released for fulfillment. Used primarily for reporting purposes.
        plannedShipDate:
          type: string
          format: date-time
          description: Date on which the order should be shipped. Used primarily for reporting purposes.
        earliestShipDate:
          type: string
          format: date-time
          description: Earliest date by which the order should be shipped. Custom configuration is required in Deposco to leverage this value.
        earliestDeliveryDate:
          type: string
          format: date-time
          description: Earliest date by which the order should be delivered. Custom configuration is required in Deposco to leverage this value.
        cancelByArrivalDate:
          type: string
          format: date-time
          description: Date after which the deliveries for this order should be rejected. In other words, the order should be canceled if it has not arrived by this date. Automatic cancellation of orders requires custom configuration in Deposco.
        cancelByReleaseDate:
          type: string
          format: date-time
          description: Date by which the order should be canceled if it has not yet been released. Automatic cancellation of orders requires custom configuration in Deposco.
        cancelByShipDate:
          type: string
          format: date-time
          description: Date by which the order should be canceled if it has not yet shipped. Automatic cancellation of orders requires custom configuration in Deposco.
        actualArrivalDate:
          type: string
          format: date-time
          description: Date that stock for the order was received.
        actualReleaseDate:
          type: string
          format: date-time
          description: Date when the order is released for fulfillment.
        actualShipDate:
          type: string
          format: date-time
          description: Date when the order ships.
        priceList:
          $ref: '#/components/schemas/NullableEntityRef'
        orderTotal:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Sum of the `orderSubtotal`, `orderTaxTotal`, and `orderShippingTotal` fields for the order.
        orderSubtotal:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Sum of all line discounted total prices (not including tax or shipping and handling).
        orderDiscountSubtotal:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Total discount amount across the entire order (discount amount for all order lines multiplied by the order quantity and the pack quantity).
        orderShippingTotal:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Total cost (or estimated cost) to ship the entire order.
        orderShipTotal:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Total cost (or estimated cost) to ship the entire order.
        taxable:
          type: boolean
          description: Whether tax should be calculated for the order.
        orderTaxTotal:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Sum of the tax amount from all order lines for the order.
        orderTaxableTotal:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Sum of all line discounted total prices for taxable items.
        orderUntaxableTotal:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Sum of all line discounted total prices for items that do not require tax.
        shippingTaxTotal:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Sum of the tax amount from all shipment lines for the order.
        shipVia:
          type: string
          maxLength: 50
          description: Shipping service that is used to ship the order.
        shipVendor:
          type: string
          maxLength: 50
          description: Shipping carrier that is used to ship the order.
        shipMethod:
          type: string
          maxLength: 50
          description: Shipping method that is used to ship the order.
        freightTermsType:
          type: string
          maxLength: 100
          description: |-
            Identifies how to determine the account that is responsible for payment of shipping costs for the order. Set to one of the following values:

            - `Prepaid` - The shipping carrier account that created the shipment will be responsible for payment of shipping costs.

            - `Collect` - The recipient is billed for the shipment. Either enter the shipping carrier account number in the `freightBillToAccount` field, or enter the account number in the trading partner record for the trading partner associated with the order.

            - `Third Party` - A trading partner is billed for the shipment. Enter the shipping carrier account number in the trading partner record for the trading partner associated with the order.

            - `Consignee` - Use contractual billing to bill the customer/recipient for UPS Ground shipping services. Consignee billing must be enabled in the contact information for the customer/recipient in the UPS account, and the address label must exactly match the UPS billing system information, including punctuation, spaces, and abbreviations in all lines, including the `Company Name` line.
        freightBillToContact:
          allOf:
            - $ref: '#/components/schemas/AddressContactDTO'
          description: Collection of name and contact information fields for the address that is billed for shipping costs.
        freightBillToAccount:
          type: string
          maxLength: 50
          description: Account number that is used to pay shipping costs for the order.
        freightBillToAddress:
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
          description: Collection of address fields for the address that is billed for shipping costs.
        weight:
          type: object
          description: Total weight of the order.
          required:
            - weight
          properties:
            weight:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Numeric value for the weight.
            units:
              $ref: '#/components/schemas/WeightUOM'
        returnRequired:
          type: boolean
          description: Whether to generate and print a return label for the order.
        returnShipVia:
          type: string
          maxLength: 100
          description: Shipping service that should be used for any returns for the order.
        returnShipOption:
          type: string
          maxLength: 10
          description: Used by the GPPrintReturnLabel process to specify how to deliver the return label to the customer, such as print or electronic.
        deliveryConfirmation:
          type: string
          maxLength: 45
          description: Leave blank if no signature is required. Set to 2 if a signature is required. Use of other values depends on the shipping carrier.
        insuranceRequired:
          type: boolean
          description: Whether insurance is required for the package(s) in which the order ships. Can be set using post-order import related to setting the `shipVia` field. Must be set to `true` if insurance is required above the minimum default value for the shipping carrier. Insurance cost is calculated based on the value of items in the shipping container.
        homeDelivery:
          type: boolean
          description: Used when FedEx is the shipping carrier to specify whether FedEx Home Delivery is required.
        residential:
          type: boolean
          description: Used when UPS is the shipping carrier to identify whether the address is a residential address. May be set by the address validation process.
        saturdayDelivery:
          type: boolean
          description: Used when UPS is the shipping carrier to specify whether the customer is requesting Saturday delivery for the order.
        hubId:
          type: string
          maxLength: 10
          description: Used when a FedEx SmartPost shipping service is assigned to the order to identify the associated FedEx SmartPost hub.
        routingNumber:
          type: string
          maxLength: 30
          description: Transportation routing number for the trip to which the order is assigned.
        incotermsType:
          type: string
          maxLength: 50
          description: International Commercial Terms type from the International Chamber of Commerce (ICC). Used for international orders.
        importType:
          type: string
          maxLength: 100
          description: Whether an order is a `Single` or `Multi` order.
        importReference:
          type: string
          maxLength: 50
          description: Reference number that is used when orders are imported into Deposco.
        exportReference:
          type: string
          maxLength: 50
          description: Reference number that is used when orders are exported from Deposco.
        otherReferenceNumber:
          type: string
          maxLength: 50
          description: Additional reference number for the order.
        otherReferenceNumber2:
          type: string
          maxLength: 45
          description: Additional reference number for the order.
        integrationSource:
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
          readOnly: true
        sendASN:
          $ref: '#/components/schemas/sendASNDTO'
        dropShip:
          type: boolean
          description: Whether the order is a dropship order, where the order is fulfilled by the company when the company is serving as a supplier for some external company. Dropship fulfillment requires custom configuration in Deposco.
        pickWave:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        postReleaseState:
          $ref: '#/components/schemas/PostReleaseStateDTO'
        entryName:
          type: string
          maxLength: 200
          description: Name of the sales representative for the order, which may not be the same person who created the order.
        entryPhone1:
          type: string
          maxLength: 30
          description: Phone number of the sales representative for the order, which may not be the same person who created the order.
        saleConditionCode:
          type: string
          maxLength: 50
          description: Used for Amazon Vendor Central and Amazon Advantage socket integrations.
        seller:
          type: string
          maxLength: 50
          description: Used by socket integrations such as NetSuite and QuickBooks Desktop.
        notificationCode1:
          type: string
          maxLength: 255
          description: Reserved for future use.
        notificationCode2:
          type: string
          maxLength: 5
          description: Reserved for future use.
        notificationCode3:
          type: string
          maxLength: 5
          description: Reserved for future use.
        verbalConfirmationName:
          type: string
          maxLength: 45
          description: Reserved for future use.
        verbalConfirmationPhoneNumber:
          type: string
          maxLength: 45
          description: Reserved for future use.
        customAttribute1:
          type: string
          maxLength: 100
          description: Custom attribute for the order.
        customAttribute2:
          type: string
          maxLength: 100
          description: Custom attribute for the order.
        customAttribute3:
          type: string
          maxLength: 100
          description: Custom attribute for the order.
        customAttribute4:
          type: string
          maxLength: 100
          description: Custom attribute for the order.
        customAttribute5:
          type: string
          maxLength: 100
          description: Custom attribute for the order.
        customAttribute6:
          type: string
          maxLength: 100
          description: Custom attribute for the order.
        customAttribute7:
          type: string
          maxLength: 100
          description: Custom attribute for the order.
        customFields:
          type: array
          description: Array of custom fields for the order.
          items:
            $ref: '#/components/schemas/CustomFieldDTO'
        notes:
          type: array
          description: Array of notes for the order.
          items:
            $ref: '#/components/schemas/NoteDTO'
        channels:
          type: array
          nullable: true
          description: Array of channel cross-references for the order.
          items:
            $ref: '#/components/schemas/ChannelDTO'
        createdDate:
          readOnly: true
          type: string
          format: date-time
          description: Date and time that the order was created.
        updatedDate:
          readOnly: true
          type: string
          format: date-time
          description: Date and time that the order was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    BaseOrderLineDTO:
      title: Order line
      type: object
      required:
        - lineNumber
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        lineNumber:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          maxLength: 55
          description: Identification number for the order line, including a next-up line number starting at 1.
        customerLineNumber:
          type: string
          maxLength: 100
          description: Identifier of the order line in the external system in which the order was created.
        relatedOrderLine:
          $ref: '#/components/schemas/NullableEntityRef'
        sortOrder:
          type: integer
          description: Position of the order line in relation to other order lines for the order.
        orderHeader:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        item:
          $ref: '#/components/schemas/EntityRef'
        pack:
          $ref: '#/components/schemas/EntityRef'
        description:
          type: string
          maxLength: 250
          description: Text that describes the order line.
        orderPackQuantity:
          type: number
          format: float
          minimum: -3.4028235e+38
          maximum: 3.4028235e+38
          description: Quantity of the item/pack that was ordered. Must be a positive value.
        canceledPackQuantity:
          type: number
          format: float
          minimum: -3.4028235e+38
          maximum: 3.4028235e+38
          readOnly: true
          description: Quantity of the item/pack that was canceled. Must be a positive value.
        lotNumber:
          type: string
          maxLength: 200
          description: Lot number for stock on the order line.
        bornOnDate:
          type: string
          format: date-time
          description: Born on date for stock on the order line.
        expirationDate:
          type: string
          format: date-time
          description: Expiration date for stock on the order line.
        productCode:
          type: string
          maxLength: 40
          description: Product code associated with the item on the order line.
        inventoryCondition:
          type: string
          maxLength: 255
          description: Additional field for describing the condition of the stock on the order line.
        inventoryAttribute1:
          type: string
          maxLength: 255
          description: Additional field for providing descriptive information for the stock on the order line.
        inventoryAttribute2:
          type: string
          maxLength: 255
          description: Additional field for providing descriptive information for the stock on the order line.
        plannedShipDate:
          type: string
          format: date-time
          description: Date when the stock for the order line should be shipped. Custom configuration is required in Deposco to leverage this value.
        plannedArrivalDate:
          type: string
          format: date-time
          description: Date when the stock for the order line should be shipped. Custom configuration is required to leverage this value.
        unitPrice:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Either the unit price of the item on the order line from the item record, or the price of the item from a price list. Required for international shipments if customs data must be declared based on the unit price on the order.
        unitCost:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Unit cost (for an Each pack) of the item on the order line.
        priceCode:
          type: string
          maxLength: 50
          description: Used for NetSuite socket integrations.
        lineTotal:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Calculated by multiplying the net price by the order quantity and the pack quantity.
        taxable:
          type: boolean
          description: Whether tax should be applied when calculating the total for the order line.
        taxCost:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Tax percentage to apply to the order line.
        taxableTotal:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Calculated by multiplying the unit cost, the order pack quantity, and the tax cost for the order line.
        untaxableTotal:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Used for eBay socket integrations.
        extendedTotal:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Calculated by adding the line total and the taxable total for the order line.
        discountAmount:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Unit discount amount. For example, if the unit price is $1 and the discount is 10%, then the discount amount is $0.10.
        shippingAmount:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Used for socket integrations such as Amazon Seller Central, ChannelAdvisor, BigCommerce, and eBay.
        weight:
          type: object
          required:
            - weight
          description: Total weight of the order line.
          properties:
            weight:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Numeric value for the weight.
            units:
              $ref: '#/components/schemas/WeightUOM'
        importReference:
          type: string
          maxLength: 100
          description: Additional reference number for the order line when orders are imported into Deposco.
        exportReference:
          type: string
          maxLength: 50
          description: Additional reference number for the order line when orders are exported from Deposco.
        customAttribute1:
          type: string
          maxLength: 400
          description: Custom attribute for the order line.
        customAttribute2:
          type: string
          maxLength: 400
          description: Custom attribute for the order line.
        customAttribute3:
          type: string
          maxLength: 400
          description: Custom attribute for the order line.
        customFields:
          type: array
          description: Array of custom fields for the order line.
          items:
            $ref: '#/components/schemas/CustomFieldDTO'
        notes:
          type: array
          description: Array of notes for the order line.
          items:
            $ref: '#/components/schemas/NoteDTO'
        channels:
          type: array
          description: Array of channel cross-references for the order line.
          items:
            $ref: '#/components/schemas/ChannelDTO'
        createdDate:
          readOnly: true
          type: string
          format: date-time
          description: Date and time that the order line was created.
        updatedDate:
          readOnly: true
          type: string
          format: date-time
          description: Date and time that the order line was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    SalesOrderLineDTO:
      title: Sales order line
      x-implements: OrderLineDTO
      required:
        - orderPackQuantity
        - item
        - pack
      description: Order line for a sales order, which identifies the quantity and pack for an item that the customer purchased.
      allOf:
        - $ref: '#/components/schemas/BaseOrderLineDTO'
        - type: object
          properties:
            orderLineStatus:
              type: string
              x-implements: OrderLineStatusDTO
              readOnly: true
              nullable: true
              description: Status of the order line. New order lines should be created with a status of New.
              enum:
                - Awaiting Delivery
                - Awaiting Pickup
                - Awaiting Shipment
                - Back Ordered
                - Canceled
                - Closed
                - Complete
                - Draft
                - Drop Ship
                - Full Payment
                - In Progress
                - Needs Attention
                - New
                - Open
                - Partial Released
                - Partial Returned
                - Partial Payment
                - Partial Return
                - Picking
                - Wave Built
                - Released
                - Releasing
                - Returned
                - Substituted
                - Voided
            shipFromFacility:
              $ref: '#/components/schemas/NullableEntityRef'
            coLine:
              $ref: '#/components/schemas/EntityRef'
            allocatedQuantity:
              type: number
              format: float
              minimum: -3.4028235e+38
              maximum: 3.4028235e+38
              description: Inventory quantity of the item/pack that is being held for the order line. Commonly populated with the same value as the order pack quantity when sending orders to Deposco.
            unallocatedQuantity:
              type: number
              format: float
              minimum: -3.4028235e+38
              maximum: 3.4028235e+38
              description: Quantity of the item/pack for the order line that does not have any allocated inventory.
            pickedPackQuantity:
              readOnly: true
              type: number
              format: float
              minimum: -3.4028235e+38
              maximum: 3.4028235e+38
              description: Quantity of the item/pack that has been picked to fulfill the order line.
            shortagePackQuantity:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Quantity of the item/pack that is not being shipped for the order line.
            shippedPackQuantity:
              readOnly: true
              type: number
              format: float
              minimum: -3.4028235e+38
              maximum: 3.4028235e+38
              description: Quantity of the item/pack that has shipped for the order line. Must be a positive value.
            returnedPackQuantity:
              type: number
              format: float
              minimum: -3.4028235e+38
              maximum: 3.4028235e+38
              description: Quantity from the order line that was returned by the customer. Must be a positive value.
            preallocated:
              readOnly: true
              type: boolean
              description: Whether stock for the order line line was allocated during a separate process before the order was included on a pick wave.
            isBackOrdered:
              type: string
              readOnly: true
              nullable: true
              description: Reason code that provides additional details when an order line is backordered.
              enum:
                - Back Ordered
                - Not Back Ordered
                - Exception Pick
                - Awaiting Stock Movement
            platinumLineNo:
              type: number
              format: int32
              minimum: -2147483648
              maximum: 2147483647
              description: Used in the Print 2 Panda process to determine the pack quantity.
            directedToZone:
              $ref: '#/components/schemas/NullableEntityRef'
            allocateFromZone:
              type: boolean
              description: Whether to allocate stock to fulfill the order from the zone in the `directedToZone` field.
            carrierSpecialServices:
              type: array
              description: Array of carrier special service records for the order line. Carrier special service records contain information related to special services for shipping carriers such as dry ice and dangerous goods.
              items:
                $ref: '#/components/schemas/CarrierSpecialServiceDTO'
    SalesOrderLineCollectionDTO:
      type: object
      x-implements: OrderLineCollectionDTO
      title: Sales order lines
      description: Array of order lines for the sales order. A maximum of 100 order lines can be created or updated for an order in a single request.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/SalesOrderLineDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    SalesOrderDTO:
      title: Sales order
      description: Order header for a sales order, which contains information for the entire order, such as customer information, dates, and address information.
      x-implements: OrderHeaderDTO
      required:
        - shipToContact
        - shipToAddress
      allOf:
        - $ref: '#/components/schemas/BaseOrderHeaderDTO'
        - type: object
          properties:
            type:
              type: string
              nullable: true
              readOnly: true
              description: Type of order.
              enum:
                - Sales Order
                - null
            orderStatus:
              type: string
              description: Overall status of the order as it progresses through the fulfillment process. New orders should be created with a status of either New or Hold.
              enum:
                - Draft
                - New
                - Hold
                - Ready for Fulfillment
                - Wave Built
                - Back Ordered
                - Partially Released
                - Released
                - Picking
                - Pick Complete
                - Partially Staged
                - Staged
                - Partially Loaded
                - Loaded
                - Partially Shipped
                - Ship Complete
                - Canceled
            shipFromFacility:
              $ref: '#/components/schemas/EntityRef'
            dutyPaidBy:
              type: string
              nullable: true
              enum:
                - DDU
                - DDP
              description: |-
                Used for international shipments to identify how duties are paid for the order. Set to DDP if duties are paid by the shipper or DDU if duties are paid by the recipient.
                If no value is specified, then the value for the shipping service that is assigned to the order is used. Supported only for certain shipping carriers such as UPS, FedEx, DHL eCommerce, DHL Express, and Globegistics.
            dutyPaidByType:
              type: string
              nullable: true
              enum:
                - Seller
                - Receiver
                - Third party
              description: Identifies how to determine the account that is responsible for payment of international shipping duties for the order when `dutyPaidBy` is set to `DDP`.
            dutyPaidByContactName:
              nullable: true
              type: string
              maxLength: 50
              description: Name of the contact person for the party that is responsible for payment of international shipping duties for the order when `dutyPaidBy` is set to `DDP`.
            dutyPaidByAccount:
              nullable: true
              type: string
              maxLength: 50
              description: Account number that is used to pay international shipping duties for the order when `dutyPaidBy` is set to `DDP`.
            dutyPaidByPostalCode:
              nullable: true
              type: string
              maxLength: 50
              description: Postal (ZIP) code of the address for the party that is responsible for payment of international shipping duties for the order when `dutyPaidBy` is set to `DDP`.
            dutyPaidByCountry:
              nullable: true
              type: string
              maxLength: 50
              description: Two-letter (ISO 3166-1 alpha-2) country code of the address for the party that is responsible for payment of international shipping duties for the order when `dutyPaidBy` is set to `DDP`.
            directedToZone:
              $ref: '#/components/schemas/NullableEntityRef'
            customerOrderHeaders:
              type: array
              readOnly: true
              description: Customer orders (from Bright Order) that are associated with the sales order.
              items:
                $ref: '#/components/schemas/EntityRef'
            orderLines:
              $ref: '#/components/schemas/SalesOrderLineCollectionDTO'
            carrierSpecialServices:
              type: array
              description: Array of carrier special service records for the order.
              items:
                $ref: '#/components/schemas/CarrierSpecialServiceDTO'
            shipments:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/PaginatedEntityReference'
    SalesOrderCollectionDTO:
      type: object
      title: Sales orders
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/SalesOrderDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    orderLineStatus:
      type: string
      description: Status of the order line. New order lines should be created with a status of New.
      enum:
        - Awaiting Delivery
        - Awaiting Pickup
        - Awaiting Shipment
        - Back Ordered
        - Canceled
        - Closed
        - Complete
        - Draft
        - Drop Ship
        - Full Payment
        - In Progress
        - Needs Attention
        - New
        - Open
        - Partial Released
        - Partial Returned
        - Partial Payment
        - Partial Return
        - Picking
        - Wave Built
        - Released
        - Releasing
        - Returned
        - Substituted
        - Voided
    OrderCancellationDTO:
      title: Order cancellation
      type: object
      required:
        - orderLines
      properties:
        orderLines:
          type: array
          description: Array of order lines with quantities to cancel for the order.
          items:
            type: object
            required:
              - orderLine
            properties:
              orderLine:
                $ref: '#/components/schemas/EntityRef'
              canceledPackQuantity:
                type: number
                format: float
                minimum: -3.4028235e+38
                maximum: 3.4028235e+38
                description: Quantity to cancel for the order line.
    SalesOrderStatusDTO:
      title: Sales order status
      type: object
      properties:
        orderStatus:
          type: string
          description: Overall status of the order as it progresses through the fulfillment process. New orders should be created with a status of either New or Hold.
          enum:
            - Draft
            - New
            - Hold
            - Ready for Fulfillment
            - Wave Built
            - Back Ordered
            - Partially Released
            - Released
            - Picking
            - Pick Complete
            - Partially Staged
            - Staged
            - Partially Loaded
            - Loaded
            - Partially Shipped
            - Ship Complete
            - Canceled
    CustomerOrderDateDTO:
      title: CustomerOrderDate
      type: object
      description: Date for a customer order or order line, which identifies the type of date and the date value.
      required:
        - value
        - qualifier
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        qualifier:
          type: string
          description: Type of date.
          enum:
            - PD
            - CD
            - ASD
            - PSD
            - RSD
            - ESD
            - CSD
            - LUD
            - ARD
            - RRD
            - CRD
            - RDD
            - ADD
            - EDD
            - APD
            - RPD
            - SPD
            - DDA
            - DDB
            - PRD
        value:
          type: string
          description: Date value.
          format: date-time
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the date was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the date was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    CustomerOrderReferenceDTO:
      title: CustomerOrderHeader
      type: object
      description: Reference value for a customer order or order line.
      required:
        - qualifier
        - value
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        qualifier:
          type: string
          maxLength: 50
          description: Definition or type of reference.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        value:
          type: string
          maxLength: 250
          description: Value for the reference.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        value2:
          type: string
          nullable: true
          description: Additional value for the reference.
          maxLength: 50
        value3:
          type: string
          nullable: true
          maxLength: 50
          description: Additional value for the reference.
        value4:
          type: string
          nullable: true
          maxLength: 50
          description: Additional value for the reference.
        value5:
          type: string
          nullable: true
          maxLength: 50
          description: Additional value for the reference.
        description:
          type: string
          nullable: true
          maxLength: 50
          description: Text that provides additional information about the reference.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the reference was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the reference was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    CustomerOrderNoteDTO:
      title: CustomerOrderNote
      type: object
      description: Note for a customer order or order line, which provides additional information about the order or order line.
      required:
        - title
        - body
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        title:
          type: string
          maxLength: 150
          description: Title of the note.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        body:
          type: string
          description: Full text of the note.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        source:
          readOnly: true
          type: string
          nullable: true
          description: Source system from which the note was imported, if applicable. Typically set to the name of the external system or to a general value of `External`.
          maxLength: 30
        priority:
          type: string
          nullable: true
          description: Priority for the note.
          maxLength: 50
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the note was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the note was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    CustomerOrderLineAllocationDTO:
      title: CustomerOrderLineAllocation
      type: object
      readOnly: true
      description: Allocation record for a customer order line, which provides information on each fulfillment source that is assigned to the order line when line splitting has occurred.
      required:
        - allocatedQuantity
        - shipFromFacility
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        orderLine:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        shipFromFacility:
          $ref: '#/components/schemas/EntityRef'
        status:
          type: string
          description: Status of the allocation for the order line.
          readOnly: true
          enum:
            - Allocated
            - Released
            - Review
            - Canceled
            - Partially Canceled
            - New
            - Rejected
        allocatedQuantity:
          type: number
          format: double
          maximum: 1.7976931348623157e+308
          minimum: 0
          description: Quantity of stock for the order line that was allocated from the specified facility.
        canceledQuantity:
          type: number
          readOnly: true
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Quantity of stock for the order line that was allocated from the specified facility but was then canceled.
        source:
          type: string
          readOnly: true
          description: Source system for the allocation. Set to a value of `External` if the allocation was created by an external system or a value of either `DOM` or `Internal` if the allocation was created through sourcing and routing in Deposco.
          enum:
            - DOM
            - Internal
            - External
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the allocation was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the allocation was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    CustomerOrderChargeAllowanceDTO:
      title: CoChargeAllowance
      type: object
      description: Charge allowance for a customer order or order line, which identifies an expense or discount for the order or order line.
      required:
        - code
        - allowChargeAmount
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        indicator:
          type: string
          nullable: true
          description: Code for whether this is an allowance or charge for the specified service. Possible values include `Charge`, `Allowance`, or both.
          maxLength: 30
        code:
          type: string
          maxLength: 30
          pattern: .*\S.*
          description: Code for the type of allowance or charge for the specified service.
          x-pattern-message: must contain at least 1 non-whitespace character
        allowChargeAmount:
          type: number
          description: Amount of the allowance or charge.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        agency:
          type: string
          nullable: true
          description: Code for the agency that assigns the code values.
          maxLength: 30
        agencyCode:
          type: string
          nullable: true
          description: Agency code for the service, promotion, allowance, or charge.
          maxLength: 30
        allowChargePercentBasis:
          type: number
          nullable: true
          description: Code for the basis on which an allowance or charge percent is calculated.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        allowChargePercent:
          type: number
          nullable: true
          description: Percentage of the allowance or charge. Percentages should be represented as real numbers. (0% through 100% should be normalized to 0.0 through 100.00.)
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        allowChargeRate:
          type: number
          nullable: true
          description: 'Value expressed in monetary currency that applies to the given quantity. Example: The rate is $5.00 off one dozen.'
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        allowChargeQty:
          type: number
          nullable: true
          description: Numeric value of the quantity for the allowance or charge.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        allowChargeQtyUom:
          type: string
          nullable: true
          description: Unit of measure for the quantity for the allowance or charge.
          maxLength: 50
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the charge allowance was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the charge allowance was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    CustomerOrderTaxDTO:
      title: CustomerOrderTax
      type: object
      description: Tax record for a customer order or order line, which provides information on a tax that has been applied to the order or order line.
      required:
        - taxType
        - taxAmount
        - taxExemptCode
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        taxType:
          type: string
          maxLength: 30
          description: Identification of the type of duty, tax, or fee applicable to commodities or of tax applicable to services.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        taxPercentage:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Amount of tax applied as a percentage.
        taxAmount:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Amount of tax applied in raw currency.
        taxExemptCode:
          type: string
          maxLength: 30
          description: Code for whether the order or item is exempt from the tax.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the tax was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that tax was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    CustomerOrderRefundDTO:
      title: CustomerOrderRefund
      type: object
      description: Refund record for a customer order, which identifies the type and amount of a refund that has been granted for the order.
      required:
        - referenceNumber
        - type
        - currencyCode
        - total
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        referenceNumber:
          type: string
          maxLength: 20
          description: Reference number for the refund in the system from which the refund was applied.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        type:
          type: string
          description: Type of refund.
          enum:
            - General Refund
            - Shipping Refund
            - Item Refund
        total:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Total amount of the refund.
        subTotal:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Amount that was refunded for the items on the order. This is the total refund amount excluding the tax amount that was refunded.
        taxTotal:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Total tax amount that was refunded.
        coPayment:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
        currencyCode:
          type: string
          maxLength: 10
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: Type of currency that was used for the payment, such as `USD`.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the refund was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the refund was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    CustomerOrderPaymentTermDTO:
      title: CoPaymentTerm
      type: object
      description: Payment term record for a customer order or order line, which identifies the terms of the payment as well as any associated discounts.
      required:
        - termsType
        - netDueDays
        - discountAmount
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        termsType:
          type: string
          maxLength: 50
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: Code or name associated with a specific set of payment terms.
        description:
          type: string
          nullable: true
          maxLength: 50
          description: Text that provides additional information about the payment terms.
        termsBasisDateCode:
          type: string
          nullable: true
          description: Date code from which the payment term duration is calculated.
          maxLength: 50
        netDueDays:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Number of days from the basis date code within which payment is due.
        netDueDate:
          type: string
          format: date-time
          description: Date by which payment is due.
        discountDate:
          type: string
          nullable: true
          format: date-time
          description: Date before which payment is at a discounted rate.
        discountRate:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Discount rate that is applied based on the payment terms.
        discountAmount:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Discount amount that is applied based on the payment terms.
        discountPercentage:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Discount percentage that is applied within the discount date.
        discountDueDays:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Days from basis date code within which payment is at a discounted rate.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the payment term was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the payment term was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    CustomerOrderLineSiteDTO:
      title: CustomerOrderLineSite
      type: object
      readOnly: true
      description: Site record for a customer order line, which identifies the trading partner site to which a certain quantity of stock for the order line is shipped.
      required:
        - tradingPartnerSite
        - orderQuantity
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        number:
          type: string
          readOnly: true
          description: Unique number that identifies the order line site record.
          maxLength: 255
        tradingPartnerSite:
          $ref: '#/components/schemas/EntityRef'
        orderQuantity:
          type: number
          description: Quantity of stock for the item that was ordered for the site.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        shippedQuantity:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Quantity of stock for the item that was shipped to the site.
        canceledQuantity:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Quantity of stock on the order line for the site that was canceled.
        returnedQuantity:
          type: number
          readOnly: true
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Quantity of stock for the item that was returned from the site.
        source:
          type: string
          readOnly: true
          maxLength: 255
          description: Source system in which the order line site record originated.
          nullable: true
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the line site was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the line site was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    CustomerOrderLineDTO:
      title: CustomerOrderLine
      x-implements: EntityDTO
      type: object
      description: Order line for a customer order, which identifies the quantity and pack for an item that the customer purchased.
      required:
        - externalLineNumber
        - packQuantity
        - orderQuantity
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        coHeader:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        number:
          readOnly: true
          type: string
          description: Identification number for the order line.
          maxLength: 50
        externalLineNumber:
          type: string
          maxLength: 150
          description: Identifier of the order line in an external system that is integrated with Deposco.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        relatedCoLine:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
        status:
          readOnly: true
          type: string
          nullable: true
          description: Status of the order line.
          enum:
            - Back Ordered
            - Complete
            - New
            - Canceled
            - Void
            - Incomplete
            - Closed
            - Open
            - Sourced
            - Allocating
            - Partially Allocated
            - Allocated
            - Partially InFulfillment
            - InFulfillment
            - Partially Released
            - Released
            - Review
            - Accepted
            - Draft
            - Template
            - Rejected
            - Future
        item:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        itemNumber:
          type: string
          description: Number of the item on the order line. Either `itemNumber` or `itemExternalReference` must be provided.
          maxLength: 256
        itemExternalReference:
          type: string
          nullable: true
          description: External reference number of the item on the order line. Optionally used to identify the item in Deposco's system.
          maxLength: 256
        pack:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        description:
          type: string
          nullable: true
          description: Text that describes the order line or the item on the order line.
          maxLength: 256
        buyerPartNumber:
          type: string
          nullable: true
          description: Customer reference number for the part number of the item on the order line.
          maxLength: 50
        consumerPackageCode:
          type: string
          nullable: true
          description: Consumer package code for the item on the order line.
          maxLength: 50
        upcCaseCode:
          type: string
          nullable: true
          description: UPC case code for the item on the order line.
          maxLength: 50
        vendorPartNumber:
          type: string
          nullable: true
          description: Vendor part number for the item on the order line.
          maxLength: 50
        ean:
          type: string
          nullable: true
          description: European Article Number (EAN) for the item on the order line.
          maxLength: 50
        gtin:
          type: string
          nullable: true
          description: Global Trade Item Number (GTIN) for the item on the order line.
          maxLength: 50
        nationalDrugCode:
          type: string
          nullable: true
          description: National Drug Code (NDC) for the item on the order line.
          maxLength: 50
        isbn:
          type: string
          nullable: true
          description: International Standard Book Number (ISBN) for the item on the order line.
          maxLength: 50
        lotNumber:
          type: string
          nullable: true
          description: Lot number for the item on the order line.
          maxLength: 200
        colorName:
          type: string
          nullable: true
          description: Name of the color for the item on the order line.
          maxLength: 50
        itemSize:
          type: string
          nullable: true
          description: Size of the item on the order line.
          maxLength: 50
        department:
          type: string
          nullable: true
          description: Department for the stock on the order line.
          maxLength: 50
        division:
          type: string
          nullable: true
          description: Division for the stock on the order line.
          maxLength: 50
        inventoryCondition:
          type: string
          nullable: true
          description: Additional field for describing the condition of the stock on the order line.
          maxLength: 255
        inventoryAttribute1:
          type: string
          nullable: true
          description: Additional field for providing descriptive information for the stock on the order line.
          maxLength: 255
        inventoryAttribute2:
          type: string
          nullable: true
          description: Additional field for providing descriptive information for the stock on the order line.
          maxLength: 255
        orderQuantity:
          type: number
          format: double
          maximum: 1.7976931348623157e+308
          description: Quantity of the item that was ordered.
          minimum: 0
          exclusiveMinimum: true
        packQuantity:
          type: integer
          minimum: 1
          description: Quantity of the pack that was ordered.
        originalOrderQuantity:
          readOnly: true
          type: number
          description: Quantity of the item on the order line when the order line was initially created. Must be a positive quantity.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        allocatedQuantity:
          readOnly: true
          type: number
          description: Calculated quantity of stock that has been successfully allocated for fulfilling the order line.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        backOrdered:
          readOnly: true
          type: boolean
          description: Whether stock was successfully allocated to fulfill the entire order line (`false`) or some or all of the order line quantity could not be allocated (`true`).
        backOrderQuantity:
          readOnly: true
          type: number
          description: Calculated quantity of stock that could not be allocated/fulfilled for the order line.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        shippedQuantity:
          readOnly: true
          type: number
          description: Calculated quantity from the order line that has shipped to the customer.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        returnedQuantity:
          readOnly: true
          type: number
          description: Calculated quantity from the order line that was returned by the customer.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        canceledQuantity:
          readOnly: true
          type: number
          description: Calculated quantity from the order line that was canceled.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        unitCost:
          type: number
          description: Unit cost of the item on the order line.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        unitPrice:
          type: number
          description: Unit price of the item on the order line.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        netPrice:
          type: number
          description: Unit price of the item on the order line with the discount applied. If no discount is applied, then the value is the same as the unit price.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        lineTotal:
          type: number
          description: Calculated total from multiplying the net price by the order quantity and the pack quantity.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        shippingAmount:
          type: number
          description: Calculated total of shipping costs for the order line.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        discountAmount:
          type: number
          description: Unit discount amount. For example, if the unit price is $1 and the discount is 10%, then the value is $0.10.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        taxable:
          type: boolean
          description: Whether the order line can be taxed.
        taxableTotal:
          type: number
          description: Total value that is eligible for taxation for the order line.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        taxAmount:
          type: number
          description: Tax that is applied to the line total.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        extendedTotal:
          type: number
          description: Calculated sum of the tax amount and the line total for the order line.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        billToContact:
          description: Name and address information for the person or company that is billed for the order line.
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
            - $ref: '#/components/schemas/AddressContactDTO'
        shipToContact:
          description: Name and address information for the person or company to whom the order line should be shipped.
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
            - $ref: '#/components/schemas/AddressContactDTO'
        freightBillToAccount:
          description: Account number that is used to pay shipping costs for the order line.
          type: string
          nullable: true
          maxLength: 50
        freightBillToContact:
          description: Name and address information for the person or company that is billed for shipping charges for the order line.
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
            - $ref: '#/components/schemas/AddressContactDTO'
        shipFromContact:
          description: Name and address information for the facility from which the order line ships.
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
            - $ref: '#/components/schemas/AddressContactDTO'
        remitToContact:
          description: Name and address information for the person or company to whom an invoice is remitted for the order line.
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
            - $ref: '#/components/schemas/AddressContactDTO'
        sellerContact:
          description: Name and address fields for the person or company that is the seller for the order line.
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
            - $ref: '#/components/schemas/AddressContactDTO'
        tradingPartnerSite:
          $ref: '#/components/schemas/NullableEntityRef'
        markForSite:
          $ref: '#/components/schemas/NullableEntityRef'
        shipFromFacility:
          $ref: '#/components/schemas/NullableEntityRef'
        originalShipFromFacility:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
        shipVendor:
          type: string
          nullable: true
          description: Shipping carrier that is used to ship the stock on the order line.
          maxLength: 50
        weight:
          type: object
          readOnly: true
          description: Calculated weight of the stock on the order line.
          properties:
            weight:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Numeric value for the weight.
            units:
              $ref: '#/components/schemas/WeightUOM'
        freightTermsType:
          type: string
          nullable: true
          description: |-
            Identifies how to determine the account that is responsible for payment of shipping costs for the order line. Set to one of the following values:

            - `Prepaid` - The shipping carrier account that created the shipment will be responsible for payment of shipping costs.
            - `Collect` - The recipient is billed for the shipment.
            - `Third Party` - A trading partner is billed for the shipment.
            - `Consignee` - Contractual billing is used to bill the customer/recipient for UPS Ground shipping services.
          enum:
            - Prepaid
            - Collect
            - Third Party
            - Consignee
        sourcingGroup:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
        customAttribute1:
          type: string
          nullable: true
          description: Custom attribute for the order line.
          maxLength: 400
        customAttribute2:
          type: string
          nullable: true
          description: Custom attribute for the order line.
          maxLength: 400
        customAttribute3:
          type: string
          nullable: true
          description: Custom attribute for the order line.
          maxLength: 400
        customAttribute4:
          type: string
          nullable: true
          description: Custom attribute for the order line.
          maxLength: 400
        customAttribute5:
          type: string
          nullable: true
          description: Custom attribute for the order line.
          maxLength: 400
        customAttribute6:
          type: string
          nullable: true
          description: Custom attribute for the order line.
          maxLength: 400
        customAttribute7:
          type: string
          nullable: true
          description: Custom attribute for the order line.
          maxLength: 400
        customAttribute8:
          type: string
          nullable: true
          description: Custom attribute for the order line.
          maxLength: 400
        customAttribute9:
          type: string
          nullable: true
          description: Custom attribute for the order line.
          maxLength: 400
        customAttribute10:
          type: string
          nullable: true
          description: Custom attribute for the order line.
          maxLength: 400
        coDates:
          type: array
          nullable: true
          description: Array of dates for the order line.
          items:
            $ref: '#/components/schemas/CustomerOrderDateDTO'
        coReferences:
          type: array
          nullable: true
          description: Array of reference values for the order line.
          items:
            $ref: '#/components/schemas/CustomerOrderReferenceDTO'
        coNotes:
          type: array
          nullable: true
          description: Array of notes for the order line.
          items:
            $ref: '#/components/schemas/CustomerOrderNoteDTO'
        coLineAllocations:
          type: array
          nullable: true
          description: Array of allocations for the order line.
          items:
            $ref: '#/components/schemas/CustomerOrderLineAllocationDTO'
        fulfillmentOrderLines:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PaginatedEntityReference'
        carrierSpecialServices:
          type: array
          readOnly: true
          description: Array of carrier special service records for the customer order. Carrier special service records contain information related to special services for shipping carriers such as dry ice and dangerous goods.
          items:
            $ref: '#/components/schemas/CarrierSpecialServiceDTO'
        coChargeAllowances:
          type: array
          nullable: true
          description: Array of charge allowances for the order line.
          items:
            $ref: '#/components/schemas/CustomerOrderChargeAllowanceDTO'
        coTaxes:
          type: array
          nullable: true
          description: Array of taxes for the order line.
          items:
            $ref: '#/components/schemas/CustomerOrderTaxDTO'
        coRefunds:
          type: array
          nullable: true
          description: Array of refunds for the order line.
          items:
            $ref: '#/components/schemas/CustomerOrderRefundDTO'
        coPaymentTerms:
          type: array
          nullable: true
          description: Array of payment terms for the order line.
          items:
            $ref: '#/components/schemas/CustomerOrderPaymentTermDTO'
        coLineSites:
          type: array
          nullable: true
          description: Array of sites to which stock for the order line should ship.
          items:
            $ref: '#/components/schemas/CustomerOrderLineSiteDTO'
        channels:
          type: array
          nullable: true
          description: Array of channel cross-references for the order line.
          items:
            $ref: '#/components/schemas/ChannelDTO'
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the order line was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the order line was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    CustomerOrderLineCollectionDTO:
      type: object
      title: Customer Order Lines
      description: Array of order lines for the customer order.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/CustomerOrderLineDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    CustomerOrderDTO:
      title: CustomerOrderHeader
      type: object
      description: Order header for a customer order, which contains information for the entire order, such as customer information, dates, and address information.
      required:
        - businessUnit
        - externalOrderNumber
        - tradingPartner
        - primarySalesChannel
        - placedDate
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        number:
          readOnly: true
          type: string
          description: Number that uniquely identifies the customer order.
          maxLength: 50
        status:
          readOnly: true
          type: string
          nullable: true
          description: Status of the customer order.
          enum:
            - Back Ordered
            - Complete
            - New
            - Canceled
            - Voided
            - Incomplete
            - Closed
            - Open
            - Sourced
            - Allocating
            - Partially Allocated
            - Allocated
            - Partially InFulfillment
            - InFulfillment
            - Partially Released
            - Released
            - Review
            - Accepted
            - Draft
            - Template
            - Rejected
            - Future
        orderType:
          nullable: true
          type: string
          description: Type of customer order, which is used in order management profile processing.
          enum:
            - Standard
            - Reorder
            - Blanket
            - Release
            - Fulfillment Network
            - Retail
        deliveryType:
          nullable: true
          type: string
          description: Identifies the customer order for special fulfillment scenarios, such as store pickup.
          enum:
            - ShipForPickup
            - StorePickup
            - ShipToCustomer
        orderPriority:
          type: string
          description: Numeric value that represents the importance of the order, where 0 is the highest priority, and 5 is the lowest priority.
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
        orderSummary:
          nullable: true
          description: Additional information about the order.
          type: string
          maxLength: 1000
        orderSource:
          nullable: true
          description: Reference field that identifies the source system in which the order was placed.
          type: string
          maxLength: 100
        secondaryOrderSource:
          nullable: true
          type: string
          description: Additional source for the order. For example, the order may have been pulled from a ChannelAdvisor integration but was originally created through Amazon.
          maxLength: 100
        externalOrderNumber:
          type: string
          maxLength: 150
          description: Business key or identifier of the order in an external system that is integrated with Deposco. The value can include hyphens (-) but must not include a period (.).
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        relatedOrderNumber:
          nullable: true
          type: string
          description: Order number of another order that is related to this order.
          maxLength: 256
        parentOrder:
          $ref: '#/components/schemas/NullableEntityRef'
        contractNumber:
          nullable: true
          type: string
          description: Contract number for the order. Used in wholesale B2B scenarios where the order relates to a contract.
          maxLength: 150
        placedDate:
          nullable: true
          type: string
          description: Date and time that the order was originally placed by the customer. This date can be different than the date that the order was created in Deposco.
          format: date-time
        tradingPartner:
          $ref: '#/components/schemas/EntityRef'
        tradingPartnerSite:
          $ref: '#/components/schemas/NullableEntityRef'
        markForSite:
          $ref: '#/components/schemas/NullableEntityRef'
        cxCustomer:
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
          readOnly: true
        accountNumber:
          nullable: true
          type: string
          description: Account number for the customer or trading partner associated with the order.
          maxLength: 256
        shipToContact:
          description: Name and address information for the person or company to whom the order should be shipped.
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
            - $ref: '#/components/schemas/AddressContactDTO'
        billToContact:
          description: Name and address information for the person or company that is billed for the order.
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
            - $ref: '#/components/schemas/AddressContactDTO'
        freightBillToAccount:
          nullable: true
          type: string
          description: Account number that is used to pay shipping costs for the order.
          maxLength: 50
        freightBillToContact:
          description: Name and address information for the person or company that is billed for shipping charges for the order.
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
            - $ref: '#/components/schemas/AddressContactDTO'
        shipFromContact:
          description: Name and address information for the person or company from which the order ships.
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
            - $ref: '#/components/schemas/AddressContactDTO'
        returnToContact:
          description: Name and address information for the person or company to which the order should be returned.
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
            - $ref: '#/components/schemas/AddressContactDTO'
        remitToContact:
          description: Name and address information for the person or company to whom an invoice is remitted for the order.
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
            - $ref: '#/components/schemas/AddressContactDTO'
        sellerContact:
          description: Name and address information for the person or company that is the seller for the order.
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
            - $ref: '#/components/schemas/AddressContactDTO'
        salesRepContact:
          description: Name and address information for the person or company that is the sales representative for the order.
          allOf:
            - $ref: '#/components/schemas/AddressDTO'
            - $ref: '#/components/schemas/AddressContactDTO'
        priceList:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
        total:
          type: number
          description: Calculated, if possible, based on the item quantity and unit price for each order line.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        subTotal:
          type: number
          description: Sum of the line total from all order lines for the order.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        discountSubtotal:
          type: number
          description: Total discount amount across the entire order (discount amount for all order lines multiplied by the order quantity and the pack quantity).
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        shippingTotal:
          type: number
          description: Total cost (or estimated cost) to ship the entire order. Typically populated as the order is captured in the sales system when a customer is paying for shipping.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        shippingAmount:
          readOnly: true
          type: number
          description: Total of the actual shipping costs for all shipments for the order.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        taxable:
          type: boolean
          description: Whether the order includes items that qualify as taxable.
        taxTotal:
          type: number
          description: Sum of the tax amount from all order lines for the order.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        taxableTotal:
          type: number
          description: Sum of the values of the taxable items and quantities for all order lines on the order.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        untaxableTotal:
          type: number
          description: Sum of the values of the items and quantities that are not taxable for all order lines on the order.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        shipTaxTotal:
          type: number
          description: Sum of the shipping tax total for all order lines for the order.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        insuranceTotal:
          type: number
          description: Sum of the insurance to apply for all order lines on the order.
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
        currencyCode:
          nullable: true
          type: string
          description: ISO 4217 code for the currency used on the order, such as `USD`, `GBP`, or `EUR`.
          maxLength: 4
        paymentStatus:
          nullable: true
          readOnly: true
          type: string
          description: Status of the payment for the order.
          maxLength: 30
        shipVia:
          nullable: true
          type: string
          description: Shipping service that is used to ship the order.
          maxLength: 50
        shippingService:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
        shipVendor:
          nullable: true
          type: string
          description: Shipping carrier, such as UPS, that is used to ship the order.
          maxLength: 50
        freightTermsType:
          nullable: true
          type: string
          description: |-
            Identifies how to determine the account that is responsible for payment of shipping costs for the customer order. Set to one of the following values:

            - `Prepaid` - The shipping carrier account that created the shipment will be responsible for payment of shipping costs.
            - `Collect` - The recipient is billed for the shipment.
            - `Third Party` - A trading partner is billed for the shipment.
            - `Consignee` - Contractual billing is used to bill the customer/recipient for UPS Ground shipping services.
          enum:
            - Prepaid
            - Collect
            - Third Party
            - Consignee
        weight:
          type: object
          description: Estimated weight of the shipments for the order.
          readOnly: true
          properties:
            weight:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
            units:
              $ref: '#/components/schemas/WeightUOM'
        returnRequired:
          description: Whether to generate and print a return label for the order.
          type: boolean
        returnShipVia:
          nullable: true
          readOnly: true
          type: string
          description: Shipping service that should be used for any returns for the order.
          maxLength: 50
        returnShippingService:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
        returnShipOption:
          nullable: true
          type: string
          description: Used by the GPPrintReturnLabel process to specify how to deliver the return label to the customer, such as print or electronic.
          maxLength: 100
        deliveryConfirmation:
          nullable: true
          type: string
          description: Leave blank if no signature is required. Set to 2 if a signature is required. Use of other values depends on the shipping carrier.
          maxLength: 45
        insuranceRequired:
          type: boolean
          description: Whether insurance is required for the package(s) in which the order ships. Must be set to `true` if insurance is required above the minimum default value for the shipping carrier. Insurance cost is calculated based on the value of items in the shipping container.
        homeDelivery:
          type: boolean
          description: Used when FedEx is the shipping carrier to specify whether FedEx Home Delivery is required.
        residential:
          type: boolean
          description: Used when UPS is the shipping carrier to identify whether the address is a residential address.
        saturdayDelivery:
          type: boolean
          description: Used when UPS is the shipping carrier to specify whether the customer is requesting Saturday delivery for the order.
        scacCode:
          nullable: true
          type: string
          description: Standard Carrier Alpha Code (SCAC) code for the carrier that is used to transport the order.
          maxLength: 10
        transMethodCode:
          nullable: true
          type: string
          description: Optional code that defines the transportation method used by the carrier that is assigned to transport the order.
          maxLength: 50
        routingNumber:
          nullable: true
          type: string
          description: Transportation routing number for the trip to which the order is assigned.
          maxLength: 30
        dutyPaidBy:
          nullable: true
          type: string
          description: Used for international shipments to identify how duties are paid for the order. Set to `DDP` if duties are paid by the shipper or `DDU` if duties are paid by the recipient. If no value is specified, then the value for the shipping service that is assigned to the order is used. Supported only for certain shipping carriers such as UPS, FedEx, DHL eCommerce, DHL Express, and Globegistics.
          maxLength: 20
        incotermsType:
          nullable: true
          type: string
          description: International Commercial Terms, such as EXS or FCA.
          enum:
            - Collect
            - Prepaid
        importType:
          nullable: true
          type: string
          description: Used in socket integrations to identify the order for certain fulfillment scenarios, such as Amazon Prime orders from the Amazon Seller Central socket.
          maxLength: 100
          readOnly: true
        otherReferenceNumber:
          nullable: true
          type: string
          description: Additional reference number for the order.
          maxLength: 256
        otherReferenceNumber2:
          nullable: true
          type: string
          description: Additional reference number for the order.
          maxLength: 256
        integrationPoint:
          $ref: '#/components/schemas/NullableEntityRef'
        primarySalesChannel:
          $ref: '#/components/schemas/EntityRef'
        fulfillmentSalesChannel:
          $ref: '#/components/schemas/NullableEntityRef'
        coManagementProfile:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
        routingProfile:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
        consolidationGroupKey:
          nullable: true
          readOnly: true
          type: string
          description: ID that is generated to connect multiple customer orders that meet a specified set of matching criteria and can be consolidated during the order routing process so that they are fulfilled as if they are a single customer order.
          maxLength: 40
        saleConditionCode:
          nullable: true
          type: string
          description: Used for Amazon Vendor Central and Amazon Advantage socket integrations.
          maxLength: 50
        department:
          nullable: true
          type: string
          description: Department for the order.
          maxLength: 50
        division:
          nullable: true
          type: string
          description: Division for the order.
          maxLength: 50
        verbalConfirmationName:
          nullable: true
          type: string
          description: Reserved for future use.
          maxLength: 45
        verbalConfirmationPhoneNumber:
          nullable: true
          type: string
          description: Reserved for future use.
          maxLength: 45
        customAttribute1:
          nullable: true
          type: string
          description: Custom attribute for the customer order.
          maxLength: 100
        customAttribute2:
          nullable: true
          type: string
          description: Custom attribute for the customer order.
          maxLength: 100
        customAttribute3:
          nullable: true
          type: string
          description: Custom attribute for the customer order.
          maxLength: 100
        customAttribute4:
          nullable: true
          type: string
          description: Custom attribute for the customer order.
          maxLength: 100
        customAttribute5:
          nullable: true
          type: string
          description: Custom attribute for the customer order.
          maxLength: 100
        customAttribute6:
          nullable: true
          type: string
          description: Custom attribute for the customer order.
          maxLength: 100
        customAttribute7:
          nullable: true
          type: string
          description: Custom attribute for the customer order.
          maxLength: 100
        customAttribute8:
          nullable: true
          type: string
          description: Custom attribute for the customer order.
          maxLength: 100
        customAttribute9:
          nullable: true
          type: string
          description: Custom attribute for the customer order.
          maxLength: 100
        customAttribute10:
          nullable: true
          type: string
          description: Custom attribute for the customer order.
          maxLength: 100
        coLines:
          $ref: '#/components/schemas/CustomerOrderLineCollectionDTO'
        coDates:
          type: array
          nullable: true
          description: Array of dates for the customer order.
          items:
            $ref: '#/components/schemas/CustomerOrderDateDTO'
        coNotes:
          type: array
          nullable: true
          description: Array of notes for the customer order.
          items:
            $ref: '#/components/schemas/CustomerOrderNoteDTO'
        fulfillmentOrders:
          type: array
          nullable: true
          readOnly: true
          description: Array of fulfillment orders for the customer order.
          items:
            $ref: '#/components/schemas/EntityRef'
        carrierSpecialServices:
          type: array
          readOnly: true
          description: Array of carrier special service records for the customer order. Carrier special service records contain information related to special services for shipping carriers such as dry ice and dangerous goods.
          items:
            $ref: '#/components/schemas/CarrierSpecialServiceDTO'
        checkoutPromiseRef:
          type: string
          nullable: true
          maxLength: 60
          description: A unique reference that was provided to the shopping cart of a customer when using the feature Customer Delivery Promise.
        channels:
          type: array
          nullable: true
          description: Array of channel cross-references for the customer order.
          items:
            $ref: '#/components/schemas/ChannelDTO'
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the customer order was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the customer order was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    CustomerOrderResponseCollectionDTO:
      type: object
      title: Customer Orders
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/CustomerOrderDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    CustomerOrderPaymentDTO:
      title: CustomerOrderPayment
      type: object
      description: Payment record for a customer order or retail activity, which provides information for a payment that was made by the customer for the order or retail transaction.
      required:
        - type
        - amount
        - currencyCode
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        coRetailActivity:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
        paymentNumber:
          type: string
          nullable: true
          description: ID number for the payment.
          maxLength: 100
        type:
          type: string
          description: Type of payment.
          enum:
            - Authorization
            - Capture
            - Payment
            - Refund
            - Void
        amount:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Amount of the payment.
        currencyCode:
          type: string
          maxLength: 10
          description: Type of currency that was used for the payment, such as `USD`.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        gatewayName:
          type: string
          nullable: true
          description: Name of the gateway that was used to make the payment.
          maxLength: 50
        paymentMethod:
          type: string
          nullable: true
          description: Method of payment, such as `CreditCard`.
          maxLength: 20
        cardType:
          type: string
          nullable: true
          description: Type of credit or debit card that was used to make the payment.
          maxLength: 20
        debitCard:
          type: boolean
          description: Whether the card that was used for the payment was a debit card.
        authorized:
          type: boolean
          description: Whether the payment was authorized.
        authorizationNumber:
          type: string
          nullable: true
          description: Authorization number for the payment.
          maxLength: 100
        authorizationDate:
          type: string
          nullable: true
          description: Date and time when the payment was authorized.
          format: date-time
        authorizationCode:
          type: string
          nullable: true
          description: Authorization code for the payment.
          maxLength: 50
        authorizationMessage:
          type: string
          nullable: true
          description: Authorization message for the payment.
        authorizationOnly:
          type: boolean
          description: Whether the payment was only an authorization.
        voided:
          type: boolean
          description: Whether the payment was voided.
        testTransaction:
          type: boolean
          description: Whether the transaction for the payment was a test transaction.
        cxCustomer:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/NullableEntityRef'
        customerPresent:
          type: boolean
          description: Whether the customer was present for the payment.
        parentPaymentNumber:
          type: string
          nullable: true
          maxLength: 100
          description: ID number for the parent payment that is associated with this payment.
        additionalData:
          type: string
          nullable: true
          description: Additional data associated with the payment.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the payment was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the payment was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    CustomerOrderRetailActivityDTO:
      title: CustomerOrderRetailActivity
      type: object
      description: Retail activity for a customer order, which provides information about customer sales and returns from a point-of-sale (POS) system at a retail store.
      required:
        - transactionSource
        - retailTransactionId
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        type:
          type: string
          nullable: true
          description: Type of retail transaction.
          enum:
            - Sale
            - Return
            - PostVoid
        retailTransactionId:
          type: string
          maxLength: 50
          description: Universally unique transaction number from the source POS system for when a unique id is needed across multiple stores.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        sequenceNumber:
          type: string
          nullable: true
          maxLength: 10
          description: Sequence number of the transaction. In many cases, a retail store restarts the sequence number for transactions to zero (0) each day.
        batch:
          type: string
          nullable: true
          maxLength: 50
          description: Batch ID when the retail activity is part of a group of transactions.
        batchSequenceNumber:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Sequence number for the retail transaction when the transaction is part of a batch of transactions.
        referenceNumber:
          type: string
          nullable: true
          maxLength: 50
          description: Customer-facing receipt number for the transaction. In POS systems, this is sometimes called the invoice number or ticket number. The value can include hyphens (-) but must not include a period (.).
        facility:
          $ref: '#/components/schemas/NullableEntityRef'
        register:
          type: string
          nullable: true
          maxLength: 20
          description: Store register at which the transaction occurred.
        till:
          type: string
          nullable: true
          maxLength: 15
          description: Cash till in the store register at which the transaction occurred.
        associate:
          type: string
          nullable: true
          maxLength: 50
          description: Store associate or operator who performed the transaction at the workstation in the retail store.
        user:
          $ref: '#/components/schemas/NullableEntityRef'
        businessDayDate:
          nullable: true
          type: string
          format: date-time
          description: Business day on which the transaction occurred.
        transactionStartDate:
          nullable: true
          type: string
          format: date-time
          description: Start date and time for the transaction.
        transactionEndDate:
          nullable: true
          type: string
          format: date-time
          description: End date and time for the transaction.
        transactionSource:
          type: string
          maxLength: 50
          description: Name of the point-of-sale (POS) system from which the retail transaction was sent.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        testTransaction:
          type: boolean
          description: Whether the transaction is a test transaction used for training or testing.
        voided:
          type: boolean
          description: Whether the transaction was voided.
        reasonCode:
          type: string
          nullable: true
          maxLength: 20
          description: Used for return and void transactions to explain why the transaction occurred.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the retail activity was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the retail activity was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    CustomerOrderTagDTO:
      title: Tag
      type: object
      description: Tag for a customer order, which is a keyword or phrase that can be used to categorize the order.
      properties:
        tag:
          type: string
          description: Tag value for the customer order.
          maxLength: 50
    CustomerOrderRequestDTO:
      type: object
      description: Request format for creating or updating a Customer Order. Only updates or adds information to the Customer Order.
      properties:
        customerOrder:
          allOf:
            - $ref: '#/components/schemas/CustomerOrderDTO'
            - type: object
              properties:
                coPaymentTerms:
                  type: array
                  items:
                    $ref: '#/components/schemas/CustomerOrderPaymentTermDTO'
                coPayments:
                  type: array
                  items:
                    $ref: '#/components/schemas/CustomerOrderPaymentDTO'
                coChargeAllowances:
                  type: array
                  items:
                    $ref: '#/components/schemas/CustomerOrderChargeAllowanceDTO'
                coTaxes:
                  type: array
                  items:
                    $ref: '#/components/schemas/CustomerOrderTaxDTO'
                coRetailActivities:
                  type: array
                  items:
                    $ref: '#/components/schemas/CustomerOrderRetailActivityDTO'
                coRefunds:
                  type: array
                  items:
                    $ref: '#/components/schemas/CustomerOrderRefundDTO'
                coReferences:
                  type: array
                  items:
                    $ref: '#/components/schemas/CustomerOrderReferenceDTO'
                tags:
                  type: array
                  items:
                    $ref: '#/components/schemas/CustomerOrderTagDTO'
    AsyncRequestIdDTO:
      title: AsyncRequestIdDTO
      type: object
      properties:
        request:
          type: object
          properties:
            id:
              type: string
              description: ID of the asynchronous request.
              readOnly: true
            href:
              type: string
              description: Hyperlink to access the `GET` endpoint to retrieve the status of the asynchronous request.
              nullable: true
              readOnly: true
    CustomerOrderDetailDTO:
      title: CustomerOrderDetails
      type: object
      readOnly: true
      properties:
        coPaymentTerms:
          type: array
          readOnly: true
          nullable: true
          description: Array of payment terms for the customer order.
          items:
            $ref: '#/components/schemas/CustomerOrderPaymentTermDTO'
        coPayments:
          type: array
          readOnly: true
          nullable: true
          description: Array of payments for the customer order.
          items:
            $ref: '#/components/schemas/CustomerOrderPaymentDTO'
        coChargeAllowances:
          type: array
          readOnly: true
          nullable: true
          description: Array of charge allowances for the customer order.
          items:
            $ref: '#/components/schemas/CustomerOrderChargeAllowanceDTO'
        coTaxes:
          type: array
          readOnly: true
          nullable: true
          description: Array of taxes for the customer order.
          items:
            $ref: '#/components/schemas/CustomerOrderTaxDTO'
        coRefunds:
          type: array
          readOnly: true
          nullable: true
          description: Array of refunds for the customer order.
          items:
            $ref: '#/components/schemas/CustomerOrderRefundDTO'
        coReferences:
          type: array
          readOnly: true
          nullable: true
          description: Array of reference values for the customer order.
          items:
            $ref: '#/components/schemas/CustomerOrderReferenceDTO'
    CustomerOrderNoticeDTO:
      title: CustomerOrderNotice
      readOnly: true
      type: object
      description: Notice for a customer order, which provides information on an error or key event that requires the order to be reviewed.
      required:
        - code
        - noticeType
        - providedValue
        - status
        - message
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        noticeType:
          readOnly: true
          type: string
          maxLength: 50
          description: Type of notice, which is `ERROR` in most cases.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        code:
          readOnly: true
          type: string
          maxLength: 50
          description: Code for the issue type, such as `MISSING_REQUIRED`, `NO_ITEM_ON_LINE`, or `POTENTIAL_DUPLICATE_ORDER`. A list of of codes and recommended steps to resolve notices is available in the Deposco Help Center.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        message:
          readOnly: true
          type: string
          maxLength: 1500
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: Description of the issue that generated the notice.
        fieldName:
          readOnly: true
          nullable: true
          type: string
          description: Field on the entity with missing or invalid data.
          maxLength: 50
        providedValue:
          readOnly: true
          type: string
          maxLength: 4000
          description: Value that was provided in the field and caused the error.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        status:
          readOnly: true
          type: string
          maxLength: 50
          description: Status of the notice. Available values are `New` and `Resolved`.
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
        comment:
          readOnly: true
          nullable: true
          description: Additional text that explains why the issue occurred or how it was resolved.
          type: string
          maxLength: 4000
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the notice was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the notice was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    CustomerOrderResponseDTO:
      type: object
      readOnly: true
      description: Response for getting a specific customer order. If an error has occurred in processing, also returns any new notices.
      properties:
        customerOrder:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/CustomerOrderDTO'
            - $ref: '#/components/schemas/CustomerOrderDetailDTO'
        notices:
          type: array
          nullable: true
          readOnly: true
          description: Array of notices for the customer order.
          items:
            $ref: '#/components/schemas/CustomerOrderNoticeDTO'
    properties-orderStatus:
      type: string
      description: Overall status of the order as it progresses through the receiving process. New orders should be created with a status of either New or Hold.
      enum:
        - Draft
        - New
        - Hold
        - In-Transit
        - Arrived
        - Receiving
        - Partial Receipt
        - Received
        - Canceled
        - Closed
    PurchaseOrderLineDTO:
      title: Purchase order line
      x-implements: OrderLineDTO
      description: Order line for a purchase order, which identifies the quantity and pack for an item that is purchased from the supplier.
      required:
        - orderPackQuantity
        - item
        - pack
      allOf:
        - $ref: '#/components/schemas/BaseOrderLineDTO'
        - type: object
          properties:
            orderLineStatus:
              type: string
              x-implements: OrderLineStatusDTO
              readOnly: true
              nullable: true
              description: Status of the order line. New order lines should be created with a status of New.
              enum:
                - New
                - Hold
                - In-Transit
                - Arrived
                - Partial Receipt
                - Received
                - Canceled
                - Closed
            shipToFacility:
              $ref: '#/components/schemas/NullableEntityRef'
            inboundLPN:
              type: string
              maxLength: 30
              nullable: true
              description: LPN number for the LPN in which stock is sent/received. Required when receiving LPNs against either a single purchase order or multiple purchase orders.
            masterInboundLPN:
              type: string
              maxLength: 30
              nullable: true
              description: LPN number for the pallet on which the LPN for the order line is stacked.
            receivedPackQuantity:
              type: number
              format: float
              minimum: -3.4028235e+38
              maximum: 3.4028235e+38
              readOnly: true
              description: Quantity of the item/pack that was received.
            receivedDamagedPackQuantity:
              type: number
              format: float
              minimum: -3.4028235e+38
              maximum: 3.4028235e+38
              readOnly: true
              description: Quantity of the item/pack that was received in a damaged condition.
            returnedPackQuantity:
              type: number
              format: float
              minimum: -3.4028235e+38
              maximum: 3.4028235e+38
              readOnly: true
              description: Quantity from the order line that was returned to the vendor. Must be a positive value.
            invoice:
              type: string
              maxLength: 50
              nullable: true
              description: Invoice number of an invoice that is associated with the order line.
    PurchaseOrderLineCollectionDTO:
      type: object
      x-implements: OrderLineCollectionDTO
      title: Purchase order lines
      description: Array of order lines for the purchase order. A maximum of 100 order lines can be created or updated for an order in a single request.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/PurchaseOrderLineDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    PurchaseOrderDTO:
      title: Purchase order
      description: Order header for a purchase order, which contains information for the entire order, such as supplier information, dates, and address information.
      x-implements: OrderHeaderDTO
      allOf:
        - $ref: '#/components/schemas/BaseOrderHeaderDTO'
        - type: object
          properties:
            type:
              type: string
              nullable: true
              readOnly: true
              description: Type of order.
              enum:
                - Purchase Order
                - null
            orderStatus:
              type: string
              nullable: true
              description: Overall status of the order as it progresses through the receiving process. New orders should be created with a status of either New or Hold.
              enum:
                - Draft
                - New
                - Hold
                - In-Transit
                - Arrived
                - Receiving
                - Partial Receipt
                - Received
                - Canceled
                - Closed
            shipToFacility:
              $ref: '#/components/schemas/NullableEntityRef'
            paymentTerms:
              type: string
              nullable: true
              maxLength: 50
              description: When payment is due for the purchase order. The list of payment terms for an environment must be defined with the assistance of a Deposco representative.
            currencyCode:
              type: string
              nullable: true
              maxLength: 3
              description: Code for the currency type that should be used for the purchase order. Available values include `CAN`, `EUR`, `GBP`, `MXN`, and `USD`.
            contractNumber:
              type: string
              nullable: true
              maxLength: 20
              description: Trading partner contract number associated with the purchase order.
            ackReasonCode:
              nullable: true
              type: string
              maxLength: 4
              description: Code that provides details on the overall acknowledgement status for the purchase order. A value of `AK` indicates that the order was accepted as-is, `RJ` indicates that the order was rejected, and `AC` indicates that the order was accepted with changes, which means that individual order lines were accepted or rejected, and quantities may be changed on accepted order lines.
            invSegmentationPlan:
              $ref: '#/components/schemas/NullableEntityRef'
            onTime:
              type: boolean
              description: Reserved for future use.
            vendorCompliant:
              type: boolean
              description: Reserved for future use.
            orderLines:
              $ref: '#/components/schemas/PurchaseOrderLineCollectionDTO'
            shipments:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/PaginatedEntityReference'
    PurchaseOrderCollectionDTO:
      type: object
      title: Purchase orders
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/PurchaseOrderDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    properties-orderLineStatus:
      type: string
      readOnly: true
      description: Status of the order line. New order lines should be created with a status of New.
      enum:
        - New
        - Hold
        - In-Transit
        - Arrived
        - Partial Receipt
        - Received
        - Canceled
        - Closed
    PurchaseOrderStatusDTO:
      title: Purchase order status
      type: object
      properties:
        orderStatus:
          type: string
          description: Overall status of the order as it progresses through the receiving process. New orders should be created with a status of either New or Hold.
          enum:
            - Draft
            - New
            - Hold
            - In-Transit
            - Arrived
            - Receiving
            - Partial Receipt
            - Received
            - Canceled
            - Closed
    CustomerReturnStatusDTO:
      title: Customer return status
      type: object
      properties:
        orderStatus:
          type: string
          description: Overall status of the customer return as it progresses through the receiving process. New customer returns should be created with a status of New.
          enum:
            - New
            - Hold
            - Receiving
            - Partial Receipt
            - Received
            - Canceled
    CustomerReturnLineDTO:
      title: Customer return line
      x-implements: OrderLineDTO
      required:
        - orderPackQuantity
        - item
        - pack
      allOf:
        - $ref: '#/components/schemas/BaseOrderLineDTO'
        - type: object
          properties:
            orderLineStatus:
              type: string
              x-implements: OrderLineStatusDTO
              description: Status of the order line. New order lines should be created with a status of New.
              readOnly: true
              nullable: true
              enum:
                - New
                - Receiving
                - Partial Receipt
                - Received
                - Canceled
            shipToFacility:
              $ref: '#/components/schemas/NullableEntityRef'
            coLine:
              $ref: '#/components/schemas/NullableEntityRef'
            receivedPackQuantity:
              type: number
              description: Quantity of the item/pack that was received.
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
            receivedDamagedPackQuantity:
              type: number
              description: Quantity of the item/pack that was received in a damaged condition.
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
    CustomerReturnLineCollectionDTO:
      type: object
      x-implements: OrderLineCollectionDTO
      title: Customer return lines
      description: Array of order lines for the customer return. A maximum of 100 order lines can be created or updated for a customer return in a single request.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/CustomerReturnLineDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    CustomerReturnDTO:
      title: Customer return
      x-implements: OrderHeaderDTO
      required:
        - shipToFacility
      allOf:
        - $ref: '#/components/schemas/BaseOrderHeaderDTO'
        - type: object
          properties:
            type:
              type: string
              nullable: true
              readOnly: true
              description: Type of order.
              enum:
                - Customer Return
                - null
            orderStatus:
              type: string
              nullable: true
              description: Overall status of the customer return as it progresses through the receiving process. New customer returns should be created with a status of New.
              x-field-extra-annotation: '@lombok.Builder.Default'
              enum:
                - New
                - Hold
                - Receiving
                - Partial Receipt
                - Received
                - Canceled
            shipToFacility:
              $ref: '#/components/schemas/NullableEntityRef'
            parentOrder:
              $ref: '#/components/schemas/NullableEntityRef'
            coHeader:
              $ref: '#/components/schemas/NullableEntityRef'
            orderLines:
              $ref: '#/components/schemas/CustomerReturnLineCollectionDTO'
    CustomerReturnCollectionDTO:
      type: object
      title: Customer returns
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/CustomerReturnDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    CustomerReturnLineStatusDTO_properties-orderLineStatus:
      type: string
      description: Status of the order line. New order lines should be created with a status of New.
      enum:
        - New
        - Receiving
        - Partial Receipt
        - Received
        - Canceled
    VendorReturnLineDTO:
      title: Vendor return line
      x-implements: OrderLineDTO
      description: Order line for a customer return, which identifies the quantity and pack for an item that the customer is returning.
      required:
        - orderPackQuantity
        - item
        - pack
      allOf:
        - $ref: '#/components/schemas/BaseOrderLineDTO'
        - type: object
          properties:
            orderLineStatus:
              type: string
              x-implements: OrderLineStatusDTO
              nullable: true
              description: Status of the order line. New order lines should be created with a status of New.
              enum:
                - Awaiting Delivery
                - Awaiting Pickup
                - Awaiting Shipment
                - Back Ordered
                - Canceled
                - Closed
                - Complete
                - Draft
                - Drop Ship
                - Full Payment
                - In Progress
                - Needs Attention
                - New
                - Open
                - Partial Released
                - Partial Returned
                - Partial Payment
                - Partial Return
                - Picking
                - Wave Built
                - Released
                - Releasing
                - Returned
                - Substituted
                - Voided
            shipFromFacility:
              $ref: '#/components/schemas/NullableEntityRef'
            allocatedQuantity:
              readOnly: true
              type: number
              format: float
              description: Inventory quantity of the item/pack that is being held for the order line. Commonly populated with the same value as the order pack quantity when sending orders to Deposco.
            unallocatedQuantity:
              readOnly: true
              type: number
              format: float
              minimum: -3.4028235e+38
              maximum: 3.4028235e+38
              description: Quantity of the item/pack for the order line that does not have any allocated inventory.
            pickedPackQuantity:
              readOnly: true
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Quantity of the item/pack that has been picked for the order line.
            shippedPackQuantity:
              readOnly: true
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Quantity of the item/pack that has shipped for the order line. Must be a positive value.
            preallocated:
              readOnly: true
              type: boolean
              description: Whether stock for the order line line was allocated during a separate process before the order was included on a pick wave.
            isBackOrdered:
              type: string
              readOnly: true
              nullable: true
              description: Reason code that provides additional details when an order line is backordered.
              enum:
                - Back Ordered
                - Not Back Ordered
                - Exception Pick
                - Awaiting Stock Movement
            directedToZone:
              $ref: '#/components/schemas/NullableEntityRef'
            allocateFromZone:
              type: boolean
              description: Whether to allocate stock to fulfill the order from the zone in the `directedToZone` field.
    VendorReturnLineCollectionDTO:
      type: object
      x-implements: OrderLineCollectionDTO
      title: Vendor return lines
      description: Array of order lines for the vendor return. A maximum of 100 order lines can be created or updated for a vendor return in a single request.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/VendorReturnLineDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    VendorReturnDTO:
      title: Vendor return
      description: Order header for a vendor return, which contains information for the entire order such as the purchase order that is associated with the vendor return, supplier contact information, and status information.
      x-implements: OrderHeaderDTO
      required:
        - shipToContact
        - shipToAddress
        - shipFromFacility
      allOf:
        - $ref: '#/components/schemas/BaseOrderHeaderDTO'
        - type: object
          properties:
            type:
              type: string
              nullable: true
              readOnly: true
              description: Type of order.
              enum:
                - Vendor Return
                - null
            parentOrder:
              $ref: '#/components/schemas/NullableEntityRef'
            orderStatus:
              type: string
              nullable: true
              description: Overall status of the vendor return as it progresses through the fulfillment process. New vendor returns should be created with a status of New.
              enum:
                - Draft
                - New
                - Hold
                - Ready for Fulfillment
                - Wave Built
                - Back Ordered
                - Partially Released
                - Released
                - Picking
                - Pick Complete
                - Partially Staged
                - Staged
                - Partially Loaded
                - Loaded
                - Partially Shipped
                - Ship Complete
                - Canceled
            shipFromFacility:
              $ref: '#/components/schemas/NullableEntityRef'
            dutyPaidBy:
              type: string
              nullable: true
              enum:
                - DDU
                - DDP
              description: |-
                Used for international shipments to identify how duties are paid for the order. Set to DDP if duties are paid by the shipper or DDU if duties are paid by the recipient.
                If no value is specified, then the value for the shipping service that is assigned to the order is used. Supported only for certain shipping carriers such as UPS, FedEx, DHL eCommerce, DHL Express, and Globegistics.
            dutyPaidByType:
              type: string
              nullable: true
              enum:
                - Seller
                - Receiver
                - Third party
              description: Identifies how to determine the account that is responsible for payment of international shipping duties for the order when `dutyPaidBy` is set to `DDP`.
            dutyPaidByContactName:
              nullable: true
              type: string
              maxLength: 50
              description: Name of the contact person for the party that is responsible for payment of international shipping duties for the order when `dutyPaidBy` is set to `DDP`.
            dutyPaidByAccount:
              nullable: true
              type: string
              maxLength: 50
              description: Account number that is used to pay international shipping duties for the order when `dutyPaidBy` is set to `DDP`.
            dutyPaidByPostalCode:
              nullable: true
              type: string
              maxLength: 50
              description: Postal (ZIP) code of the address for the party that is responsible for payment of international shipping duties for the order when `dutyPaidBy` is set to `DDP`.
            dutyPaidByCountry:
              nullable: true
              type: string
              maxLength: 50
              description: Two-letter (ISO 3166-1 alpha-2) country code of the address for the party that is responsible for payment of international shipping duties for the order when `dutyPaidBy` is set to `DDP`.
            directedToZone:
              $ref: '#/components/schemas/NullableEntityRef'
            orderLines:
              $ref: '#/components/schemas/VendorReturnLineCollectionDTO'
            shipments:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/PaginatedEntityReference'
    VendorReturnCollectionDTO:
      type: object
      title: Vendor returns
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/VendorReturnDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    VendorReturnStatusDTO:
      title: Vendor return status
      type: object
      properties:
        orderStatus:
          type: string
          description: Overall status of the order as it progresses through the fulfillment process. New orders should be created with a status of either New or Hold.
          enum:
            - Draft
            - New
            - Hold
            - Ready for Fulfillment
            - Wave Built
            - Back Ordered
            - Partially Released
            - Released
            - Picking
            - Pick Complete
            - Partially Staged
            - Staged
            - Partially Loaded
            - Loaded
            - Partially Shipped
            - Ship Complete
            - Canceled
    OutboundTransferOrderStatusDTO_properties-orderStatus:
      type: string
      description: Overall status of the order as it progresses through the fulfillment process. New orders should be created with a status of either New or Hold.
      enum:
        - Draft
        - New
        - Hold
        - Wave Built
        - Back Ordered
        - Partially Released
        - Released
        - Picking
        - Pick Complete
        - Partially Staged
        - Staged
        - Partially Loaded
        - Loaded
        - Partially Shipped
        - Ship Complete
        - Canceled
    OutboundTransferOrderLineDTO:
      title: Outbound transfer order line
      x-implements: OrderLineDTO
      description: Order line for an outbound transfer order, which identifies the quantity and pack for an item that is transferred from one facility to another.
      required:
        - customerLineNumber
      allOf:
        - $ref: '#/components/schemas/BaseOrderLineDTO'
        - type: object
          properties:
            orderLineStatus:
              type: string
              x-implements: OrderLineStatusDTO
              readOnly: true
              nullable: true
              description: Status of the order line. New order lines should be created with a status of New.
              enum:
                - New
                - Canceled
                - Complete
                - Draft
                - Hold
                - Picking
                - Wave Built
                - Released
            shipFromFacility:
              $ref: '#/components/schemas/NullableEntityRef'
            coLine:
              readOnly: true
              $ref: '#/components/schemas/EntityRef'
            allocatedQuantity:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Inventory quantity of the item/pack that is being held for the order line. Commonly populated with the same value as the order pack quantity when sending orders to Deposco.
            unallocatedQuantity:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Quantity of the item/pack for the order line that does not have any allocated inventory.
            pickedPackQuantity:
              readOnly: true
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Quantity of the item/pack that has been picked to fulfill the order line.
            shortagePackQuantity:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Quantity of the item/pack that is not being shipped for the order line.
            shippedPackQuantity:
              readOnly: true
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Quantity of the item/pack that has shipped for the order line. Must be a positive value.
            preallocated:
              readOnly: true
              type: boolean
              description: Whether stock for the order line line was allocated during a separate process before the order was included on a pick wave.
            isBackOrdered:
              type: string
              readOnly: true
              nullable: true
              description: Reason code that provides additional details when an order line is backordered.
              enum:
                - Back Ordered
                - Not Back Ordered
                - Exception Pick
                - Awaiting Stock Movement
            directedToZone:
              $ref: '#/components/schemas/NullableEntityRef'
            allocateFromZone:
              type: boolean
              description: Whether to allocate stock to fulfill the order from the zone in the `directedToZone` field.
            carrierSpecialServices:
              type: array
              description: Array of carrier special service records for the order line. Carrier special service records contain information related to special services for shipping carriers such as dry ice and dangerous goods.
              items:
                $ref: '#/components/schemas/CarrierSpecialServiceDTO'
    OutboundTransferOrderLineCollectionDTO:
      type: object
      x-implements: OrderLineCollectionDTO
      title: Outbound transfer order lines
      description: Array of order lines for the outbound transfer order. A maximum of 100 order lines can be created or updated for an order in a single request.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/OutboundTransferOrderLineDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    OutboundTransferOrderDTO:
      title: Outbound transfer order
      description: Order header for an outbound transfer order, which contains information for the entire order such as the source (Ship From) and destination (Ship To) facilities, as well as the overall status of the order. A source facility is required on order creation.
      x-implements: OrderHeaderDTO
      required:
        - shipFromFacility
      allOf:
        - $ref: '#/components/schemas/BaseOrderHeaderDTO'
        - type: object
          properties:
            type:
              type: string
              nullable: true
              readOnly: true
              description: Type of order.
              enum:
                - Outbound Transfer Order
                - null
            orderStatus:
              type: string
              nullable: true
              description: Overall status of the order as it progresses through the fulfillment process. New orders should be created with a status of either New or Hold.
              enum:
                - Draft
                - New
                - Hold
                - Wave Built
                - Back Ordered
                - Partially Released
                - Released
                - Picking
                - Pick Complete
                - Partially Staged
                - Staged
                - Partially Loaded
                - Loaded
                - Partially Shipped
                - Ship Complete
                - Canceled
            shipToFacility:
              $ref: '#/components/schemas/NullableEntityRef'
            shipFromFacility:
              $ref: '#/components/schemas/NullableEntityRef'
            dutyPaidBy:
              type: string
              nullable: true
              enum:
                - DDU
                - DDP
              description: |-
                Used for international shipments to identify how duties are paid for the order. Set to DDP if duties are paid by the shipper or DDU if duties are paid by the recipient.
                If no value is specified, then the value for the shipping service that is assigned to the order is used. Supported only for certain shipping carriers such as UPS, FedEx, DHL eCommerce, DHL Express, and Globegistics.
            dutyPaidByType:
              type: string
              nullable: true
              enum:
                - Seller
                - Receiver
                - Third party
              description: Identifies how to determine the account that is responsible for payment of international shipping duties for the order when `dutyPaidBy` is set to `DDP`.
            dutyPaidByContactName:
              nullable: true
              type: string
              maxLength: 50
              description: Name of the contact person for the party that is responsible for payment of international shipping duties for the order when `dutyPaidBy` is set to `DDP`.
            dutyPaidByAccount:
              nullable: true
              type: string
              maxLength: 50
              description: Account number that is used to pay international shipping duties for the order when `dutyPaidBy` is set to `DDP`.
            dutyPaidByPostalCode:
              nullable: true
              type: string
              maxLength: 50
              description: Postal (ZIP) code of the address for the party that is responsible for payment of international shipping duties for the order when `dutyPaidBy` is set to `DDP`.
            dutyPaidByCountry:
              nullable: true
              type: string
              maxLength: 50
              description: Two-letter (ISO 3166-1 alpha-2) country code of the address for the party that is responsible for payment of international shipping duties for the order when `dutyPaidBy` is set to `DDP`.
            directedToZone:
              $ref: '#/components/schemas/NullableEntityRef'
            customerOrderHeaders:
              type: array
              readOnly: true
              description: Array of customer orders (from Bright Order) that are associated with the outbound transfer order.
              items:
                $ref: '#/components/schemas/EntityRef'
            orderLines:
              $ref: '#/components/schemas/OutboundTransferOrderLineCollectionDTO'
            carrierSpecialServices:
              type: array
              description: Array of carrier special service records for the order.
              items:
                $ref: '#/components/schemas/CarrierSpecialServiceDTO'
            shipments:
              readOnly: true
              allOf:
                - $ref: '#/components/schemas/PaginatedEntityReference'
    OutboundTransferOrderCollectionDTO:
      type: object
      title: Outbound Transfer Orders
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/OutboundTransferOrderDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    OutboundTransferOrderStatusDTO:
      title: Outbound transfer order status
      type: object
      properties:
        orderStatus:
          type: string
          description: Overall status of the order as it progresses through the fulfillment process. New orders should be created with a status of either New or Hold.
          enum:
            - Draft
            - New
            - Hold
            - Wave Built
            - Back Ordered
            - Partially Released
            - Released
            - Picking
            - Pick Complete
            - Partially Staged
            - Staged
            - Partially Loaded
            - Loaded
            - Partially Shipped
            - Ship Complete
            - Canceled
    InboundTransferOrderStatusDTO:
      title: Inbound transfer order status
      type: object
      properties:
        orderStatus:
          type: string
          description: Overall status of the order as it progresses through the receiving process. New orders should be created with a status of either New or Hold.
          enum:
            - New
            - Hold
            - Receiving
            - Received
            - Canceled
            - Partial Receipt
    ReceiptDTO:
      title: Receipt
      description: Collection of receipts for stock that has been received for items on a purchase order or inbound shipment.
      type: object
      required:
        - number
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        number:
          type: string
          maxLength: 50
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: Unique identification number for the receipt.
        status:
          type: string
          nullable: true
          description: Status of the receipt.
          enum:
            - Received
            - Canceled
        receivedItem:
          $ref: '#/components/schemas/EntityRef'
        receivedPack:
          $ref: '#/components/schemas/EntityRef'
        receivedPackQuantity:
          type: integer
          description: Quantity of the item/pack that was received.
        destinationLocation:
          $ref: '#/components/schemas/EntityRef'
        container:
          $ref: '#/components/schemas/EntityRef'
        masterLpnNumber:
          type: string
          nullable: true
          maxLength: 30
          description: Container number of the parent container for the container in which the received stock is located. For example, if the received stock is in a container on a pallet, then this is the container number of the pallet.
        unitPrice:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Unit price of the received item.
        lotNumber:
          type: string
          nullable: true
          maxLength: 20
          description: Lot number for the stock that was received.
        serialNumber:
          type: string
          nullable: true
          maxLength: 30
          description: Serial number for the stock that was received.
        bornOnDate:
          type: string
          format: date-time
          nullable: true
          description: Manufacturing date for the stock that was received.
        expirationDate:
          type: string
          format: date-time
          nullable: true
          description: Expiration date for the stock that was received.
        inventoryCondition:
          type: string
          nullable: true
          maxLength: 255
          description: Additional field for describing the condition of the stock that was received.
        damaged:
          type: boolean
          description: Whether the stock that was received is damaged.
        receivedDamagedPackQuantity:
          type: integer
          description: Quantity of the item/pack that was received that was damaged.
        disposition:
          type: string
          nullable: true
          description: Reserved for future use.
          enum:
            - Crossdock
            - Destroy
            - Hold
            - Quarantine
            - Return to Shipper
            - Returns Processing
            - Stock
        catchWeight:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Reserved for future use.
        inventoryAttribute1:
          type: string
          nullable: true
          maxLength: 255
          description: Additional field for providing descriptive information for the stock that was received.
        inventoryAttribute2:
          type: string
          nullable: true
          maxLength: 255
          description: Additional field for providing descriptive information for the stock that was received.
        customAttribute1:
          type: string
          nullable: true
          maxLength: 50
          description: Custom attribute for the stock that was received.
        customAttribute2:
          type: string
          nullable: true
          maxLength: 50
          description: Custom attribute for the stock that was received.
        customAttribute3:
          type: string
          nullable: true
          maxLength: 50
          description: Custom attribute for the stock that was received.
        importReference1:
          type: string
          nullable: true
          maxLength: 50
          description: Additional reference number for the order line that is associated with the receipt line if the purchase order was imported into Deposco.
        importReference2:
          type: string
          nullable: true
          maxLength: 50
          description: Additional reference number for the order line that is associated with the receipt line if the purchase order was imported into Deposco.
        exportReference1:
          type: string
          nullable: true
          maxLength: 50
          description: Additional reference number for the order line that is associated with the receipt line if the purchase order was exported from Deposco to another system.
        exportReference2:
          type: string
          nullable: true
          maxLength: 50
          description: Additional reference number for the order line that is associated with the receipt line if the purchase order was exported from Deposco to another system.
        otherReferenceNumber:
          type: string
          nullable: true
          maxLength: 50
          description: Additional reference number for the associated purchase order for the receipt.
        orderLine:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        channels:
          type: array
          description: Array of channel cross-references for the receipt.
          items:
            $ref: '#/components/schemas/ChannelDTO'
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the receipt was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the receipt was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    ReceiptCollectionDTO:
      type: object
      title: Receipt Lines
      allOf:
        - type: object
          description: Array of receipt lines for stock that was received for the order line.
          readOnly: true
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ReceiptDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    InboundTransferOrderLineDTO:
      title: Inbound transfer order line
      x-implements: OrderLineDTO
      description: Order line for an inbound transfer order
      required:
        - customerLineNumber
      allOf:
        - $ref: '#/components/schemas/BaseOrderLineDTO'
        - type: object
          properties:
            orderLineStatus:
              type: string
              x-implements: OrderLineStatusDTO
              readOnly: true
              nullable: true
              description: Status of the order line. New order lines should be created with a status of New.
              enum:
                - New
                - Hold
                - In-Transit
                - Arrived
                - Partial Receipt
                - Received
                - Canceled
                - Closed
            shipToFacility:
              $ref: '#/components/schemas/NullableEntityRef'
            coLine:
              $ref: '#/components/schemas/EntityRef'
            inboundLPN:
              type: string
              description: LPN number for the LPN in which stock is sent/received.
              maxLength: 30
              nullable: true
            masterInboundLPN:
              type: string
              description: LPN number for the pallet on which the LPN for the order line is stacked.
              maxLength: 30
              nullable: true
            receivedPackQuantity:
              type: number
              description: Quantity of the item/pack that was received.
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
            receivedDamagedPackQuantity:
              type: number
              description: Quantity of the item/pack that was received in a damaged condition.
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
            receiptLines:
              $ref: '#/components/schemas/ReceiptCollectionDTO'
    InboundTransferOrderLineCollectionDTO:
      type: object
      x-implements: OrderLineCollectionDTO
      title: Inbound transfer order lines
      description: Array of order lines for the inbound transfer order. A maximum of 100 order lines can be created or updated for an order in a single request.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/InboundTransferOrderLineDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    InboundTransferOrderDTO:
      title: Inbound transfer order
      description: Order header for a inbound transfer order, which contains information for the entire order, such as customer information, dates, and address information.
      x-implements: OrderHeaderDTO
      allOf:
        - $ref: '#/components/schemas/BaseOrderHeaderDTO'
        - type: object
          properties:
            type:
              type: string
              nullable: true
              readOnly: true
              description: Type of order.
              enum:
                - Inbound Transfer Order
                - null
            orderStatus:
              type: string
              nullable: true
              description: Overall status of the order as it progresses through the receiving process. New orders should be created with a status of either New or Hold.
              enum:
                - New
                - Hold
                - Receiving
                - Received
                - Canceled
                - Partial Receipt
            shipToFacility:
              $ref: '#/components/schemas/NullableEntityRef'
            shipFromFacility:
              $ref: '#/components/schemas/NullableEntityRef'
            customerOrderHeaders:
              type: array
              readOnly: true
              description: Array of customer orders (from Bright Order) that are associated with the inbound transfer order.
              items:
                $ref: '#/components/schemas/EntityRef'
            orderLines:
              $ref: '#/components/schemas/InboundTransferOrderLineCollectionDTO'
    InboundTransferOrderCollectionDTO:
      type: object
      title: Inbound Transfer Orders
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/InboundTransferOrderDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    InboundTransferOrderLineStatusDTO_properties-orderLineStatus:
      type: string
      description: Status of the order line. New order lines should be created with a status of New.
      enum:
        - New
        - Hold
        - In-Transit
        - Arrived
        - Partial Receipt
        - Received
        - Canceled
        - Closed
    BaseShipmentDTO:
      title: Shipment
      type: object
      required:
        - number
        - businessUnit
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        number:
          type: string
          maxLength: 50
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          description: Unique identification number for the shipment.
        orderHeaders:
          type: object
          description: Array of orders that are associated with the shipment.
          allOf:
            - type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/EntityRef'
            - $ref: '#/components/schemas/CollectionResourceMeta'
        shipVia:
          type: string
          maxLength: 192
          description: Shipping service that is used to send the shipment.
        shipMethod:
          type: string
          maxLength: 50
          description: Shipping method that is used to send the shipment.
        shipVendor:
          type: string
          maxLength: 100
          description: Shipping carrier that is used to send the shipment.
        trackingNumber:
          type: string
          maxLength: 100
          description: Tracking number for the shipment.
        trackingUrl:
          type: string
          maxLength: 400
          description: Tracking URL and tracking number for the shipment.
        routingNumber:
          type: string
          maxLength: 30
          description: Transportation routing number for the trip to which the shipment is assigned.
        shipToContact:
          $ref: '#/components/schemas/AddressContactDTO'
        shipToAddress:
          $ref: '#/components/schemas/AddressDTO'
        shipFromContact:
          $ref: '#/components/schemas/AddressContactDTO'
        shipFromAddress:
          $ref: '#/components/schemas/AddressDTO'
        shipFromZone:
          $ref: '#/components/schemas/NullableEntityRef'
        consigneePartner:
          $ref: '#/components/schemas/NullableEntityRef'
        billToContact:
          $ref: '#/components/schemas/AddressContactDTO'
        billToAccountNumber:
          type: string
          maxLength: 30
          description: Account number of the person or company to whom the order on the shipment is billed.
        billToAddress:
          $ref: '#/components/schemas/AddressDTO'
        billToPartner:
          $ref: '#/components/schemas/NullableEntityRef'
        freightBillToPartner:
          $ref: '#/components/schemas/NullableEntityRef'
        freightBillToContact:
          $ref: '#/components/schemas/AddressContactDTO'
        freightBillToAccount:
          type: string
          maxLength: 50
          description: Account number that is used to pay shipping costs for the order on the shipment.
        freightBillToAddress:
          $ref: '#/components/schemas/AddressDTO'
        deliverToContact:
          $ref: '#/components/schemas/AddressContactDTO'
        deliverToAddress:
          $ref: '#/components/schemas/AddressDTO'
        shipmentDates:
          type: object
          properties:
            plannedShipDate:
              type: string
              format: date-time
              description: Date that the shipment is expected to ship.
            plannedArrivalDate:
              type: string
              format: date-time
              description: Date that the shipment is expected to arrive at the destination facility.
            actualShipDate:
              type: string
              format: date-time
              description: Date that the shipment was created.
            actualArrivalDate:
              type: string
              format: date-time
              description: Date that the shipment arrived at the destination facility.
            requestedDeliveryDate:
              type: string
              format: date-time
              description: Date by which the customer requested that the shipment be delivered.
        totalWeight:
          type: object
          description: Total weight of the shipment.
          required:
            - value
          properties:
            value:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Numeric value for the weight.
            units:
              $ref: '#/components/schemas/WeightUOM'
        chargeableWeight:
          type: object
          description: Shipment weight that is used by the shipping carrier to determine the cost of the shipment.
          required:
            - value
          properties:
            value:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Numeric value for the weight.
            units:
              $ref: '#/components/schemas/WeightUOM'
        totalCube:
          $ref: '#/components/schemas/Measurement'
        lpnNumber:
          type: string
          maxLength: 30
          description: Container number of the container for the shipment. For freight shipping scenarios, this is the reference number for the trailer.
        containerType:
          type: string
          maxLength: 50
          description: General shipment attribute.
        totalPieces:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Total number of units of stock in the shipment.
        totalPackages:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: Total number of LPNs in the shipment.
        fullCasePackages:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: General shipment attribute.
        splitCasePackages:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: General shipment attribute.
        fullCasePickComplete:
          type: boolean
          description: General shipment attribute.
        splitCasePickComplete:
          type: boolean
          description: General shipment attribute.
        driverPalletCountFlag:
          type: boolean
          description: General shipment attribute.
        shippingCosts:
          type: object
          properties:
            shippingCost:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Cost of the shipment.
            extendedShippingCost:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Cost of the shipment.
            taxCost:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Tax costs for the shipment.
            insuranceRequired:
              type: boolean
              description: Whether insurance is required for the package(s) in which the order ships. Must be set to `true` if insurance is required above the minimum default value for the shipping carrier. Insurance cost is calculated based on the value of items in the shipping container.
            insuranceCost:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: General shipment attribute.
            insuranceAmount:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: General shipment attribute.
            handlingCost:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Handling cost for the shipment, which includes the expense of preparing the packages for the shipment and the materials used for packaging.
            laborCost:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: General shipment attribute.
            materialsCost:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: General shipment attribute.
            rateZone:
              type: string
              maxLength: 20
              description: Zone defined by the shipping carrier to which the shipment is sent. This zone is used for calculating the rate that is used for shipping costs for the shipment.
            publishedRate:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Standard rate that is published by the shipping carrier that applies for the shipment.
            currencyCode:
              type: string
              description: SO 4217 code for the currency used on the shipment, such as `USD`, `GBP`, or `EUR`.
              enum:
                - GPB
                - CAN
                - MXN
                - EUR
                - USD
            freightTermsType:
              type: string
              nullable: true
              description: |-
                Identifies how to determine the account that is responsible for payment of shipping costs for the shipment. Set to one of the following values:

                - `Prepaid` - The shipping carrier account that created the shipment will be responsible for payment of shipping costs.

                - `Collect` - The recipient is billed for the shipment. Either enter the shipping carrier account number in the `freightBillToAccount` field, or enter the account number in the trading partner record for the trading partner associated with the order.

                - `Third Party` - A trading partner is billed for the shipment. Enter the shipping carrier account number in the trading partner record for the trading partner associated with the order.

                - `Consignee` - Contractual billing is used to bill the customer/recipient for UPS Ground shipping services.
              enum:
                - Prepaid
                - Collect
                - Third Party
                - Consignee
                - null
            feeTermsType:
              type: string
              nullable: true
              description: General shipment attribute.
              enum:
                - POC
                - Collect
                - Prepaid
                - Incoterms
                - null
            customsDeclaredValue:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Monetary worth placed on goods by the importer for customs purposes. Thus value is typically the price the buyer paid for the goods and is used to calculate duties and taxes.
            incotermsType:
              type: string
              description: International Commercial Terms type from the International Chamber of Commerce (ICC). Used for international orders.
            dutyPaidByType:
              type: string
              nullable: true
              description: Person or company who is responsible for paying international shipping duties.
              enum:
                - Seller
                - Receiver
                - Third party
                - null
            dutyPaidByContactName:
              nullable: true
              type: string
              maxLength: 50
              description: Name of the contact person who is responsible for paying international shipping duties.
            dutyPaidByAccount:
              nullable: true
              type: string
              maxLength: 50
              description: Account number of the person or company who is responsible for paying international shipping duties.
            dutyPaidByPostalCode:
              nullable: true
              type: string
              maxLength: 50
              description: Postal code of the address for the person or company who is responsible for paying international shipping duties.
            dutyPaidByCountry:
              nullable: true
              type: string
              maxLength: 50
              description: Country of the address for the person or company who is responsible for paying international shipping duties.
        bolNumber:
          type: string
          maxLength: 17
          description: Bill of lading (BOL) number for the shipment. A BOL is a legal document that details the type, quantity, and ownership of the goods, as well as their destination.
        handlingInstructions:
          type: string
          maxLength: 250
          description: Standard Carrier Alpha Code (SCAC) for the shipment. A SCAC is a unique 2 to 4-letter code used to identify carriers and transportation companies.
        authorizationCode:
          type: string
          maxLength: 200
          description: Number for the seal on the inbound trailer for freight shipping scenarios.
        trailerLoadedBy:
          type: string
          maxLength: 50
          description: General shipment attribute.
        shipperFreightCountFlag:
          type: boolean
          description: General shipment attribute.
        driverPieceCountFlag:
          type: boolean
          description: General shipment attribute.
        returns:
          type: object
          properties:
            returnShipVia:
              type: string
              nullable: true
              description: Shipping service that should be used for any returns for the order that is associated with the shipment.
            returnShipVendor:
              type: string
              nullable: true
              description: Shipping carrier that should be used for any returns for the order that is associated with the shipment.
            returnShipMethod:
              type: string
              maxLength: 50
              nullable: true
              description: Ship method that should be used for any returns for the order that is associated with the shipment.
            returnShipOption:
              type: string
              maxLength: 100
              nullable: true
              description: Used by the GPPrintReturnLabel process to specify how to deliver the return label to the customer, such as print or electronic.
        residential:
          type: boolean
          description: Used when UPS is the shipping carrier to identify whether the address is a residential address. May be set by the address validation process.
        homeDelivery:
          type: boolean
          description: Used when FedEx is the shipping carrier to specify whether FedEx Home Delivery is required.
        saturdayDelivery:
          type: boolean
          description: Used when UPS is the shipping carrier to specify whether the customer is requesting Saturday delivery for the order.
        deliveryConfirmation:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: Provide a null value if no signature is required. Set to `2` if a signature is required. Use of other values depends on the shipping carrier.
        hubId:
          type: string
          maxLength: 10
          description: Used when a FedEx SmartPost shipping service is assigned to the order to identify the associated FedEx SmartPost hub.
        codAmount:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Amount to collect on delivery for COD shipments.
        shipMode:
          type: string
          description: Mode of transportation for the shipment.
          enum:
            - Air
            - Ocean
            - Ground
        dropShip:
          type: boolean
          description: Whether the shipment is associated with a dropship order, where the order is fulfilled by the company when the company is serving as a supplier for some external company. Dropship fulfillment requires custom configuration in Deposco.
        complete:
          type: boolean
          description: General shipment attribute.
        correct:
          type: boolean
          description: General shipment attribute.
        onTime:
          type: boolean
          description: General shipment attribute.
        custCheckFlag:
          type: boolean
          description: General shipment attribute.
        masterFlag:
          type: boolean
          description: General shipment attribute.
        shipFromFobFlag:
          type: boolean
          description: General shipment attribute.
        shipToFobFlag:
          type: boolean
          description: General shipment attribute.
        totalDistance:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: General shipment attribute.
        totalMiles:
          type: number
          format: double
          description: General shipment attribute.
        notificationCode1:
          type: string
          maxLength: 200
          description: Reserved for future use.
        notificationCode2:
          type: string
          maxLength: 10
          description: Reserved for future use.
        notificationCode3:
          type: string
          maxLength: 10
          description: Reserved for future use.
        verbalConfirmationPhoneNumber:
          type: string
          maxLength: 45
          description: Reserved for future use.
        integrationSource:
          $ref: '#/components/schemas/NullableEntityRef'
        integrationPoint:
          $ref: '#/components/schemas/EntityRef'
        importReference:
          type: string
          maxLength: 50
          description: Reference number for the order that is associated with the shipment when the order was imported into Deposco.
        exportReference:
          type: string
          maxLength: 50
          description: Reference number for the order that is associated with the shipment when the order was exported from Deposco to another system.
        otherReferenceNumber:
          type: string
          maxLength: 50
          description: Additional reference number for the shipment.
        channels:
          type: array
          description: Array of channel cross-references for the shipment.
          items:
            $ref: '#/components/schemas/ChannelDTO'
        customFields:
          type: array
          description: Array of custom fields for the shipment.
          items:
            $ref: '#/components/schemas/CustomFieldDTO'
        createdDate:
          readOnly: true
          type: string
          format: date-time
          description: Date and time that the shipment was created.
        updatedDate:
          readOnly: true
          type: string
          format: date-time
          description: Date and time that the shipment was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    BaseShipmentLineDTO:
      title: Shipment Line
      type: object
      required:
        - number
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        shipment:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        number:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          maxLength: 50
          description: Unique identification number for the shipment line.
        orderLine:
          $ref: '#/components/schemas/NullableEntityRef'
        orderLineDetails:
          type: object
          readOnly: true
          properties:
            customerLineNumber:
              type: string
              maxLength: 100
              description: Identifier of the order line in the external system in which the order was created.
              readOnly: true
            pack:
              $ref: '#/components/schemas/EntityRef'
            packDetails:
              type: object
              properties:
                type:
                  type: string
                  pattern: .*\S.*
                  x-pattern-message: must contain at least 1 non-whitespace character
                  maxLength: 50
                  description: 'Type of pack. Use one of the following values: `Each`, `Case`, `Bundle`, `Loose`, `Mill Unit`, `Outer`, `Unit`'
        item:
          $ref: '#/components/schemas/NullableEntityRef'
        substitutedItem:
          $ref: '#/components/schemas/NullableEntityRef'
        pack:
          $ref: '#/components/schemas/NullableEntityRef'
        packDetails:
          type: object
          readOnly: true
          properties:
            type:
              type: string
              pattern: .*\S.*
              x-pattern-message: must contain at least 1 non-whitespace character
              maxLength: 50
              description: 'Type of pack. Use one of the following values: `Each`, `Case`, `Bundle`, `Loose`, `Mill Unit`, `Outer`, `Unit`'
        description:
          type: string
          maxLength: 500
          description: Text that provides additional information about the shipment line.
        orderPackQuantity:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Quantity of the item/pack that was ordered.
        shippedPackQuantity:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Quantity of the item/pack that was shipped.
        damagedPackQuantity:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Quantity of the item/pack that was damaged.
        shippedDamagedPackQuantity:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: General shipment attribute.
        returnedPackQuantity:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Quantity of the item/pack that was returned.
        canceledPackQuantity:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Quantity of the item/pack on the order line that was canceled.
        shortagePackQuantity:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Quantity of the item/pack that is _not_ being shipped for the order line.
        pickedPackQuantity:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Quantity of the item/pack that has been picked to fulfill the order line.
        packageCount:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: Count of the number of packages for the shipment line.
        pieceCount:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: General shipment attribute.
        totalWeight:
          type: object
          description: Total weight of the shipment line.
          required:
            - value
          properties:
            value:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Numeric value for the weight.
            units:
              $ref: '#/components/schemas/WeightUOM'
        chargeableWeight:
          type: object
          description: Shipment line weight that is used by the shipping carrier to determine the cost of the shipment.
          required:
            - value
          properties:
            value:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Numeric value for the weight.
            units:
              $ref: '#/components/schemas/WeightUOM'
        lotNumber:
          type: string
          maxLength: 200
          description: Lot number of the stock for the item on the shipment line.
        lineSerialNumbers:
          type: array
          description: Array of serial numbers for the stock on the shipment line.
          items:
            type: object
            properties:
              serialNumber:
                type: string
                maxLength: 200
        bornOnDate:
          type: string
          format: date-time
          description: Born On date of the stock for the item on the shipment line.
        expirationDate:
          type: string
          format: date-time
          description: Expiration date of the stock for the item on the shipment line.
        inventoryCondition:
          type: string
          maxLength: 255
          description: Condition of the inventory on the shipment line.
        inventoryAttribute1:
          type: string
          maxLength: 255
          description: Additional field for inventory attributes for the stock on the shipment line.
        inventoryAttribute2:
          type: string
          maxLength: 255
          description: Additional field for inventory attributes for the stock on the shipment line.
        unitCost:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Unit cost for the item on the shipment line.
        freightCost:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Cost to ship the item on the shipment line.
        taxCost:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Tax cost for the shipment line.
        hazmatFlag:
          type: boolean
          description: Whether the item on the shipment line includes hazardous materials.
        externalLineNumber:
          type: string
          maxLength: 50
          description: Reference number for the associated order line in an external system where the order was created.
        importReference:
          type: string
          maxLength: 50
          description: Reference number for the order line that is associated with the shipment line when the order was imported from an external system.
        exportReference:
          type: string
          maxLength: 50
          description: Reference number for the associated order line that is associated with the shipment line when the order was exported from Deposco to an external system.
        invoiced:
          type: boolean
          description: General shipment attribute.
        createdDate:
          readOnly: true
          type: string
          format: date-time
          description: Date and time that the shipment line was created.
        updatedDate:
          readOnly: true
          type: string
          format: date-time
          description: Date and time that the shipment line was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    OutboundShipmentLineDTO:
      title: Outbound shipment line
      x-implements: ShipmentLineDTO
      description: Shipment line for an outbound shipment, which identifies the quantity and pack for an item in the shipment.
      allOf:
        - $ref: '#/components/schemas/BaseShipmentLineDTO'
        - type: object
          properties:
            description:
              type: string
              maxLength: 500
    OutboundShipmentLineCollectionDTO:
      type: object
      title: Outbound shipment lines
      description: Array of shipment lines for the outbound shipment.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/OutboundShipmentLineDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    ShippedContainerDTO:
      title: Shipped Container
      type: object
      x-implements: EntityDTO
      required:
        - number
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        number:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          maxLength: 100
          description: Unique identification number for the shipped container.
        lpnNumber:
          type: string
          maxLength: 100
          description: LPN label number or barcode for the shipped container.
        type:
          type: string
          maxLength: 50
          description: Type of container.
        secondaryType:
          type: string
          maxLength: 50
          description: When a shipped container is on a pallet, the `type` of the container is `Shipping`, and the `secondaryType` is `Pallet`.
        cartonType:
          $ref: '#/components/schemas/EntityRef'
        status:
          type: string
          description: Status of the shipped container.
          enum:
            - Shipped
            - Rolled Back
        description:
          type: string
          maxLength: 200
          description: Text that provides additional information about the shipped container.
        dimensions:
          $ref: '#/components/schemas/Dimension'
        weight:
          type: object
          description: Weight of the shipped container.
          required:
            - value
          properties:
            value:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Numeric value for the weight.
            units:
              $ref: '#/components/schemas/WeightUOM'
        parent:
          $ref: '#/components/schemas/EntityRef'
        masterLPNNumber:
          type: string
          maxLength: 100
          description: LPN number of an outer container in which other shipped containers are packed.
        location:
          $ref: '#/components/schemas/EntityRef'
        shipment:
          $ref: '#/components/schemas/EntityRef'
        trip:
          $ref: '#/components/schemas/EntityRef'
        trackingNumber:
          type: string
          maxLength: 100
          description: Tracking number for the shipment that is associated with the shipped container.
        trackingNumber2:
          type: string
          maxLength: 100
          description: Secondary tracking number that is provided by some services that use multiple tracking numbers.
        returnTrackingNumber:
          type: string
          maxLength: 100
          description: Tracking number for the return shipping label that is included in the container.
        ssccLPNNumber:
          type: string
          maxLength: 30
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: SSCC number for the shipped container.
        packageType:
          type: string
          maxLength: 100
          description: Type of package for the container, which enables shipping carriers to determine how the container is packed. Typically populated on the shipping service request.
        uspsConstructCode:
          type: string
          maxLength: 50
          description: Construct Code from the U.S. Postal Service. The Construct Code is a barcode that consolidates the ZIP code, mailer ID, and serial number.
        shippingCost:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Cost to ship the container.
        insuredValue:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Value of the contents of the shipped container, which is used to calculate the insurance for the container that is sent to the shipping providers.
        sequence:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: Used by the Print to Panda process to determine the x of y values for a container.
        sequenceTotal:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: Used by the Print to Panda process to determine the x of y values for a container.
        referenceNumber1:
          type: string
          maxLength: 100
          description: Used by the Assign Trip to Container process to store the trip number.
        shippedContainerLines:
          type: array
          items:
            type: object
            properties:
              self:
                readOnly: true
                allOf:
                  - $ref: '#/components/schemas/EntityRef'
              item:
                $ref: '#/components/schemas/NullableEntityRef'
              pack:
                $ref: '#/components/schemas/NullableEntityRef'
              externalLineNumber:
                type: string
                maxLength: 50
                description: Reference number for the associated order line in an external system where the order was created.
              shippedPackQuantity:
                type: number
                format: double
                minimum: -1.7976931348623157e+308
                maximum: 1.7976931348623157e+308
                description: Quantity of the item/pack in the shipped container.
              shippedDamagedPackQuantity:
                type: number
                format: double
                minimum: -1.7976931348623157e+308
                maximum: 1.7976931348623157e+308
                description: Quantity of the item/pack in the shipped container that was damaged.
              canceledPackQuantity:
                type: number
                format: double
                minimum: -1.7976931348623157e+308
                maximum: 1.7976931348623157e+308
                description: Quantity of the item/pack on the order line that was canceled.
              lotNumber:
                type: string
                maxLength: 200
                description: Lot number for the items in the shipped container.
              lineSerialNumbers:
                type: array
                description: Array of serial numbers for the items in the shipped container.
                items:
                  type: object
                  properties:
                    serialNumber:
                      type: string
                      maxLength: 200
              bornOnDate:
                type: string
                format: date-time
                description: Born on date for the items in the shipped container.
              expirationDate:
                type: string
                format: date-time
                description: Expiration date for the items in the shipped container.
              inventoryCondition:
                type: string
                maxLength: 255
                description: Condition of the inventory in the shipped container.
              inventoryAttribute1:
                type: string
                maxLength: 255
                description: Additional field for inventory attributes for the stock in the shipped container.
              inventoryAttribute2:
                type: string
                maxLength: 255
                description: Additional field for inventory attributes for the stock in the shipped container.
        createdDate:
          readOnly: true
          type: string
          format: date-time
          description: Date and time that the shipped container was created.
        updatedDate:
          readOnly: true
          type: string
          format: date-time
          description: Date and time that the shipped container was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    ShippedContainerCollectionDTO:
      type: object
      title: Shipped container collection
      description: Array of containers included in the outbound shipment.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ShippedContainerDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    OutboundShipmentDTO:
      title: Outbound shipment
      x-implements: ShipmentDTO
      description: Shipment header for an outbound shipment, which contains information for the entire shipment, such as address information and dates.
      allOf:
        - $ref: '#/components/schemas/BaseShipmentDTO'
        - type: object
          properties:
            type:
              type: string
              nullable: true
              readOnly: true
              description: Type of shipment.
              enum:
                - Outbound Shipment
                - null
            shipFromFacility:
              $ref: '#/components/schemas/NullableEntityRef'
            status:
              type: string
              description: Status of the shipment.
              enum:
                - New
                - Shipping
                - Shipped
                - Rolled Back
            shipmentLines:
              $ref: '#/components/schemas/OutboundShipmentLineCollectionDTO'
            shippedContainers:
              $ref: '#/components/schemas/ShippedContainerCollectionDTO'
            trip:
              $ref: '#/components/schemas/NullableEntityRef'
    OutboundShipmentCollectionDTO:
      type: object
      title: Outbound shipments
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/OutboundShipmentDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    TripDTO:
      title: Trip
      description: Collection of shipments and their assigned containers that will be loaded onto a single vehicle such as a van or truck either for pickup by a specific shipping carrier or for transport to another facility.
      type: object
      required:
        - number
        - shippingCarrier
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        number:
          type: string
          pattern: .*\S.*
          x-pattern-message: must contain at least 1 non-whitespace character
          maxLength: 200
          description: Unique identification number for the trip.
        status:
          type: string
          nullable: true
          description: Status of the trip. A trip is open if it has been created but containers and shipments can still be added to the trip. An open trip can also be moved from one shipping door to another. A trip is set to a status of `Closed` when the trip can no longer be changed and the truck for the ship has left the facility. Trips are typically closed by warehouse management process.
          enum:
            - Open
            - Closed
        deliveryType:
          type: string
          enum:
            - Internal
            - Outbound
          nullable: true
          description: Whether the trip is for an `Internal` delivery to another facility (in other words, a transfer) or an `Outbound` delivery (typically through a shipping carrier).
        shipFromFacility:
          $ref: '#/components/schemas/EntityRef'
        shippingCarrier:
          type: string
          maxLength: 200
          description: Shipping carrier through which the trip is being shipped.
        accountNumber:
          type: string
          maxLength: 30
          nullable: true
          description: Pickup account number for the shipping carrier that is assigned to the trip.
        licenseNumber:
          type: string
          maxLength: 50
          nullable: true
          description: License number for the shipping carrier that is assigned to the trip.
        freightType:
          type: string
          enum:
            - Parcel
            - Freight
          nullable: true
          default: Parcel
          description: Whether the trip is for `Parcel` or `Freight` shipments.
        dockDoor:
          $ref: '#/components/schemas/EntityRef'
        driverName:
          type: string
          maxLength: 50
          nullable: true
          description: Name of the driver of the truck on which the trip is loaded.
        departureTime:
          type: string
          format: date-time
          nullable: true
          description: Date and time at which the truck for the trip departs the shipping door for the facility.
        currentScheduledDeliveryDate:
          type: string
          format: date-time
          nullable: true
          description: Date on which the trip is scheduled to be delivered.
        estimatedDeliveryDate:
          type: string
          format: date-time
          nullable: true
          description: Date on which the trip is estimated to be delivered.
        actualArrivalTime:
          type: string
          format: date-time
          nullable: true
          description: Date on which the trip is delivered.
        carrierAlphaCode:
          type: string
          maxLength: 50
          nullable: true
          description: Standard Carrier Alpha Code (SCAC) for the trip. A SCAC is a unique 2 to 4-letter code used to identify carriers and transportation companies.
        freightClass:
          type: string
          maxLength: 50
          nullable: true
          description: National Motor Freight Classification (NMFC) number for the trip.
        transportationMethodCode:
          type: string
          enum:
            - ZZ
            - LT
          nullable: true
          description: Transportation mode that is assigned to the BOL for the trip. Use a value of `ZZ` for `Mutually defined` or `LT` for `Less Than Trailer Load (LTL)`.
        bolNumber:
          type: string
          maxLength: 50
          nullable: true
          description: Bill of lading (BOL) number for the trip. A BOL is a legal document that details the type, quantity, and ownership of the goods, as well as their destination.
        equipmentDescriptionCode:
          type: string
          enum:
            - TV
            - TN
            - TL
            - TA
            - RT
            - RR
            - HV
            - HC
            - FT
            - CV
            - CQ
            - CN
            - BX
            - AF
            - AC
            - 4B
            - 2B
          nullable: true
          description: Code that identifies the type of equipment that is used to transport the trip.
        carrierEquipmentNumber:
          type: string
          maxLength: 50
          nullable: true
          description: Identifying number for the equipment that the carrier uses for the trip. This is typically the trailer number.
        sealNumber:
          type: string
          maxLength: 50
          nullable: true
          description: Unique identification number or authorization code for the trip to ensure the security and integrity of the cargo during transportation.
        route:
          $ref: '#/components/schemas/EntityRef'
        refNumber:
          type: string
          maxLength: 20
          nullable: true
          description: Additional reference identification number for the trip. For example, this may contain a PO number for the order that is associated with the trip.
        shipments:
          $ref: '#/components/schemas/OutboundShipmentCollectionDTO'
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the trip was created.
        updatedDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the trip was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    TripCollectionDTO:
      type: object
      title: Trips
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/TripDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    AsyncBulkRequestDTO:
      title: AsyncBulkRequestDTO
      type: object
      required:
        - entityType
        - entities
      allOf:
        - type: object
          description: Asynchronous request to perform a bulk import to create or update multiple entities.
          properties:
            entityType:
              type: string
              description: Type of entity to create or update.
              enum:
                - Trading Partner
                - Item
                - Kit
                - Location
                - Zone
                - Container
                - Sales Order
                - Purchase Order
                - Customer Return
                - Vendor Return
                - Outbound Transfer Order
                - Inbound Transfer Order
            pathParameters:
              type: string
              description: Comma-separated list of path parameters. For example, `orderId=123,orderLineId=1`. Refer to the `POST` endpoint for the entity that is specified in `entityType` for a list of supported parameters for the entity.
            requestParameters:
              type: string
              description: Comma-separated list of request parameters. For example, `businessUnit=ABC,orderStatus=New`. Refer to the `POST` endpoint for the entity that is specified in `entityType` for a list of supported parameters for the entity.
            entities:
              type: array
              description: Array of JSON objects for the entities to create or update. All entities must be the type that is specified in `entityType`. Refer to the `POST` endpoint for the entity type for details on the required format for the JSON objects.
              items:
                type: object
                description: Entity to create or update.
                additionalProperties: true
    AsyncDetailDTO:
      title: AsyncDetailDTO
      allOf:
        - type: object
          properties:
            status:
              type: string
              description: Status of the asynchronous request.
              enum:
                - Success
                - Processing
                - Failed
            errors:
              type: array
              nullable: true
              description: Array of errors that occurred when the asynchronous request was submitted.
              items:
                $ref: '#/components/schemas/ErrorMessage'
        - $ref: '#/components/schemas/NullableEntityRef'
    AsyncResponseDTO:
      title: AsyncResponseDTO
      type: object
      properties:
        status:
          type: string
          description: Status of the asynchronous request.
          enum:
            - Success
            - Processing
            - Failed
            - Partially Failed
            - Error
        totalEntities:
          type: integer
          nullable: true
          format: int64
          description: Total number of entities that were processed for the request.
          minimum: -9223372036854776000
          maximum: 9223372036854776000
        successes:
          type: integer
          nullable: true
          format: int64
          description: Total number of entities that were successfully processed for the request.
          minimum: -9223372036854776000
          maximum: 9223372036854776000
        failures:
          type: integer
          nullable: true
          format: int64
          description: Total number of entities with a processing failure for the request.
          minimum: -9223372036854776000
          maximum: 9223372036854776000
        errorMessage:
          type: string
          nullable: true
          description: Text that describes the error that occurred for the request.
        results:
          type: array
          readOnly: true
          description: Array of status updates for the asynchronous request.
          items:
            $ref: '#/components/schemas/AsyncDetailDTO'
    InventoryUpdateDTO:
      title: Inventory Updates
      type: object
      description: Request to update inventory attributes for an item at a specific location in a facility.
      required:
        - existingInventory
        - modifiedInventory
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        existingInventory:
          type: object
          description: Set of attributes that identify an existing inventory record for an item.
          properties:
            item:
              $ref: '#/components/schemas/EntityRef'
            pack:
              $ref: '#/components/schemas/EntityRef'
            serialNumber:
              type: string
              nullable: true
              maxLength: 50
              description: Serial number of the existing inventory record for the item.
            lotNumber:
              type: string
              nullable: true
              maxLength: 50
              description: Lot number of the existing inventory record for the item.
            bornOnDate:
              type: string
              nullable: true
              format: date
              description: Born on date for the inventory.
            expirationDate:
              type: string
              nullable: true
              format: date
              description: Expiration date of the existing inventory record for the item.
            inventoryCondition:
              type: string
              nullable: true
              maxLength: 255
              description: Condition of the existing inventory record for the item.
            inventoryAttribute1:
              type: string
              nullable: true
              maxLength: 255
              description: Additional inventory attribute for the existing inventory record for the item.
            inventoryAttribute2:
              type: string
              nullable: true
              maxLength: 255
              description: Additional inventory attribute for the existing inventory record for the item.
        modifiedInventory:
          type: object
          description: Set of updated attributes for the inventory record for the item.
          required:
            - quantity
          properties:
            item:
              $ref: '#/components/schemas/EntityRef'
            pack:
              $ref: '#/components/schemas/EntityRef'
            quantity:
              type: integer
              format: int32
              minimum: 1
              maximum: 2147483647
              description: Quantity of inventory for the item.
            status:
              type: string
              description: Status of the inventory.
              enum:
                - On Hold
                - Damaged
                - Inspection
                - Quarantine
              nullable: true
            unitPrice:
              type: number
              format: double
              minimum: -1.7976931348623157e+308
              maximum: 1.7976931348623157e+308
              description: Unit price for the inventory.
            serialNumber:
              type: string
              nullable: true
              maxLength: 50
              description: Serial number that is assigned to the inventory.
            lotNumber:
              type: string
              nullable: true
              maxLength: 50
              description: Lot number that is assigned to the inventory.
            bornOnDate:
              type: string
              nullable: true
              format: date
              description: Born on date for the inventory.
            expirationDate:
              type: string
              nullable: true
              format: date
              description: Expiration date for the inventory.
            inventoryCondition:
              type: string
              nullable: true
              maxLength: 255
              description: Condition of the inventory.
            inventoryAttribute1:
              type: string
              nullable: true
              maxLength: 255
              description: Additional field with descriptive information about the inventory.
            inventoryAttribute2:
              type: string
              nullable: true
              maxLength: 255
              description: Additional field with descriptive information about the inventory.
        reasonCode:
          type: string
          description: Code that identifies the reason for the inventory update.
          nullable: true
          maxLength: 20
        activityName:
          type: string
          description: Name of the activity that resulted in the inventory update.
          nullable: true
          maxLength: 50
        adjustmentUser:
          type: string
          description: Identification number for the activity that resulted in the inventory update.
          example: john.doe
          maxLength: 50
        ledgerCustomAttribute1:
          type: string
          description: Custom attribute that is stored in the Inventory Ledger record for the inventory update.
          example: Red
          maxLength: 50
        ledgerCustomAttribute2:
          type: string
          description: Custom attribute that is stored in the Inventory Ledger record for the inventory update.
          example: Blue
          maxLength: 50
        ledgerCustomAttribute3:
          type: string
          description: Custom attribute that is stored in the Inventory Ledger record for the inventory update.
          example: Green
          maxLength: 50
        transactionNumber:
          type: string
          description: Identification number for the activity that resulted in the inventory update.
          nullable: true
          maxLength: 50
    InventoryAdjustmentDTO:
      title: Inventory adjustment
      type: object
      readOnly: true
      description: Record that represents an inventory adjustment for an item at a specific facility and time.
      required:
        - businessUnit
        - facility
        - actionType
        - item
        - pack
        - quantity
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        facility:
          $ref: '#/components/schemas/EntityRef'
        item:
          $ref: '#/components/schemas/EntityRef'
        pack:
          $ref: '#/components/schemas/EntityRef'
        quantity:
          type: integer
          description: Quantity of inventory that changed.
        actionType:
          type: string
          enum:
            - Adjustment
            - Status Change
          description: Type of action that resulted in the inventory adjustment.
        inventoryStatus:
          type: string
          nullable: true
          maxLength: 30
          description: Current status of the inventory.
        reasonCode:
          type: string
          nullable: true
          maxLength: 20
          description: Code that identifies the reason why the inventory changed.
        serialNumber:
          type: string
          nullable: true
          maxLength: 50
          description: Serial number that is assigned to the inventory.
        lotNumber:
          type: string
          nullable: true
          maxLength: 50
          description: Lot number that is assigned to the inventory.
        bornOnDate:
          type: string
          nullable: true
          format: date-time
          description: Born on date for the inventory.
        expirationDate:
          type: string
          nullable: true
          format: date-time
          description: Expiration date for the inventory.
        inventoryCondition:
          type: string
          nullable: true
          maxLength: 255
          description: Condition of the inventory.
        inventoryAttribute1:
          type: string
          nullable: true
          maxLength: 255
          description: Additional field with descriptive information about the inventory.
        inventoryAttribute2:
          type: string
          nullable: true
          maxLength: 255
          description: Additional field with descriptive information about the inventory.
        customAttribute1:
          type: string
          nullable: true
          maxLength: 50
          description: Custom attribute that is assigned to the inventory.
        customAttribute2:
          type: string
          nullable: true
          maxLength: 50
          description: Custom attribute that is assigned to the inventory.
        createdDate:
          type: string
          format: date-time
          readOnly: true
          description: Date and time that the inventory adjustment was created.
    InventoryAdjustmentCollectionDTO:
      type: object
      title: Inventory adjustments
      description: Array of inventory adjustments
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/InventoryAdjustmentDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
    BillableTransactionDTO:
      title: Billable transaction
      type: object
      description: Billable transaction for an activity that was performed for and is billed to a tenant company of a 3PL provider.
      required:
        - businessUnit
        - billingConfig
      properties:
        self:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        businessUnit:
          $ref: '#/components/schemas/EntityRef'
        status:
          type: string
          description: Status of the billable transaction. New transactions should be created with a status of `Pending Approval`.
          enum:
            - Approved
            - Rejected
            - Pending Approval
        description:
          type: string
          maxLength: 255
          description: Text that provides additional identifying information for the billable transaction.
        billingProfile:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        billingConfig:
          $ref: '#/components/schemas/EntityRef'
        transactionType:
          type: string
          maxLength: 100
          description: Type of billing config record that generated the billable transaction.
        transactionSource:
          type: string
          maxLength: 50
          readOnly: true
          description: Source system that created the billable transaction. Automatically set to the name of the API application that created the billable transaction, if applicable.
        transactionNumber:
          type: string
          maxLength: 50
          description: Reference number for the billable transaction in an external system.
        facility:
          $ref: '#/components/schemas/NullableEntityRef'
        location:
          $ref: '#/components/schemas/NullableEntityRef'
        containerNumber:
          type: string
          maxLength: 50
          description: Container number of the container that is associated with the billable transaction.
        orderHeader:
          $ref: '#/components/schemas/NullableEntityRef'
        item:
          $ref: '#/components/schemas/NullableEntityRef'
        itemAttributes:
          type: object
          description: Additional attributes for the item.
          properties:
            lotNumber:
              type: string
              maxLength: 50
              description: Lot number for the item that is associated with the billable transaction.
            serialNumber:
              type: string
              maxLength: 50
              description: Serial number for the item that is associated with the billable transaction.
            bornOnDate:
              type: string
              format: date
              description: Born on date for the item that is associated with the billable transaction.
            expirationDate:
              type: string
              format: date
              description: Expiration date for the item that is associated with the billable transaction.
        quantity:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Quantity for the activity that was performed for the billable transaction.
        totalPrice:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Total price for the billable transaction. Calculated based on the `quantity` for the activity and the `price` for the associated billing config record.
        totalCost:
          type: number
          format: double
          minimum: -1.7976931348623157e+308
          maximum: 1.7976931348623157e+308
          description: Total cost for the billable transaction. This is an informational field that is typically used only for reporting purposes or for display purposes on an invoice.
        currencyCode:
          type: string
          nullable: true
          maxLength: 3
          description: ISO 4217 code for the currency that is used for the billable transaction, such as `USD`, `GBP`, or `EUR`.
        effectiveDate:
          type: string
          format: date
          description: Date on which the billable transaction is effective and can be included on an invoice.
        associatedUser:
          $ref: '#/components/schemas/NullableEntityRef'
        customAttribute1:
          type: string
          maxLength: 100
          description: Custom attribute for the billable transaction.
        createdDate:
          readOnly: true
          type: string
          format: date-time
          description: Date and time that the billable transaction was created.
        updatedDate:
          readOnly: true
          type: string
          format: date-time
          description: Date and time that the billable transaction was last updated.
        createdBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
        updatedBy:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EntityRef'
    BillableTransactionCollectionDTO:
      type: object
      title: Billable transaction collection
      description: Array of billable transactions.
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/BillableTransactionDTO'
        - $ref: '#/components/schemas/CollectionResourceMeta'
  examples:
    itemCollectionResponse:
      summary: Item
      description: Basic item example
      value:
        data:
          - self:
              id: 107470
              businessKey:
                number: S456
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/items/107470
            number: S456
            businessUnit:
              id: 73
              businessKey:
                code: ABC
              href: https://api.deposco.com/latest/companies/73
            name: graphic t-shirt
            itemType: Simple
            classType: '50'
            shortDescription: t-shirt with custom image
            longDescription: Cotton t-shirt that can be customized have various sizes and images.
            weight:
              weight: 4
              units: oz
            abcCategory: A
            productCode: shirt-456
            originCountry: USA
            cycleCount: true
            cycleCountFrequency: 1
            purchaseCost: 2.1
            unitPrice: 3.3
            bornOnDateRequired: true
            expirationDateRequired: true
            inspectionRequired: true
            hazmat: true
            hazmatCode: '2789'
            intangibleItemFlag: false
            inventoryTrackingEnabled: true
            lotTrackingEnabled: false
            serialTrackingEnabled: false
            shippable: true
            receiveOverTolerance: 1
            reorderQuantity: 1
            customFields:
              - self:
                  id: 477
                  businessKey:
                    item.number: S456
                    item.businessUnit.code: ABC
                    name: gift note
                name: gift note
                value: Thank you!
                type: String
                item:
                  id: 107470
                  businessKey:
                    number: S456
                    businessUnit.code: ABC
                  href: https://api.deposco.com/latest/items/107470
                createdDate: '2024-05-30T10:09:07-05:00'
                updatedDate: '2024-05-30T10:09:49.432-05:00'
                createdBy:
                  id: 1410
                  businessKey:
                    username: private-app-1
                  href: https://api.deposco.com/latest/users/1410
                updatedBy:
                  id: 1410
                  businessKey:
                    username: private-app-1
                  href: https://api.deposco.com/latest/users/1410
            carrierSpecialServices:
              - self:
                  id: 418
                  businessKey:
                    item.number: S456
                    item.businessUnit.code: ABC
                    shipVendor: UPS
                shipVendor: UPS
                item:
                  id: 107470
                  businessKey:
                    number: S456
                    businessUnit.code: ABC
                  href: https://api.deposco.com/latest/items/107470
                battery: false
                shipsWithDryIce: false
                holdAtLocation: false
                alcohol: false
                medicalUse: false
                returnReceiptRequested: false
                saturdayDelivery: true
                createdDate: '2024-05-30T10:09:08-05:00'
                updatedDate: '2024-05-30T10:09:49.46-05:00'
                createdBy:
                  id: 1410
                  businessKey:
                    username: private-app-1
                  href: https://api.deposco.com/latest/users/1410
                updatedBy:
                  id: 1410
                  businessKey:
                    username: private-app-1
                  href: https://api.deposco.com/latest/users/1410
            channels: []
            packs:
              - self:
                  id: 60922
                  businessKey:
                    item.number: S456
                    item.businessUnit.code: ABC
                    quantity: 1
                  href: https://api.deposco.com/latest/items/107470/packs/60922
                businessUnit:
                  id: 73
                  businessKey:
                    code: ABC
                  href: https://api.deposco.com/latest/companies/73
                item:
                  id: 107470
                  businessKey:
                    number: S456
                    businessUnit.code: ABC
                  href: https://api.deposco.com/latest/items/107470
                type: Each
                quantity: 1
                key: S456--Each--1
                name: S456-Each
                newPackFlag: false
                weight:
                  weight: 4
                  units: oz
                dimensions:
                  length:
                    measurement: 20
                    units: in
                  width:
                    measurement: 12
                    units: in
                  height:
                    measurement: 1
                    units: in
                  volume:
                    measurement: 240
                    units: in
                upcs:
                  data:
                    - self:
                        id: 51
                        businessKey:
                          pack.quantity: 1
                          pack.item.businessUnit.code: ABC
                          pack.item.number: S456
                          value: upc-S456-1
                      pack:
                        id: 60922
                        businessKey:
                          item.number: S456
                          item.businessUnit.code: ABC
                          quantity: 1
                        href: https://api.deposco.com/latest/items/107470/packs/60922
                      value: upc-S456-1
                  links:
                    - rel: next
                      href: https://api.deposco.com/latest/items/107470/packs/60922/upcs?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
                lpnTrackingEnabled: true
                readyToShip: true
                cartonGroup: Shirt Boxes
                carrierSpecialServices:
                  - self:
                      id: 417
                      businessKey:
                        pack.quantity: 1
                        pack.item.businessUnit.code: ABC
                        pack.item.number: S456
                        shipVendor: UPS
                    shipVendor: UPS
                    pack:
                      id: 60922
                      businessKey:
                        item.number: S456
                        item.businessUnit.code: ABC
                        quantity: 1
                      href: https://api.deposco.com/latest/items/107470/packs/60922
                    battery: false
                    shipsWithDryIce: false
                    holdAtLocation: false
                    alcohol: false
                    medicalUse: false
                    returnReceiptRequested: false
                    saturdayDelivery: true
                    createdDate: '2024-05-30T10:09:07-05:00'
                    updatedDate: '2024-05-30T10:09:49.421-05:00'
                    createdBy:
                      id: 1410
                      businessKey:
                        username: private-app-1
                      href: https://api.deposco.com/latest/users/1410
                    updatedBy:
                      id: 1410
                      businessKey:
                        username: private-app-1
                      href: https://api.deposco.com/latest/users/1410
                createdDate: '2024-05-30T10:09:07-05:00'
                updatedDate: '2024-05-30T10:09:49.424-05:00'
                createdBy:
                  id: 1410
                  businessKey:
                    username: private-app-1
                  href: https://api.deposco.com/latest/users/1410
                updatedBy:
                  id: 1410
                  businessKey:
                    username: private-app-1
                  href: https://api.deposco.com/latest/users/1410
            upcs:
              data:
                - self:
                    id: 4697
                    businessKey:
                      item.number: S456
                      item.businessUnit.code: ABC
                      value: upc-S456
                  item:
                    id: 107470
                    businessKey:
                      number: S456
                      businessUnit.code: ABC
                    href: https://api.deposco.com/latest/items/107470
                  value: upc-S456
              links:
                - rel: next
                  href: https://api.deposco.com/latest/items/107470/upcs?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
            productCategory:
              id: 1
              businessKey:
                code: cat1
            styleNumber: tshirt
            styleName: T-Shirt
            colorName: white
            colorCode: WH
            brandName: MyShirts
            size: medium
            nmfcNumber: '49880'
            hsCodes:
              data:
                - self:
                    id: 33
                    businessKey:
                      item.number: S456
                      item.businessUnit.code: ABC
                      country.code: United States
                  item:
                    id: 107470
                    businessKey:
                      number: S456
                      businessUnit.code: ABC
                    href: https://api.deposco.com/latest/items/107470
                  country:
                    id: 235
                    businessKey:
                      code: United States
                  code: '630900'
                  createdDate: '2024-05-30T10:09:49.401-05:00'
                  updatedDate: '2024-05-30T10:09:49.401-05:00'
                  createdBy:
                    id: 1410
                    businessKey:
                      username: private-app-1
                  updatedBy:
                    id: 1410
                    businessKey:
                      username: private-app-1
                    href: https://api.deposco.com/latest/users/1410
            transportationClass: Clothing
            components: []
            itemVendors:
              data: []
            customAttribute1: custom shirt text
            kitOrderOnly: false
            kitStockOnly: false
            externalImageUrl: http://deposco.com
            taxable: true
            serialCapturePoint: Receiving
            salesEnabledFlag: true
            reorderPoint: 1
            createdDate: '2024-05-30T10:09:07-05:00'
            updatedDate: '2024-05-30T10:09:49.462-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
        links:
          - rel: next
            href: https://api.deposco.com/latest/items?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
    itemRequest:
      summary: Item
      description: Basic item example
      value:
        number: S456
        businessUnit:
          businessKey:
            code: ABC
        name: graphic t-shirt
        itemType: Simple
        shortDescription: t-shirt with custom image
        longDescription: Cotton t-shirt that can be customized have various sizes and images.
        weight:
          weight: 4
          units: oz
        abcCategory: A
        productCode: shirt-456
        originCountry: USA
        cycleCount: true
        cycleCountFrequency: 1
        purchaseCost: 2.1
        unitPrice: 3.3
        bornOnDateRequired: true
        expirationDateRequired: true
        inspectionRequired: true
        hazmat: true
        hazmatCode: '2789'
        intangibleItemFlag: false
        inventoryTrackingEnabled: true
        lotTrackingEnabled: false
        serialTrackingEnabled: false
        shippable: true
        receiveOverTolerance: 1
        customFields:
          - name: gift note
            type: String
            value: Thank you!
        channels:
          - integration:
              businessKey:
                code: Shopify Demo Store
            listingStatus: Linked
            packQuantity: 1
            description: Graphic t-shirt in white, medium size
            listingPrice: 19.99
            itemCondition: New
            saleable: true
            syncInventory: true
            ref1: '456'
            ref2: SKU-456-M-WH
            ref3: T-Shirt-Medium
            ref4: Apparel
            ref5: Summer Collection
            secRef1: CATEGORY-SHIRTS
            secRef2: DEPT-MENS
            secRef3: SEASON-ALL
            secRef4: PROMO-ELIGIBLE
            secRef5: RETURNS-ALLOWED
        carrierSpecialServices:
          - shipVendor: UPS
            saturdayDelivery: true
        packs:
          - type: Each
            quantity: 1
            name: S456-Each
            weight:
              weight: 4
              units: oz
            dimensions:
              length:
                measurement: 20
                units: in
              width:
                measurement: 12
                units: in
              height:
                measurement: 1
                units: in
            upcs:
              data:
                - value: upc-S456-1
            lpnTrackingEnabled: true
            readyToShip: true
            cartonGroup: Shirt Boxes
            carrierSpecialServices:
              - shipVendor: UPS
                saturdayDelivery: true
        upcs:
          data:
            - value: upc-S456
        productCategory:
          businessKey:
            code: cat1
        styleNumber: tshirt
        styleName: T-Shirt
        colorName: white
        colorCode: WH
        size: medium
        classType: '50'
        nmfcNumber: '49880'
        transportationClass: Clothing
        hsCodes:
          data:
            - code: '630900'
              country:
                businessKey:
                  code: United States
        customAttribute1: custom shirt text
        kitOrderOnly: false
        kitStockOnly: false
        brandName: MyShirts
        externalImageUrl: http://deposco.com
        taxable: true
        serialCapturePoint: Receiving
        salesEnabledFlag: true
        reorderQuantity: 1
        reorderPoint: 1
    itemResponse:
      summary: Item
      description: Basic item example
      value:
        self:
          id: 107470
          businessKey:
            number: S456
            businessUnit.code: ABC
          href: https://api.deposco.com/latest/items/107470
        number: S456
        businessUnit:
          id: 73
          businessKey:
            code: ABC
          href: https://api.deposco.com/latest/companies/73
        name: graphic t-shirt
        itemType: Simple
        classType: '50'
        shortDescription: t-shirt with custom image
        longDescription: Cotton t-shirt that can be customized have various sizes and images.
        weight:
          weight: 4
          units: oz
        abcCategory: A
        productCode: shirt-456
        originCountry: USA
        cycleCount: true
        cycleCountFrequency: 1
        purchaseCost: 2.1
        unitPrice: 3.3
        bornOnDateRequired: true
        expirationDateRequired: true
        inspectionRequired: true
        hazmat: true
        hazmatCode: '2789'
        intangibleItemFlag: false
        inventoryTrackingEnabled: true
        lotTrackingEnabled: false
        serialTrackingEnabled: false
        shippable: true
        receiveOverTolerance: 1
        reorderQuantity: 1
        customFields:
          - self:
              id: 477
              businessKey:
                item.number: S456
                item.businessUnit.code: ABC
                name: gift note
            name: gift note
            value: Thank you!
            type: String
            item:
              id: 107470
              businessKey:
                number: S456
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/items/107470
            createdDate: '2024-05-30T10:09:07-05:00'
            updatedDate: '2024-05-30T10:09:49.432-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
        carrierSpecialServices:
          - self:
              id: 418
              businessKey:
                item.number: S456
                item.businessUnit.code: ABC
                shipVendor: UPS
            shipVendor: UPS
            item:
              id: 107470
              businessKey:
                number: S456
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/items/107470
            battery: false
            shipsWithDryIce: false
            holdAtLocation: false
            alcohol: false
            medicalUse: false
            returnReceiptRequested: false
            saturdayDelivery: true
            createdDate: '2024-05-30T10:09:08-05:00'
            updatedDate: '2024-05-30T10:09:49.46-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
        channels:
          - self:
              id: 7008
              businessKey:
                packQuantity: 1
                item.businessUnit.code: ABC
                integration.name: Shopify Demo Store
                ref1: '456'
                item.number: S456
            item:
              id: 107470
              businessKey:
                number: S456
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/items/107470
            integration:
              id: 1
              businessKey:
                name: Shopify Demo Store
            packQuantity: 1
            saleable: true
            syncInventory: true
            ref1: ref1
            createdDate: '2024-05-30T10:09:08-05:00'
            updatedDate: '2024-05-30T10:09:49.46-05:00'
        packs:
          - self:
              id: 60922
              businessKey:
                item.number: S456
                item.businessUnit.code: ABC
                quantity: 1
              href: https://api.deposco.com/latest/items/107470/packs/60922
            businessUnit:
              id: 73
              businessKey:
                code: ABC
            item:
              id: 107470
              businessKey:
                number: S456
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/items/107470
            type: Each
            quantity: 1
            key: S456--Each--1
            name: S456-Each
            newPackFlag: false
            weight:
              weight: 4
              units: oz
            dimensions:
              length:
                measurement: 20
                units: in
              width:
                measurement: 12
                units: in
              height:
                measurement: 1
                units: in
              volume:
                measurement: 240
                units: in
            upcs:
              data:
                - self:
                    id: 51
                    businessKey:
                      pack.quantity: 1
                      pack.item.businessUnit.code: ABC
                      pack.item.number: S456
                      value: upc-S456-1
                  pack:
                    id: 60922
                    businessKey:
                      item.number: S456
                      item.businessUnit.code: ABC
                      quantity: 1
                    href: https://api.deposco.com/latest/items/107470/packs/60922
                  value: upc-S456-1
              links:
                - rel: next
                  href: https://api.deposco.com/latest/items/107470/packs/60922/upcs?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
            lpnTrackingEnabled: true
            readyToShip: true
            cartonGroup: Shirt Boxes
            carrierSpecialServices:
              - self:
                  id: 417
                  businessKey:
                    pack.quantity: 1
                    pack.item.businessUnit.code: ABC
                    pack.item.number: S456
                    shipVendor: UPS
                shipVendor: UPS
                pack:
                  id: 60922
                  businessKey:
                    item.number: S456
                    item.businessUnit.code: ABC
                    quantity: 1
                  href: https://api.deposco.com/latest/items/107470/packs/60922
                battery: false
                shipsWithDryIce: false
                holdAtLocation: false
                alcohol: false
                medicalUse: false
                returnReceiptRequested: false
                saturdayDelivery: true
                createdDate: '2024-05-30T10:09:07-05:00'
                updatedDate: '2024-05-30T10:09:49.421-05:00'
                createdBy:
                  id: 1410
                  businessKey:
                    username: private-app-1
                  href: https://api.deposco.com/latest/users/1410
                updatedBy:
                  id: 1410
                  businessKey:
                    username: private-app-1
                  href: https://api.deposco.com/latest/users/1410
            createdDate: '2024-05-30T10:09:07-05:00'
            updatedDate: '2024-05-30T10:09:49.424-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
        upcs:
          data:
            - self:
                id: 4697
                businessKey:
                  item.number: S456
                  item.businessUnit.code: ABC
                  value: upc-S456
              item:
                id: 107470
                businessKey:
                  number: S456
                  businessUnit.code: ABC
                href: https://api.deposco.com/latest/items/107470
              value: upc-S456
          links:
            - rel: next
              href: https://api.deposco.com/latest/items/107470/upcs?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
        productCategory:
          id: 1
          businessKey:
            code: cat1
        styleNumber: tshirt
        styleName: T-Shirt
        colorName: white
        colorCode: WH
        brandName: MyShirts
        size: medium
        nmfcNumber: '49880'
        hsCodes:
          data:
            - self:
                id: 33
                businessKey:
                  item.number: S456
                  item.businessUnit.code: ABC
                  country.code: United States
              item:
                id: 107470
                businessKey:
                  number: S456
                  businessUnit.code: ABC
                href: https://api.deposco.com/latest/items/107470
              country:
                id: 235
                businessKey:
                  code: United States
              code: '630900'
              createdDate: '2024-05-30T10:09:49.401-05:00'
              updatedDate: '2024-05-30T10:09:49.401-05:00'
              createdBy:
                id: 1410
                businessKey:
                  username: private-app-1
                href: https://api.deposco.com/latest/users/1410
              updatedBy:
                id: 1410
                businessKey:
                  username: private-app-1
                href: https://api.deposco.com/latest/users/1410
        transportationClass: Clothing
        components: []
        itemVendors:
          data: []
        customAttribute1: custom shirt text
        kitOrderOnly: false
        kitStockOnly: false
        externalImageUrl: http://deposco.com
        taxable: true
        serialCapturePoint: Receiving
        salesEnabledFlag: true
        reorderPoint: 1
        createdDate: '2024-05-30T10:09:07-05:00'
        updatedDate: '2024-05-30T10:09:49.462-05:00'
        createdBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
        updatedBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
    packResponse:
      summary: Pack
      description: Basic pack example
      value:
        self:
          id: 60922
          businessKey:
            item.number: S456
            item.businessUnit.code: ABC
            quantity: 1
          href: https://api.deposco.com/latest/items/107470/packs/60922
        businessUnit:
          id: 73
          businessKey:
            code: ABC
          href: https://api.deposco.com/latest/companies/73
        item:
          id: 107470
          businessKey:
            number: S456
            businessUnit.code: ABC
          href: https://api.deposco.com/latest/items/107470
        type: Each
        quantity: 1
        key: S456--Each--1
        name: S456-Each
        newPackFlag: false
        weight:
          weight: 4
          units: oz
        dimensions:
          length:
            measurement: 20
            units: in
          width:
            measurement: 12
            units: in
          height:
            measurement: 1
            units: in
          volume:
            measurement: 240
            units: in
        upcs:
          data:
            - self:
                id: 51
                businessKey:
                  pack.quantity: 1
                  pack.item.businessUnit.code: ABC
                  pack.item.number: S456
                  value: upc-S456-1
              pack:
                id: 60922
                businessKey:
                  item.number: S456
                  item.businessUnit.code: ABC
                  quantity: 1
                href: https://api.deposco.com/latest/items/107470/packs/60922
              value: upc-S456-1
          links:
            - rel: next
              href: https://api.deposco.com/latest/items/107470/packs/60922/upcs?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
        lpnTrackingEnabled: true
        readyToShip: true
        cartonGroup: Shirt Boxes
        carrierSpecialServices:
          - self:
              id: 417
              businessKey:
                pack.quantity: 1
                pack.item.businessUnit.code: ABC
                pack.item.number: S456
                shipVendor: UPS
            shipVendor: UPS
            pack:
              id: 60922
              businessKey:
                item.number: S456
                item.businessUnit.code: ABC
                quantity: 1
              href: https://api.deposco.com/latest/items/107470/packs/60922
            battery: false
            shipsWithDryIce: false
            holdAtLocation: false
            alcohol: false
            medicalUse: false
            returnReceiptRequested: false
            saturdayDelivery: true
            createdDate: '2024-05-30T10:09:07-05:00'
            updatedDate: '2024-05-30T10:09:49.421-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
        createdDate: '2024-05-30T10:09:07-05:00'
        updatedDate: '2024-05-30T10:09:49.424-05:00'
        createdBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
        updatedBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
    itemUpcCollectionResponse:
      summary: Item UPC
      description: Basic item UPC example
      value:
        data:
          - self:
              id: 4697
              businessKey:
                item.number: S456
                item.businessUnit.code: ABC
                value: upc-S456
            item:
              id: 107470
              businessKey:
                number: S456
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/items/107470
            value: upc-S456
        links:
          - rel: next
            href: https://api.deposco.com/latest/items/107470/upcs?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
    packUpcCollectionResponse:
      summary: Pack UPC
      description: Basic pack UPC example
      value:
        data:
          - self:
              id: 51
              businessKey:
                pack.quantity: 1
                pack.item.businessUnit.code: ABC
                pack.item.number: S456
                value: upc-S456-1
            pack:
              id: 60922
              businessKey:
                item.number: S456
                item.businessUnit.code: ABC
                quantity: 1
              href: https://api.deposco.com/latest/items/107470/packs/60922
            value: upc-S456-1
        links:
          - rel: next
            href: https://api.deposco.com/latest/items/107470/packs/60922/upcs?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
    kitHeaderCollectionResponse:
      summary: Kit Header
      description: Basic Kit Header example
      value:
        data:
          - self:
              id: 25
              businessKey:
                name: Bicycle
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/kitHeaders/25
            name: Bicycle
            businessUnit:
              id: 73
              businessKey:
                code: ABC
              href: https://api.deposco.com/latest/companies/73
            maxWorkorderSize: 2
            minWorkorderSize: 1
            leadTime: 1
            kitDetails:
              data:
                - self:
                    id: 50
                    businessKey:
                      quantity: 1
                      item.number: FinishedBicycle
                      item.businessUnit.code: ABC
                      kitHeader.name: Bicycle
                      kitHeader.businessUnit.code: ABC
                    href: https://api.deposco.com/latest/kitHeaders/25/kitDetails/50
                  kitHeader:
                    id: 25
                    businessKey:
                      name: Bicycle
                      businessUnit.code: ABC
                    href: https://api.deposco.com/latest/kitHeaders/25
                  item:
                    id: 107455
                    businessKey:
                      number: FinishedBicycle
                      businessUnit.code: ABC
                    href: https://api.deposco.com/latest/items/107455
                  pack:
                    id: 60908
                    businessKey:
                      item.number: FinishedBicycle
                      item.businessUnit.code: ABC
                      quantity: 1
                    href: https://api.deposco.com/latest/items/107455/packs/60908
                  quantity: 1
                  businessUnit:
                    id: 73
                    businessKey:
                      code: ABC
                    href: https://api.deposco.com/latest/companies/73
                  rank: 1
                  type: Output
                  createdDate: '2024-04-26T15:28:38-05:00'
                  updatedDate: '2024-04-26T15:28:38-05:00'
                  createdBy:
                    id: 1410
                    businessKey:
                      username: private-app-1
                    href: https://api.deposco.com/latest/users/1410
                  updatedBy:
                    id: 1410
                    businessKey:
                      username: private-app-1
                    href: https://api.deposco.com/latest/users/1410
                - self:
                    id: 51
                    businessKey:
                      quantity: 1
                      item.number: Wheel
                      item.businessUnit.code: ABC
                      kitHeader.name: Bicycle
                      kitHeader.businessUnit.code: ABC
                    href: https://api.deposco.com/latest/kitHeaders/25/kitDetails/51
                  kitHeader:
                    id: 25
                    businessKey:
                      name: Bicycle
                      businessUnit.code: ABC
                    href: https://api.deposco.com/latest/kitHeaders/25
                  item:
                    id: 107454
                    businessKey:
                      number: Wheel
                      businessUnit.code: ABC
                    href: https://api.deposco.com/latest/items/107454
                  quantity: 2
                  businessUnit:
                    id: 73
                    businessKey:
                      code: ABC
                    href: https://api.deposco.com/latest/companies/73
                  rank: 1
                  type: Input
                  createdDate: '2024-04-26T15:28:38-05:00'
                  updatedDate: '2024-04-26T15:28:38-05:00'
                  createdBy:
                    id: 1410
                    businessKey:
                      username: private-app-1
                    href: https://api.deposco.com/latest/users/1410
                  updatedBy:
                    id: 1410
                    businessKey:
                      username: private-app-1
                    href: https://api.deposco.com/latest/users/1410
                - self:
                    id: 48
                    businessKey:
                      quantity: 1
                      item.number: BicycleFrame
                      item.businessUnit.code: ABC
                      kitHeader.name: Bicycle
                      kitHeader.businessUnit.code: ABC
                    href: https://api.deposco.com/latest/kitHeaders/25/kitDetails/48
                  kitHeader:
                    id: 25
                    businessKey:
                      name: Bicycle
                      businessUnit.code: ABC
                    href: https://api.deposco.com/latest/kitHeaders/25
                  item:
                    id: 107372
                    businessKey:
                      number: BicycleFrame
                      businessUnit.code: ABC
                    href: https://api.deposco.com/latest/items/107372
                  quantity: 1
                  businessUnit:
                    id: 73
                    businessKey:
                      code: ABC
                    href: https://api.deposco.com/latest/companies/73
                  rank: 2
                  type: Input
                  createdDate: '2024-03-14T16:21:14-05:00'
                  updatedDate: '2024-04-30T16:20:47-05:00'
                  createdBy:
                    id: 1410
                    businessKey:
                      username: private-app-1
                    href: https://api.deposco.com/latest/users/1410
                  updatedBy:
                    id: 1410
                    businessKey:
                      username: private-app-1
                    href: https://api.deposco.com/latest/users/1410
              links:
                - rel: next
                  href: https://api.deposco.com/latest/kitHeaders/25/kitDetails?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
            createdDate: '2024-03-14T15:14:50-05:00'
            updatedDate: '2024-04-30T16:20:47-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
        links:
          - rel: next
            href: https://api.deposco.com/latest/kitHeaders?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
    kitHeaderRequest:
      summary: Kit Header
      description: Basic Kit Header example
      value:
        name: Bicycle
        businessUnit:
          businessKey:
            code: ABC
        maxWorkorderSize: 2
        minWorkorderSize: 1
        leadTime: 1
        kitDetails:
          data:
            - item:
                businessKey:
                  number: FinishedBicycle
                  businessUnit.code: ABC
              pack:
                businessKey:
                  item.number: FinishedBicycle
                  item.businessUnit.code: ABC
                  quantity: 1
              quantity: 1
              businessUnit:
                businessKey:
                  code: ABC
              rank: 1
              type: Output
            - item:
                businessKey:
                  number: Wheel
                  businessUnit.code: ABC
              quantity: 2
              businessUnit:
                businessKey:
                  code: ABC
              rank: 1
              type: Input
            - item:
                businessKey:
                  number: BicycleFrame
                  businessUnit.code: ABC
              quantity: 1
              businessUnit:
                businessKey:
                  code: ABC
              rank: 2
              type: Input
    kitHeaderResponse:
      summary: Kit Header
      description: Basic Kit Header example
      value:
        self:
          id: 25
          businessKey:
            name: Bicycle
            businessUnit.code: ABC
          href: https://api.deposco.com/latest/kitHeaders/25
        name: Bicycle
        businessUnit:
          id: 73
          businessKey:
            code: ABC
          href: https://api.deposco.com/latest/companies/73
        maxWorkorderSize: 2
        minWorkorderSize: 1
        leadTime: 1
        kitDetails:
          data:
            - self:
                id: 50
                businessKey:
                  quantity: 1
                  item.number: FinishedBicycle
                  item.businessUnit.code: ABC
                  kitHeader.name: Bicycle
                  kitHeader.businessUnit.code: ABC
                href: https://api.deposco.com/latest/kitHeaders/25/kitDetails/50
              kitHeader:
                id: 25
                businessKey:
                  name: Bicycle
                  businessUnit.code: ABC
                href: https://api.deposco.com/latest/kitHeaders/25
              item:
                id: 107455
                businessKey:
                  number: FinishedBicycle
                  businessUnit.code: ABC
                href: https://api.deposco.com/latest/items/107455
              pack:
                id: 60908
                businessKey:
                  item.number: FinishedBicycle
                  item.businessUnit.code: ABC
                  quantity: 1
                href: https://api.deposco.com/latest/items/107455/packs/60908
              quantity: 1
              businessUnit:
                id: 73
                businessKey:
                  code: ABC
                href: https://api.deposco.com/latest/companies/73
              rank: 1
              type: Output
              createdDate: '2024-04-26T15:28:38-05:00'
              updatedDate: '2024-04-26T15:28:38-05:00'
              createdBy:
                id: 1410
                businessKey:
                  username: private-app-1
                href: https://api.deposco.com/latest/users/1410
              updatedBy:
                id: 1410
                businessKey:
                  username: private-app-1
                href: https://api.deposco.com/latest/users/1410
            - self:
                id: 51
                businessKey:
                  quantity: 1
                  item.number: Wheel
                  item.businessUnit.code: ABC
                  kitHeader.name: Bicycle
                  kitHeader.businessUnit.code: ABC
                href: https://api.deposco.com/latest/kitHeaders/25/kitDetails/51
              kitHeader:
                id: 25
                businessKey:
                  name: Bicycle
                  businessUnit.code: ABC
                href: https://api.deposco.com/latest/kitHeaders/25
              item:
                id: 107454
                businessKey:
                  number: Wheel
                  businessUnit.code: ABC
                href: https://api.deposco.com/latest/items/107454
              quantity: 2
              businessUnit:
                id: 73
                businessKey:
                  code: ABC
                href: https://api.deposco.com/latest/companies/73
              rank: 1
              type: Input
              createdDate: '2024-04-26T15:28:38-05:00'
              updatedDate: '2024-04-26T15:28:38-05:00'
              createdBy:
                id: 1410
                businessKey:
                  username: private-app-1
                href: https://api.deposco.com/latest/users/1410
              updatedBy:
                id: 1410
                businessKey:
                  username: private-app-1
                href: https://api.deposco.com/latest/users/1410
            - self:
                id: 48
                businessKey:
                  quantity: 1
                  item.number: BicycleFrame
                  item.businessUnit.code: ABC
                  kitHeader.name: Bicycle
                  kitHeader.businessUnit.code: ABC
                href: https://api.deposco.com/latest/kitHeaders/25/kitDetails/48
              kitHeader:
                id: 25
                businessKey:
                  name: Bicycle
                  businessUnit.code: ABC
                href: https://api.deposco.com/latest/kitHeaders/25
              item:
                id: 107372
                businessKey:
                  number: BicycleFrame
                  businessUnit.code: ABC
                href: https://api.deposco.com/latest/items/107372
              quantity: 1
              businessUnit:
                id: 73
                businessKey:
                  code: ABC
                href: https://api.deposco.com/latest/companies/73
              rank: 2
              type: Input
              createdDate: '2024-03-14T16:21:14-05:00'
              updatedDate: '2024-04-30T16:20:47-05:00'
              createdBy:
                id: 1410
                businessKey:
                  username: private-app-1
                href: https://api.deposco.com/latest/users/1410
              updatedBy:
                id: 1410
                businessKey:
                  username: private-app-1
                href: https://api.deposco.com/latest/users/1410
          links:
            - rel: next
              href: https://api.deposco.com/latest/kitHeaders/25/kitDetails?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
        createdDate: '2024-03-14T15:14:50-05:00'
        updatedDate: '2024-04-30T16:20:47-05:00'
        createdBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
        updatedBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
    kitDetailCollectionResponse:
      summary: Kit Detail
      description: Basic Kit Detail example
      value:
        data:
          - self:
              id: 50
              businessKey:
                quantity: 1
                item.number: FinishedBicycle
                item.businessUnit.code: ABC
                kitHeader.name: Bicycle
                kitHeader.businessUnit.code: ABC
              href: https://api.deposco.com/latest/kitHeaders/25/kitDetails/50
            kitHeader:
              id: 25
              businessKey:
                name: Bicycle
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/kitHeaders/25
            item:
              id: 107455
              businessKey:
                number: FinishedBicycle
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/items/107455
            pack:
              id: 60908
              businessKey:
                item.number: FinishedBicycle
                item.businessUnit.code: ABC
                quantity: 1
              href: https://api.deposco.com/latest/items/107455/packs/60908
            quantity: 1
            businessUnit:
              id: 73
              businessKey:
                code: ABC
              href: https://api.deposco.com/latest/companies/73
            rank: 1
            type: Output
            createdDate: '2024-04-26T15:28:38-05:00'
            updatedDate: '2024-04-26T15:28:38-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
        links:
          - rel: next
            href: https://api.deposco.com/latest/kitHeaders/25/kitDetails?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
    kitDetailResponse:
      summary: Kit Detail
      description: Basic Kit Detail example
      value:
        self:
          id: 50
          businessKey:
            quantity: 1
            item.number: FinishedBicycle
            item.businessUnit.code: ABC
            kitHeader.name: Bicycle
            kitHeader.businessUnit.code: ABC
          href: https://api.deposco.com/latest/kitHeaders/25/kitDetails/50
        kitHeader:
          id: 25
          businessKey:
            name: Bicycle
            businessUnit.code: ABC
          href: https://api.deposco.com/latest/kitHeaders/25
        item:
          id: 107455
          businessKey:
            number: FinishedBicycle
            businessUnit.code: ABC
          href: https://api.deposco.com/latest/items/107455
        pack:
          id: 60908
          businessKey:
            item.number: FinishedBicycle
            item.businessUnit.code: ABC
            quantity: 1
          href: https://api.deposco.com/latest/items/107455/packs/60908
        quantity: 1
        businessUnit:
          id: 73
          businessKey:
            code: ABC
          href: https://api.deposco.com/latest/companies/73
        rank: 1
        type: Output
        createdDate: '2024-04-26T15:28:38-05:00'
        updatedDate: '2024-04-26T15:28:38-05:00'
        createdBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
        updatedBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
    tradingPartnerCollectionResponse:
      summary: Trading Partner
      description: Basic trading partner example
      value:
        data:
          - self:
              id: 64
              businessKey:
                code: Acme
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/tradingPartners/64
            businessUnit:
              id: 73
              businessKey:
                code: ABC
              href: https://api.deposco.com/latest/companies/73
            code: Acme
            name: ACME
            contact:
              firstName: John
              lastName: Doe
              phone: 123-456-7890
              email: john@example.com
            address:
              line1: 123 Test Street
              city: Alpharetta
              stateProvince: GA
              postalCode: '30009'
              country: US
            billToContact:
              firstName: John
              lastName: Doe
              phone: 123-456-7890
              email: john@example.com
            billToAddress:
              line1: 123 Test Street
              city: Alpharetta
              stateProvince: GA
              postalCode: '30009'
              country: US
            accountNumber: '80000009'
            partnershipType: Customer
            sendASN: Fully Shipped
            upsAccountNumber: AB1234
            fedexAccountNumber: '123456789'
            useShipFromForShipments: true
            ssccNumbersRequiredForTrip: false
            taxRate: 0.08
            ssccExpansionDigit: 1
            transRoutingEnabled: false
            minOrderAmount: 10
            parameters:
              data:
                - self:
                    id: 12
                    businessKey:
                      siteCode: AtlantaSite
                      tradingPartner.code: Acme
                      tradingPartner.businessUnit.code: ABC
                  businessUnit:
                    id: 73
                    businessKey:
                      code: ABC
                    href: https://api.deposco.com/latest/companies/73
                  tradingPartner:
                    id: 64
                    businessKey:
                      code: Acme
                      businessUnit.code: ABC
                    href: https://api.deposco.com/latest/tradingPartners/64
                  code: DefaultOmProfile
                  number: DefaultOmProfile
                  description: Defines the default OM Profile to be used in OMS
                  resultName: DefaultOmProfile
                  resultValue: Default
                  createdDate: '2024-03-14T15:14:50-05:00'
                  updatedDate: '2024-04-30T16:20:47-05:00'
                  createdBy:
                    id: 1410
                    businessKey:
                      username: private-app-1
                    href: https://api.deposco.com/latest/users/1410
                  updatedBy:
                    id: 1410
                    businessKey:
                      username: private-app-1
                    href: https://api.deposco.com/latest/users/1410
              links:
                - rel: next
                  href: https://api.deposco.com/latest/tradingPartners/12/parameters?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
            sites:
              data:
                - self:
                    id: 14
                    businessKey:
                      siteCode: AtlantaSite
                      tradingPartner.code: Acme
                      tradingPartner.businessUnit.code: ABC
                  businessUnit:
                    id: 73
                    businessKey:
                      code: ABC
                    href: https://api.deposco.com/latest/companies/73
                  siteCode: AtlantaSite
                  siteName: ACME Atlanta
                  tradingPartner:
                    id: 64
                    businessKey:
                      code: Acme
                      businessUnit.code: ABC
                    href: https://api.deposco.com/latest/tradingPartners/64
                  createdDate: '2024-03-14T15:14:50-05:00'
                  updatedDate: '2024-04-30T16:20:47-05:00'
                  createdBy:
                    id: 1410
                    businessKey:
                      username: private-app-1
                    href: https://api.deposco.com/latest/users/1410
                  updatedBy:
                    id: 1410
                    businessKey:
                      username: private-app-1
                    href: https://api.deposco.com/latest/users/1410
              links:
                - rel: next
                  href: https://api.deposco.com/latest/tradingPartners/12/sites?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
            channels:
              - integration:
                  businessKey:
                    code: Netsuite Demo ERP
                ref1: Acme
            createdDate: '2024-03-14T15:14:50-05:00'
            updatedDate: '2024-04-30T16:20:47-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
        links:
          - rel: next
            href: https://api.deposco.com/latest/tradingPartners?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
    tradingPartnerRequest:
      summary: Trading Partner
      description: Basic trading partner example
      value:
        businessUnit:
          businessKey:
            code: ABC
        code: Acme
        name: ACME
        contact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        address:
          line1: 123 Test Street
          city: Alpharetta
          stateProvince: GA
          postalCode: '30009'
          country: US
        billToContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        billToAddress:
          line1: 123 Test Street
          city: Alpharetta
          stateProvince: GA
          postalCode: '30009'
          country: US
        accountNumber: '80000009'
        partnershipType: Customer
        sendASN: Fully Shipped
        upsAccountNumber: AB1234
        fedexAccountNumber: '123456789'
        useShipFromForShipments: true
        ssccNumbersRequiredForTrip: false
        taxRate: 0.08
        ssccExpansionDigit: 1
        transRoutingEnabled: false
        minOrderAmount: 10
        parameters:
          data:
            - businessUnit:
                id: 73
                businessKey:
                  code: ABC
                href: https://api.deposco.com/latest/companies/73
              code: DefaultOmProfile
              number: DefaultOmProfile
              description: Defines the default OM Profile to be used in OMS
              resultName: DefaultOmProfile
              resultValue: Default
        sites:
          data:
            - businessUnit:
                businessKey:
                  code: ABC
              siteCode: AtlantaSite
              siteName: ACME Atlanta
        channels:
          - integration:
              businessKey:
                code: Netsuite Demo ERP
            ref1: Acme
    tradingPartnerResponse:
      summary: Trading Partner
      description: Basic trading partner example
      value:
        self:
          id: 64
          businessKey:
            code: Acme
            businessUnit.code: ABC
          href: https://api.deposco.com/latest/tradingPartners/64
        businessUnit:
          id: 73
          businessKey:
            code: ABC
          href: https://api.deposco.com/latest/companies/73
        code: Acme
        name: ACME
        contact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        address:
          line1: 123 Test Street
          city: Alpharetta
          stateProvince: GA
          postalCode: '30009'
          country: US
        billToContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        billToAddress:
          line1: 123 Test Street
          city: Alpharetta
          stateProvince: GA
          postalCode: '30009'
          country: US
        accountNumber: '80000009'
        partnershipType: Customer
        sendASN: Fully Shipped
        upsAccountNumber: AB1234
        fedexAccountNumber: '123456789'
        useShipFromForShipments: true
        ssccNumbersRequiredForTrip: false
        taxRate: 0.08
        ssccExpansionDigit: 1
        transRoutingEnabled: false
        minOrderAmount: 10
        parameters:
          data:
            - self:
                id: 12
                businessKey:
                  code: DefaultOmProfile
                  tradingPartner.code: Acme
                  tradingPartner.businessUnit.code: ABC
              businessUnit:
                id: 73
                businessKey:
                  code: ABC
                href: https://api.deposco.com/latest/companies/73
              tradingPartner:
                id: 64
                businessKey:
                  code: Acme
                  businessUnit.code: ABC
                href: https://api.deposco.com/latest/tradingPartners/64
              code: DefaultOmProfile
              number: DefaultOmProfile
              description: Defines the default OM Profile to be used in OMS
              resultName: DefaultOmProfile
              resultValue: Default
              createdDate: '2024-03-14T15:14:50-05:00'
              updatedDate: '2024-04-30T16:20:47-05:00'
              createdBy:
                id: 1410
                businessKey:
                  username: private-app-1
                href: https://api.deposco.com/latest/users/1410
              updatedBy:
                id: 1410
                businessKey:
                  username: private-app-1
                href: https://api.deposco.com/latest/users/1410
          links:
            - rel: next
              href: https://api.deposco.com/latest/tradingPartners/12/parameters?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
        sites:
          data:
            - self:
                id: 14
                businessKey:
                  siteCode: AtlantaSite
                  tradingPartner.code: Acme
                  tradingPartner.businessUnit.code: ABC
              businessUnit:
                id: 73
                businessKey:
                  code: ABC
                href: https://api.deposco.com/latest/companies/73
              siteCode: AtlantaSite
              siteName: ACME Atlanta
              tradingPartner:
                id: 64
                businessKey:
                  code: Acme
                  businessUnit.code: ABC
                href: https://api.deposco.com/latest/tradingPartners/64
              createdDate: '2024-03-14T15:14:50-05:00'
              updatedDate: '2024-04-30T16:20:47-05:00'
              createdBy:
                id: 1410
                businessKey:
                  username: private-app-1
                href: https://api.deposco.com/latest/users/1410
              updatedBy:
                id: 1410
                businessKey:
                  username: private-app-1
                href: https://api.deposco.com/latest/users/1410
          links:
            - rel: next
              href: https://api.deposco.com/latest/tradingPartners/12/sites?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
        channels:
          - integration:
              businessKey:
                code: Netsuite Demo ERP
            ref1: Acme
        createdDate: '2024-03-14T15:14:50-05:00'
        updatedDate: '2024-04-30T16:20:47-05:00'
        createdBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
        updatedBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
    tradingPartnerSiteCollectionResponse:
      summary: Trading Partner Site
      description: Basic trading partner site example
      value:
        data:
          - self:
              id: 14
              businessKey:
                siteCode: AtlantaSite
                tradingPartner.code: Acme
                tradingPartner.businessUnit.code: ABC
            businessUnit:
              id: 73
              businessKey:
                code: ABC
              href: https://api.deposco.com/latest/companies/73
            siteCode: AtlantaSite
            siteName: ACME Atlanta
            tradingPartner:
              id: 64
              businessKey:
                code: Acme
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/tradingPartners/64
            createdDate: '2024-03-14T15:14:50-05:00'
            updatedDate: '2024-04-30T16:20:47-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
        links:
          - rel: next
            href: https://api.deposco.com/latest/tradingPartners/64/sites?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
    tradingPartnerParameterCollectionResponse:
      summary: Trading Partner parameter
      description: Basic trading partner parameter example
      value:
        data:
          - self:
              id: 12
              businessKey:
                code: DefaultOmProfile
                tradingPartner.code: Acme
                tradingPartner.businessUnit.code: ABC
            businessUnit:
              id: 73
              businessKey:
                code: ABC
              href: https://api.deposco.com/latest/companies/73
            tradingPartner:
              id: 64
              businessKey:
                code: Acme
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/tradingPartners/64
            code: DefaultOmProfile
            number: DefaultOmProfile
            description: Defines the default OM Profile to be used in OMS
            resultName: DefaultOmProfile
            resultValue: Default
            createdDate: '2024-03-14T15:14:50-05:00'
            updatedDate: '2024-04-30T16:20:47-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
        links:
          - rel: next
            href: https://api.deposco.com/latest/tradingPartners/12/parameters?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
    companyCollectionResponse:
      summary: Company
      description: Basic company example
      value:
        data:
          - self:
              id: 93
              businessKey:
                code: ABC
              href: https://api.deposco.com/latest/companies/93
            code: ABC
            name: AB Company
            address:
              line1: 11605 Haynes Bridge Rd STE 200
              line2: ''
              city: Alpharetta
              postalCode: '30009'
              stateProvince: GA
              country: US
            contact:
              firstName: John
              lastName: Doe
              phone: 444-444-4444
              email: email@email.com
            annualRevenue: 0
            numberOfEmployees: 10
            useSAS70Compliance: true
            active: true
            ssccExpansionDigit: 0
            createdDate: '2024-05-30T14:29:26.105-05:00'
            updatedDate: '2024-05-30T14:29:26.675-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
        links:
          - rel: next
            href: https://api.deposco.com/latest/companies?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
    companyRequest:
      summary: Company
      description: Basic company example
      value:
        code: ABC
        name: AB Company
        address:
          line1: 11605 Haynes Bridge Rd STE 200
          line2: ''
          city: Alpharetta
          postalCode: '30009'
          stateProvince: GA
          country: US
        contact:
          firstName: John
          lastName: Doe
          phone: 444-444-4444
          email: email@email.com
        numberOfEmployees: 10
        useSAS70Compliance: true
        active: true
    companyResponse:
      summary: Company
      description: Basic company example
      value:
        self:
          id: 93
          businessKey:
            code: ABC
          href: https://api.deposco.com/latest/companies/93
        code: ABC
        name: AB Company
        address:
          line1: 11605 Haynes Bridge Rd STE 200
          line2: ''
          city: Alpharetta
          postalCode: '30009'
          stateProvince: GA
          country: US
        contact:
          firstName: John
          lastName: Doe
          phone: 444-444-4444
          email: email@email.com
        annualRevenue: 0
        numberOfEmployees: 10
        useSAS70Compliance: true
        active: true
        ssccExpansionDigit: 0
        createdDate: '2024-05-30T14:29:26.105-05:00'
        updatedDate: '2024-05-30T14:29:26.675-05:00'
        createdBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
        updatedBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
    facilityCollectionResponse:
      summary: Facility
      description: Basic facility example
      value:
        data:
          - self:
              id: 1
              businessKey:
                number: Atlanta1
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/facilities/1
            businessUnit:
              id: 73
              businessKey:
                code: SANDBOX_3PL
              href: https://api.deposco.com/latest/companies/73
            number: Atlanta1
            name: Atlanta Main
            type: Distribution Center
            description: HQ DC
            phone: 123-456-7890
            contact:
              name: John Doe
              phone: 123-456-7890
            address:
              line1: 123 Test Rd
              city: Atlanta
              postalCode: '30308'
            dbaName: ACME
            squareFeet: 5000
            timeZone: US/Eastern
            isVirtual: false
            enableShipToCustomer: true
            enableCustomerPickup: false
            latitude: 34.03445
            longitude: -84.27476
            facilityUOMSystem: Imperial
            createdDate: '2024-05-30T10:09:07-05:00'
            updatedDate: '2024-05-30T10:09:49.462-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
        links:
          - rel: next
            href: https://api.deposco.com/latest/facilities?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
    facilityRequest:
      summary: Facility
      description: Basic facility example
      value:
        self:
          businessKey:
            number: Atlanta1
            businessUnit.code: ABC
        businessUnit:
          businessKey:
            code: SANDBOX_3PL
        number: Atlanta1
        name: Atlanta Main
        type: Distribution Center
        description: HQ DC
        phone: 123-456-7890
        contact:
          name: John Doe
          phone: 123-456-7890
        address:
          line1: 123 Test Rd
          city: Atlanta
          postalCode: '30308'
        dbaName: ACME
        squareFeet: 5000
        timeZone: US/Eastern
        isVirtual: false
        enableShipToCustomer: true
        enableCustomerPickup: false
        latitude: 34.03445
        longitude: -84.27476
        facilityUOMSystem: Imperial
    facilityResponse:
      summary: Facility
      description: Basic facility example
      value:
        self:
          id: 1
          businessKey:
            number: Atlanta1
            businessUnit.code: ABC
          href: https://api.deposco.com/latest/facilities/1
        businessUnit:
          id: 73
          businessKey:
            code: SANDBOX_3PL
          href: https://api.deposco.com/latest/companies/73
        number: Atlanta1
        name: Atlanta Main
        type: Distribution Center
        description: HQ DC
        phone: 123-456-7890
        contact:
          name: John Doe
          phone: 123-456-7890
        address:
          line1: 123 Test Rd
          city: Atlanta
          postalCode: '30308'
        dbaName: ACME
        squareFeet: 5000
        timeZone: US/Eastern
        isVirtual: false
        enableShipToCustomer: true
        enableCustomerPickup: false
        latitude: 34.03445
        longitude: -84.27476
        facilityUOMSystem: Imperial
        createdDate: '2024-05-30T10:09:07-05:00'
        updatedDate: '2024-05-30T10:09:49.462-05:00'
        createdBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
        updatedBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
    zoneCollectionResponse:
      summary: Zone
      description: Basic zone example
      value:
        data:
          - self:
              id: 87
              businessKey:
                name: Staging
              href: https://api.deposco.com/latest/zones/87
            facility:
              id: 1
              businessKey:
                number: Atlanta1
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/facilities/1
            businessUnit:
              id: 73
              businessKey:
                code: ABC
              href: https://api.deposco.com/latest/companies/73
            name: Staging
            type: Staging
            pickRating: 0
            allocateAllStockFromZone: false
            maxNumberOfUnitsToWorkGroup: 5
            createdDate: '2024-05-30T10:09:07-05:00'
            updatedDate: '2024-05-30T10:09:49.462-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            locations:
              data:
                - id: 1000
                  businessKey:
                    locator: StagingArea1
                    facility.number: Atlanta1
                  href: https://api.deposco.com/latest/locations/1000
              links:
                - rel: next
                  href: https://api.deposco.com/latest/locations?search=iNMuGCUwltB9UAHtiDM4ZDX9VKj
        links:
          - rel: next
            href: https://api.deposco.com/latest/zones?searchId=cGFnZVNpemU9NTAmbWF4SWQ9ODc=
    zoneRequest:
      summary: Zone
      description: Basic zone example
      value:
        facility:
          businessKey:
            number: Atlanta1
            businessUnit.code: ABC
        businessUnit:
          businessKey:
            code: ABC
        name: Staging
        type: Staging
        pickRating: 0
        allocateAllStockFromZone: false
        maxNumberOfUnitsToWorkGroup: 5
        locations:
          data:
            - businessKey:
                locator: StagingArea1
                facility.number: Atlanta1
    zoneResponse:
      summary: Zone
      description: Basic zone example
      value:
        self:
          id: 87
          businessKey:
            name: Staging
          href: https://api.deposco.com/latest/zones/87
        facility:
          id: 1
          businessKey:
            number: Atlanta1
            businessUnit.code: ABC
          href: https://api.deposco.com/latest/facilities/1
        businessUnit:
          id: 73
          businessKey:
            code: ABC
          href: https://api.deposco.com/latest/companies/73
        name: Staging
        type: Staging
        pickRating: 0
        allocateAllStockFromZone: false
        maxNumberOfUnitsToWorkGroup: 5
        createdDate: '2024-05-30T10:09:07-05:00'
        updatedDate: '2024-05-30T10:09:49.462-05:00'
        createdBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
        updatedBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
        locations:
          data:
            - id: 1000
              businessKey:
                locator: StagingArea1
                facility.number: Atlanta1
              href: https://api.deposco.com/latest/locations/1000
          links:
            - rel: next
              href: https://api.deposco.com/latest/locations?search=iNMuGCUwltB9UAHtiDM4ZDX9VKj
    locationCollectionResponse:
      summary: Location
      description: Basic location example
      value:
        data:
          - self:
              id: 1000
              businessKey:
                locator: StagingArea1
                facility.number: Atlanta1
              href: https://api.deposco.com/latest/locations/58
            locator: StagingArea1
            businessUnit:
              id: 73
              businessKey:
                code: ABC
              href: https://api.deposco.com/latest/companies/73
            facility:
              id: 1
              businessKey:
                number: Atlanta1
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/facilities/1
            number: Atlanta1--StagingArea1
            type: Staging
            dimensions:
              length:
                measurement: 10
                units: in
              width:
                measurement: 10
                units: in
              height:
                measurement: 10
                units: in
              volume:
                measurement: 10
                units: in
            pickSequence: 20
            putawaySequence: 0
            storageType: Staging
            storageDetails:
              data:
                - self:
                    id: 2
                    businessKey:
                      pack.quantity: 1
                      pack.item.businessUnit.code: ABC
                      pack.item.number: S456
                      location.facility.number: Atlanta1
                      location.locator: StagingArea1
                    href: https://api.deposco.com/latest/locations/5/storageDetails/2
                  businessUnit:
                    id: 73
                    businessKey:
                      code: ABC
                    href: https://api.deposco.com/latest/companies/73
                  location:
                    id: 5
                    businessKey:
                      locator: StagingArea1
                      facility.number: Atlanta1
                    href: https://api.deposco.com/latest/locations/5
                  pack:
                    id: 1
                    businessKey:
                      item.number: S456
                      item.businessUnit.code: ABC
                      quantity: 1
                    href: https://api.deposco.com/latest/items/46815/packs/1
                  type: Split Case Picking
                  minimum: 15
                  maximum: 150
                  minimumPick: 1
                  maximumPick: 10
                  opportunisticCountThreshold: 0
                  createdBy:
                    id: 1410
                    businessKey:
                      username: private-app-1
                    href: https://api.deposco.com/latest/users/1410
                  updatedBy:
                    id: 1410
                    businessKey:
                      username: private-app-1
                    href: https://api.deposco.com/latest/users/1410
                  createdDate: '2016-08-19T22:08:52-05:00'
                  updatedDate: '2016-08-19T22:08:52-05:00'
              links:
                - rel: next
                  href: https://api.deposco.com/latest/locations/5/storageDetails?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
            mixedItemThreshold: Single Item
            status: Ready
            cycleCount: false
            pickable: false
            reserved: false
            lpnControlled: false
            cycleCountFrequency: 0
            useForKit: false
            zones:
              data:
                - id: 1000
                  businessKey:
                    name: Staging
                    facility.number: Atlanta1
                  href: https://api.deposco.com/latest/zones/1000
              links:
                - rel: next
                  href: https://api.deposco.com/latest/zones?search=iNMuGCUwltB9UAHtiDM4ZDX9VKj
            createdDate: '2024-05-30T10:09:07-05:00'
            updatedDate: '2024-05-30T10:09:49.462-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
        links:
          - rel: next
            href: https://api.deposco.com/latest/locations?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
    locationRequest:
      summary: Location
      description: Basic location example
      value:
        locator: StagingArea1
        businessUnit:
          businessKey:
            code: ABC
        facility:
          businessKey:
            number: Atlanta1
            businessUnit.code: ABC
        number: Atlanta1--StagingArea1
        type: Staging
        dimensions:
          length:
            measurement: 10
            units: in
          width:
            measurement: 10
            units: in
          height:
            measurement: 10
            units: in
          volume:
            measurement: 10
            units: in
        pickSequence: 20
        putawaySequence: 0
        storageType: Staging
        storageDetails:
          data:
            - pack:
                businessKey:
                  item.number: S456
                  item.businessUnit.code: ABC
                  quantity: 1
              location:
                businessKey:
                  locator: StagingArea1
                  facility.number: Atlanta1
              businessUnit:
                businessKey:
                  code: ABC
              type: Split Case Picking
              minimum: 15
              maximum: 150
              minimumPick: 1
              maximumPick: 10
              opportunisticCountThreshold: 0
        mixedItemThreshold: Single Item
        status: Ready
        cycleCount: false
        pickable: false
        reserved: false
        lpnControlled: false
        cycleCountFrequency: 0
        useForKit: false
        zones:
          data:
            - businessKey:
                name: Staging
                facility.number: Atlanta1
    locationResponse:
      summary: Location
      description: Basic location example
      value:
        self:
          id: 1000
          businessKey:
            locator: StagingArea1
            facility.number: Atlanta1
          href: https://api.deposco.com/latest/locations/58
        locator: StagingArea1
        businessUnit:
          id: 73
          businessKey:
            code: ABC
          href: https://api.deposco.com/latest/companies/73
        facility:
          id: 1
          businessKey:
            number: Atlanta1
          href: https://api.deposco.com/latest/facilities/1
        number: Atlanta1--StagingArea1
        type: Staging
        dimensions:
          length:
            measurement: 10
            units: in
          width:
            measurement: 10
            units: in
          height:
            measurement: 10
            units: in
          volume:
            measurement: 10
            units: in
        pickSequence: 20
        putawaySequence: 0
        storageType: Staging
        storageDetails:
          data:
            - self:
                id: 2
                businessKey:
                  pack.quantity: 1
                  pack.item.businessUnit.code: ABC
                  pack.item.number: S456
                  location.facility.number: Atlanta1
                  location.locator: StagingArea1
                href: https://api.deposco.com/latest/locations/5/storageDetails/2
              businessUnit:
                id: 73
                businessKey:
                  code: BASE
                href: https://api.deposco.com/latest/companies/73
              location:
                id: 5
                businessKey:
                  locator: StagingArea1
                  facility.number: Atlanta1
                href: https://api.deposco.com/latest/locations/5
              pack:
                id: 1
                businessKey:
                  item.number: S456
                  item.businessUnit.code: ABC
                  quantity: 1
                href: https://api.deposco.com/latest/items/46815/packs/1
              type: Split Case Picking
              minimum: 15
              maximum: 150
              minimumPick: 1
              maximumPick: 10
              opportunisticCountThreshold: 0
              createdBy:
                id: 1410
                businessKey:
                  username: private-app-1
                href: https://api.deposco.com/latest/users/1410
              updatedBy:
                id: 1410
                businessKey:
                  username: private-app-1
                href: https://api.deposco.com/latest/users/1410
              createdDate: '2016-08-19T22:08:52-05:00'
              updatedDate: '2016-08-19T22:08:52-05:00'
          links:
            - rel: next
              href: https://api.deposco.com/latest/locations/5/storageDetails?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
        mixedItemThreshold: Single Item
        status: Ready
        cycleCount: false
        pickable: false
        reserved: false
        lpnControlled: false
        cycleCountFrequency: 0
        useForKit: false
        zones:
          data:
            - id: 1000
              businessKey:
                name: Staging
                facility.number: Atlanta1
              href: https://api.deposco.com/latest/zones/1000
          links:
            - rel: next
              href: https://api.deposco.com/latest/zones?search=iNMuGCUwltB9UAHtiDM4ZDX9VKj
        createdDate: '2024-05-30T10:09:07-05:00'
        updatedDate: '2024-05-30T10:09:49.462-05:00'
        createdBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
        updatedBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
    storageDetailCollectionResponse:
      summary: Storage Detail
      description: Basic storage detail example
      value:
        data:
          - self:
              id: 2
              businessKey:
                pack.quantity: 1
                pack.item.businessUnit.code: ABC
                pack.item.number: S456
                location.facility.number: Atlanta1
                location.locator: StagingArea1
              href: https://api.deposco.com/latest/locations/5/storageDetails/2
            businessUnit:
              id: 73
              businessKey:
                code: BASE
              href: https://api.deposco.com/latest/companies/73
            location:
              id: 5
              businessKey:
                locator: StagingArea1
                facility.number: StagingArea1
              href: https://api.deposco.com/latest/locations/5
            pack:
              id: 1
              businessKey:
                item.number: S456
                item.businessUnit.code: ABC
                quantity: 1
              href: https://api.deposco.com/latest/items/46815/packs/1
            type: Split Case Picking
            minimum: 15
            maximum: 150
            minimumPick: 1
            maximumPick: 10
            opportunisticCountThreshold: 0
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            createdDate: '2016-08-19T22:08:52-05:00'
            updatedDate: '2016-08-19T22:08:52-05:00'
        links:
          - rel: next
            href: https://api.deposco.com/latest/locations/5/storageDetails?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
    storageDetailResponse:
      summary: Storage Detail
      description: Basic storage detail example
      value:
        self:
          id: 2
          businessKey:
            pack.quantity: 1
            pack.item.businessUnit.code: ABC
            pack.item.number: S456
            location.facility.number: Atlanta1
            location.locator: StagingArea1
          href: https://api.deposco.com/latest/locations/5/storageDetails/2
        businessUnit:
          id: 73
          businessKey:
            code: ABC
          href: https://api.deposco.com/latest/companies/73
        location:
          id: 5
          businessKey:
            locator: StagingArea1
            facility.number: Atlanta1
          href: https://api.deposco.com/latest/locations/5
        pack:
          id: 1
          businessKey:
            item.number: S456
            item.businessUnit.code: ABC
            quantity: 1
          href: https://api.deposco.com/latest/items/46815/packs/1
        type: Split Case Picking
        minimum: 15
        maximum: 150
        minimumPick: 1
        maximumPick: 10
        opportunisticCountThreshold: 0
        createdBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
        updatedBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
        createdDate: '2016-08-19T22:08:52-05:00'
        updatedDate: '2016-08-19T22:08:52-05:00'
    userCollectionResponse:
      summary: User
      description: Basic user example
      value:
        data:
          - self:
              id: 111
              businessKey:
                username: admin
              href: https://api.deposco.com/latest/users/111
            username: admin
            firstName: John
            lastName: Doe
            email: john@example.com
            enabled: true
            active: true
            participantType: Practitioner
            organization: Deposco
            handheldMenu: GroupMenu
            homePage: Default
            companyAssignments: null
            facility:
              id: 1
              businessKey:
                number: Atlanta1
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/facilities/1
            activeResource:
              id: 5
              businessKey: {}
            activeZone:
              id: 1
              businessKey:
                name: Staging
                facility.number: Atlanta1
              href: https://api.deposco.com/latest/zones/1
            timeZone: US/Eastern
            lastLoggedInTime: '2022-03-23T11:54:37-05:00'
            lastLogInAttempt: '2022-03-23T11:54:37-05:00'
            createdDate: '2024-05-30T10:09:07-05:00'
            updatedDate: '2024-05-30T10:09:49.462-05:00'
            createdBy:
              id: 111
              businessKey:
                username: admin
              href: https://api.deposco.com/latest/users/111
            updatedBy:
              id: 111
              businessKey:
                username: admin
              href: https://api.deposco.com/latest/users/111
        links:
          - rel: next
            href: https://api.deposco.com/latest/users?searchId=cGFnZVNpemU9NTAmbWF4SWQ9ODc=
    userResponse:
      summary: User
      description: Basic user example
      value:
        self:
          id: 111
          businessKey:
            username: admin
          href: https://api.deposco.com/latest/users/111
        username: admin
        firstName: John
        lastName: Doe
        email: john@example.com
        enabled: true
        active: true
        participantType: Practitioner
        organization: Deposco
        handheldMenu: GroupMenu
        homePage: Default
        companyAssignments: null
        facility:
          id: 1
          businessKey:
            number: Atlanta1
            businessUnit.code: ABC
          href: https://api.deposco.com/latest/facilities/1
        activeResource:
          id: 5
          businessKey: {}
        activeZone:
          id: 1
          businessKey:
            name: Staging
            facility.number: Atlanta1
          href: https://api.deposco.com/latest/zones/1
        timeZone: US/Eastern
        lastLoggedInTime: '2022-03-23T11:54:37-05:00'
        lastLogInAttempt: '2022-03-23T11:54:37-05:00'
        createdDate: '2024-05-30T10:09:07-05:00'
        updatedDate: '2024-05-30T10:09:49.462-05:00'
        createdBy:
          id: 111
          businessKey:
            username: admin
          href: https://api.deposco.com/latest/users/111
        updatedBy:
          id: 111
          businessKey:
            username: admin
          href: https://api.deposco.com/latest/users/111
    containerCollectionResponse:
      summary: Container
      description: Basic container example
      value:
        data:
          - self:
              id: 863
              businessKey:
                number: C-137
              href: https://api.deposco.com/latest/containers/863
            lpnNumber: C-137
            number: C-137
            businessUnit:
              id: 73
              businessKey:
                code: BASE
              href: https://api.deposco.com/latest/companies/73
            gtin: GTIN
            type: Transient
            secondaryType: Pallet
            status: Receiving
            dimensions:
              length:
                measurement: 20
                units: in
              width:
                measurement: 12
                units: in
              height:
                measurement: 1
                units: in
              volume:
                measurement: 0
                units: in
            weight: 4
            parent:
              id: 852
              businessKey:
                number: Parent
              href: https://api.deposco.com/latest/containers/852
            location:
              id: 77
              businessKey:
                locator: hi000001
                facility.number: Atlanta1
              href: https://api.deposco.com/latest/locations/77
            insuredValue: 1000
            trackingNumber: 1-2-3-4
            description: This is a test container for the API demo
            shippingCost: 5
            activeZone:
              id: 4
              businessKey:
                name: Picking
                facility.number: Atlanta1
              href: https://api.deposco.com/latest/zones/4
            packageType: Package Type
            referenceNumber1: Reference Number
            returnTrackingNumber: 4-3-2-1
            uspsConstructCode: '1234'
            trackingNumber2: '5'
            cartonType:
              id: 5
              businessKey:
                name: 5x5x5
            copySourceLpnNumber: C-100
            masterLpnNumber: C-1
            sequence: 1
            sequenceTotal: 1
            printed: false
            pickWaveSequence: 1
            pickWaveSequenceTotal: 1
            orderHeaderSequence: 1
            orderHeaderSequenceTotal: 1
            cart:
              id: 540
              businessKey:
                number: test2
              href: https://api.deposco.com/latest/containers/540
            cartSlotNumber: 1
            ssccLpnNumber: SRks123
            trackingUrl: 3432134-34134
            createdDate: '2024-07-31T17:32:07.044-04:00'
            updatedDate: '2024-07-31T17:32:07.41-04:00'
            createdBy:
              id: 1396
              businessKey:
                username: stephen.montague
              href: https://api.deposco.com/latest/users/1396
            updatedBy:
              id: 1396
              businessKey:
                username: stephen.montague
              href: https://api.deposco.com/latest/users/1396
    containerRequest:
      summary: Container
      description: Basic container example
      value:
        lpnNumber: C-137
        number: C-137
        businessUnit:
          businessKey:
            code: DEP
        gtin: GTIN
        type: Transient
        secondaryType: Pallet
        status: Receiving
        dimensions:
          length:
            measurement: 20
            units: in
          width:
            measurement: 12
            units: in
          height:
            measurement: 1
            units: in
        weight: 4
        parent:
          businessKey:
            number: parentNumber
        location:
          businessKey:
            locator: locationA
            facility.number: Atlanta1
        insuredValue: 1000
        trackingNumber: 1-2-3-4
        description: This is a test container for the API demo
        shippingCost: 5
        activeZone:
          businessKey:
            name: zoneName
            facility.number: Atlanta1
        packageType: Package Type
        shipment:
          businessKey:
            number: shipmentNumber
        referenceNumber1: Reference Number
        returnTrackingNumber: 4-3-2-1
        uspsConstructCode: 1234string
        trackingNumber2: 5string
        cartonType:
          businessKey:
            name: cartonTypeName
        copySourceLpnNumber: C-100
        masterLpnNumber: C-1
        trip:
          businessKey:
            number: tripNumber
        sequence: 1
        sequenceTotal: 1
        printed: false
        pickWaveSequence: 1
        pickWaveSequenceTotal: 1
        orderHeaderSequence: 1
        orderHeaderSequenceTotal: 1
        cart:
          businessKey:
            number: cartNumber
        cartSlotNumber: 1
        ssccLpnNumber: SRks123
        trackingUrl: 3432134-34134
    containerResponse:
      summary: Container
      description: Basic container example
      value:
        self:
          id: 863
          businessKey:
            number: C-137
          href: https://api.deposco.com/latest/containers/863
        lpnNumber: C-137
        number: C-137
        businessUnit:
          id: 73
          businessKey:
            code: BASE
          href: https://api.deposco.com/latest/companies/73
        gtin: GTIN
        type: Transient
        secondaryType: Pallet
        status: Receiving
        dimensions:
          length:
            measurement: 20
            units: in
          width:
            measurement: 12
            units: in
          height:
            measurement: 1
            units: in
          volume:
            measurement: 0
            units: in
        weight: 4
        parent:
          id: 852
          businessKey:
            number: Parent
          href: https://api.deposco.com/latest/containers/852
        location:
          id: 77
          businessKey:
            locator: hi000001
            facility.number: Atlanta1
          href: https://api.deposco.com/latest/locations/77
        insuredValue: 1000
        trackingNumber: 1-2-3-4
        description: This is a test container for the API demo
        shippingCost: 5
        activeZone:
          id: 4
          businessKey:
            name: Picking
            facility.number: Atlanta1
          href: https://api.deposco.com/latest/zones/4
        packageType: Package Type
        referenceNumber1: Reference Number
        returnTrackingNumber: 4-3-2-1
        uspsConstructCode: '1234'
        trackingNumber2: '5'
        cartonType:
          id: 5
          businessKey:
            name: 5x5x5
        copySourceLpnNumber: C-100
        masterLpnNumber: C-1
        sequence: 1
        sequenceTotal: 1
        printed: false
        pickWaveSequence: 1
        pickWaveSequenceTotal: 1
        orderHeaderSequence: 1
        orderHeaderSequenceTotal: 1
        cart:
          id: 540
          businessKey:
            number: test2
          href: https://api.deposco.com/latest/containers/540
        cartSlotNumber: 1
        ssccLpnNumber: SRks123
        trackingUrl: 3432134-34134
        createdDate: '2024-07-31T17:32:07.044-04:00'
        updatedDate: '2024-07-31T17:32:07.41-04:00'
        createdBy:
          id: 1396
          businessKey:
            username: stephen.montague
          href: https://api.deposco.com/latest/users/1396
        updatedBy:
          id: 1396
          businessKey:
            username: stephen.montague
          href: https://api.deposco.com/latest/users/1396
    salesOrderRequest:
      summary: Sales Order
      description: Basic sales order example
      value:
        businessUnit:
          businessKey:
            code: ABC
        number: SO123
        orderPriority: 1
        orderSummary: John's ecomm order
        orderSource: Shopify
        secondaryOrderSource: ABC Ecomm Site
        customerOrderNumber: ABCEcomm-123
        consigneePartner:
          businessKey:
            code: Generic Ecomm Customer
            businessUnit.code: ABC
        shipToContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        shipToAddress:
          line1: 123 Test Street
          city: Alpharetta
          stateProvince: GA
          postalCode: '30009'
          country: US
        billToContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        billToAccountNumber: abc123
        billToAddress:
          line1: 123 Test Street
          city: Alpharetta
          stateProvince: GA
          postalCode: '30009'
          country: US
        placedDate: '2019-08-24T14:15:22Z'
        plannedArrivalDate: '2019-08-24T14:15:22Z'
        plannedReleaseDate: '2019-08-24T14:15:22Z'
        plannedShipDate: '2019-08-24T14:15:22Z'
        earliestShipDate: '2019-08-24T14:15:22Z'
        earliestDeliveryDate: '2019-08-24T14:15:22Z'
        cancelByArrivalDate: '2019-08-24T14:15:22Z'
        cancelByReleaseDate: '2019-08-24T14:15:22Z'
        cancelByShipDate: '2019-08-24T14:15:22Z'
        actualArrivalDate: '2019-08-24T14:15:22Z'
        actualReleaseDate: '2019-08-24T14:15:22Z'
        actualShipDate: '2019-08-24T14:15:22Z'
        orderTotal: 10
        orderSubtotal: 8
        orderDiscountSubtotal: 0
        orderShippingTotal: 1
        orderShipTotal: 0
        taxable: true
        orderTaxTotal: 1
        orderTaxableTotal: 8
        orderUntaxableTotal: 0
        shippingTaxTotal: 0
        shipVia: UPS
        freightTermsType: Prepaid
        weight:
          weight: 2
          units: lb
        dutyPaidBy: DDU
        dutyPaidByType: Seller
        dutyPaidByContactName: John Doe
        dutyPaidByAccount: abc123
        dutyPaidByPostalCode: '30009'
        dutyPaidByCountry: US
        importType: Single
        importReference: ref123
        exportReference: ref123
        otherReferenceNumber: ref123
        otherReferenceNumber2: ref123
        dropShip: true
        notes:
          - title: Gift
            body: Thank you!
            source: ABC Ecomm
        orderStatus: New
        shipFromFacility:
          businessKey:
            number: Atlanta1
        orderLines:
          data:
            - lineNumber: SO123--1
              customerLineNumber: ABCEcomm-123--1
              sortOrder: 0
              item:
                businessKey:
                  number: S456
                  businessUnit.code: ABC
              pack:
                businessKey:
                  item.number: S456
                  item.businessUnit.code: ABC
                  quantity: 1
              orderPackQuantity: 1
              lotNumber: lot1
              bornOnDate: '2019-08-24T14:15:22Z'
              expirationDate: '2019-08-24T14:15:22Z'
              productCode: S456
              plannedShipDate: '2019-08-24T14:15:22Z'
              plannedArrivalDate: '2019-08-24T14:15:22Z'
              unitPrice: 1
              unitCost: 0.5
              priceCode: string
              lineTotal: 1.2
              taxable: true
              taxCost: 0.2
              taxableTotal: 1
              shippingAmount: 0
              weight:
                weight: 1
                units: lb
              importReference: ref123
              exportReference: ref123
    purchaseOrderRequest:
      summary: Purchase Order
      description: Basic purchase order example
      value:
        businessUnit:
          businessKey:
            code: ABC
        number: PO123
        orderPriority: 0
        orderSummary: ACME Vendor order
        orderSource: API
        customerOrderNumber: PO123
        consigneePartner:
          businessKey:
            code: ACME
            businessUnit.code: ABC
        shipFromContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        shipFromAddress:
          line1: 123 Test Street
          city: Alpharetta
          stateProvince: GA
          postalCode: '30009'
          country: US
        placedDate: '2019-08-24T14:15:22Z'
        plannedArrivalDate: '2019-08-24T14:15:22Z'
        plannedReleaseDate: '2019-08-24T14:15:22Z'
        plannedShipDate: '2019-08-24T14:15:22Z'
        earliestShipDate: '2019-08-24T14:15:22Z'
        earliestDeliveryDate: '2019-08-24T14:15:22Z'
        cancelByArrivalDate: '2019-08-24T14:15:22Z'
        cancelByReleaseDate: '2019-08-24T14:15:22Z'
        cancelByShipDate: '2019-08-24T14:15:22Z'
        actualArrivalDate: '2019-08-24T14:15:22Z'
        actualReleaseDate: '2019-08-24T14:15:22Z'
        actualShipDate: '2019-08-24T14:15:22Z'
        orderTotal: 10
        orderSubtotal: 8
        orderDiscountSubtotal: 0
        orderShippingTotal: 1
        orderShipTotal: 0
        taxable: true
        orderTaxTotal: 1
        orderTaxableTotal: 8
        orderUntaxableTotal: 0
        shippingTaxTotal: 0
        shipVia: UPS
        freightTermsType: Prepaid
        freightBillToContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        freightBillToAccount: abc123
        freightBillToAddress:
          line1: 123 Test Street
          city: Alpharetta
          stateProvince: GA
          postalCode: '30009'
          country: US
        weight:
          weight: 2
          units: lb
        routingNumber: route123
        dutyPaidBy: DDU
        dutyPaidByType: Seller
        dutyPaidByContactName: John Doe
        dutyPaidByAccount: abc123
        dutyPaidByPostalCode: '30009'
        dutyPaidByCountry: US
        importReference: ref123
        exportReference: ref123
        otherReferenceNumber: ref123
        otherReferenceNumber2: ref123
        orderStatus: New
        shipToFacility:
          businessKey:
            code: Atlanta1
        orderLines:
          data:
            - lineNumber: PO123--1
              customerLineNumber: PO123--1
              sortOrder: 0
              item:
                businessKey:
                  number: S456
                  businessUnit.code: ABC
              pack:
                businessKey:
                  item.number: S456
                  item.businessUnit.code: ABC
                  quantity: 1
              orderPackQuantity: 5
              lotNumber: lot2
              bornOnDate: '2019-08-24T14:15:22Z'
              expirationDate: '2019-08-24T14:15:22Z'
              productCode: S456
              plannedShipDate: '2019-08-24T14:15:22Z'
              plannedArrivalDate: '2019-08-24T14:15:22Z'
              unitPrice: 0
              unitCost: 0.5
              lineTotal: 2.5
              weight:
                weight: 1
                units: lb
              importReference: ref123
              exportReference: ref123
              inboundLPN: lpn1
              masterInboundLPN: lpn2
    customerReturnOrderRequest:
      summary: Customer Order
      description: Basic customer order example
      value:
        businessUnit:
          businessKey:
            code: ABC
        number: PO123
        orderPriority: 0
        orderSummary: ACME Vendor order
        orderSource: API
        customerOrderNumber: PO123
        consigneePartner:
          businessKey:
            code: ACME
            businessUnit.code: ABC
        shipFromContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        shipFromAddress:
          line1: 123 Test Street
          city: Alpharetta
          stateProvince: GA
          postalCode: '30009'
          country: US
        placedDate: '2019-08-24T14:15:22Z'
        plannedArrivalDate: '2019-08-24T14:15:22Z'
        plannedReleaseDate: '2019-08-24T14:15:22Z'
        plannedShipDate: '2019-08-24T14:15:22Z'
        earliestShipDate: '2019-08-24T14:15:22Z'
        earliestDeliveryDate: '2019-08-24T14:15:22Z'
        cancelByArrivalDate: '2019-08-24T14:15:22Z'
        cancelByReleaseDate: '2019-08-24T14:15:22Z'
        cancelByShipDate: '2019-08-24T14:15:22Z'
        actualArrivalDate: '2019-08-24T14:15:22Z'
        actualReleaseDate: '2019-08-24T14:15:22Z'
        actualShipDate: '2019-08-24T14:15:22Z'
        orderTotal: 10
        orderSubtotal: 8
        orderDiscountSubtotal: 0
        orderShippingTotal: 1
        orderShipTotal: 0
        taxable: true
        orderTaxTotal: 1
        orderTaxableTotal: 8
        orderUntaxableTotal: 0
        shippingTaxTotal: 0
        shipVia: UPS
        freightTermsType: Prepaid
        freightBillToContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        freightBillToAccount: abc123
        freightBillToAddress:
          line1: 123 Test Street
          city: Alpharetta
          stateProvince: GA
          postalCode: '30009'
          country: US
        weight:
          weight: 2
          units: lb
        routingNumber: route123
        dutyPaidBy: DDU
        dutyPaidByType: Seller
        dutyPaidByContactName: John Doe
        dutyPaidByAccount: abc123
        dutyPaidByPostalCode: '30009'
        dutyPaidByCountry: US
        importReference: ref123
        exportReference: ref123
        otherReferenceNumber: ref123
        otherReferenceNumber2: ref123
        orderStatus: New
        shipToFacility:
          businessKey:
            code: Atlanta1
        parentOrder:
          businessKey:
            number: testOrder
            businessUnit.code: testBU
        orderLines:
          data:
            - lineNumber: PO123--1
              customerLineNumber: PO123--1
              sortOrder: 0
              item:
                businessKey:
                  number: S456
                  businessUnit.code: ABC
              pack:
                businessKey:
                  item.number: S456
                  item.businessUnit.code: ABC
                  quantity: 1
              orderPackQuantity: 5
              lotNumber: lot2
              bornOnDate: '2019-08-24T14:15:22Z'
              expirationDate: '2019-08-24T14:15:22Z'
              productCode: S456
              plannedShipDate: '2019-08-24T14:15:22Z'
              plannedArrivalDate: '2019-08-24T14:15:22Z'
              unitPrice: 0
              unitCost: 0.5
              lineTotal: 2.5
              weight:
                weight: 1
                units: lb
              importReference: ref123
              exportReference: ref123
              inboundLPN: lpn1
              masterInboundLPN: lpn2
    vendorReturnOrderRequest:
      summary: Vendor Return Order
      description: Basic vendor return order example
      value:
        businessUnit:
          businessKey:
            code: ABC
        number: SO123
        orderPriority: 1
        orderSummary: John's ecomm order
        orderSource: Shopify
        secondaryOrderSource: ABC Ecomm Site
        customerOrderNumber: ABCEcomm-123
        consigneePartner:
          businessKey:
            code: Generic Ecomm Customer
            businessUnit.code: ABC
        shipToContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        shipToAddress:
          line1: 123 Test Street
          city: Alpharetta
          stateProvince: GA
          postalCode: '30009'
          country: US
        billToContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        billToAccountNumber: abc123
        billToAddress:
          line1: 123 Test Street
          city: Alpharetta
          stateProvince: GA
          postalCode: '30009'
          country: US
        placedDate: '2019-08-24T14:15:22Z'
        plannedArrivalDate: '2019-08-24T14:15:22Z'
        plannedReleaseDate: '2019-08-24T14:15:22Z'
        plannedShipDate: '2019-08-24T14:15:22Z'
        earliestShipDate: '2019-08-24T14:15:22Z'
        earliestDeliveryDate: '2019-08-24T14:15:22Z'
        cancelByArrivalDate: '2019-08-24T14:15:22Z'
        cancelByReleaseDate: '2019-08-24T14:15:22Z'
        cancelByShipDate: '2019-08-24T14:15:22Z'
        actualArrivalDate: '2019-08-24T14:15:22Z'
        actualReleaseDate: '2019-08-24T14:15:22Z'
        actualShipDate: '2019-08-24T14:15:22Z'
        orderTotal: 10
        orderSubtotal: 8
        orderDiscountSubtotal: 0
        orderShippingTotal: 1
        orderShipTotal: 0
        taxable: true
        orderTaxTotal: 1
        orderTaxableTotal: 8
        orderUntaxableTotal: 0
        shippingTaxTotal: 0
        shipVia: UPS
        freightTermsType: Prepaid
        weight:
          weight: 2
          units: lb
        dutyPaidBy: DDU
        dutyPaidByType: Seller
        dutyPaidByContactName: John Doe
        dutyPaidByAccount: abc123
        dutyPaidByPostalCode: '30009'
        dutyPaidByCountry: US
        importType: Single
        importReference: ref123
        exportReference: ref123
        otherReferenceNumber: ref123
        otherReferenceNumber2: ref123
        dropShip: true
        notes:
          - title: Gift
            body: Thank you!
            source: ABC Ecomm
        orderStatus: New
        shipFromFacility:
          businessKey:
            number: Atlanta1
        orderLines:
          data:
            - lineNumber: SO123--1
              customerLineNumber: ABCEcomm-123--1
              sortOrder: 0
              item:
                businessKey:
                  number: S456
                  businessUnit.code: ABC
              pack:
                businessKey:
                  item.number: S456
                  item.businessUnit.code: ABC
                  quantity: 1
              orderPackQuantity: 1
              lotNumber: lot1
              bornOnDate: '2019-08-24T14:15:22Z'
              expirationDate: '2019-08-24T14:15:22Z'
              productCode: S456
              plannedShipDate: '2019-08-24T14:15:22Z'
              plannedArrivalDate: '2019-08-24T14:15:22Z'
              unitPrice: 1
              unitCost: 0.5
              priceCode: string
              lineTotal: 1.2
              taxable: true
              taxCost: 0.2
              taxableTotal: 1
              shippingAmount: 0
              weight:
                weight: 1
                units: lb
              importReference: ref123
              exportReference: ref123
    outboundTransferOrderRequest:
      summary: Outbound Transfer Order
      description: Basic outbound transfer order example
      value:
        businessUnit:
          businessKey:
            code: ABC
        number: SO123
        orderPriority: 1
        orderSummary: John's ecomm order
        orderSource: Shopify
        secondaryOrderSource: ABC Ecomm Site
        customerOrderNumber: ABCEcomm-123
        consigneePartner:
          businessKey:
            code: Generic Ecomm Customer
            businessUnit.code: ABC
        shipToContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        shipToAddress:
          line1: 123 Test Street
          city: Savannah
          stateProvince: GA
          postalCode: '30009'
          country: US
        billToContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        billToAccountNumber: abc123
        billToAddress:
          line1: 123 Test Street
          city: Savannah
          stateProvince: GA
          postalCode: '31302'
          country: US
        placedDate: '2019-08-24T14:15:22Z'
        plannedArrivalDate: '2019-08-24T14:15:22Z'
        plannedReleaseDate: '2019-08-24T14:15:22Z'
        plannedShipDate: '2019-08-24T14:15:22Z'
        earliestShipDate: '2019-08-24T14:15:22Z'
        earliestDeliveryDate: '2019-08-24T14:15:22Z'
        cancelByArrivalDate: '2019-08-24T14:15:22Z'
        cancelByReleaseDate: '2019-08-24T14:15:22Z'
        cancelByShipDate: '2019-08-24T14:15:22Z'
        actualArrivalDate: '2019-08-24T14:15:22Z'
        actualReleaseDate: '2019-08-24T14:15:22Z'
        actualShipDate: '2019-08-24T14:15:22Z'
        orderTotal: 10
        orderSubtotal: 8
        orderDiscountSubtotal: 0
        orderShippingTotal: 1
        orderShipTotal: 0
        taxable: true
        orderTaxTotal: 1
        orderTaxableTotal: 8
        orderUntaxableTotal: 0
        shippingTaxTotal: 0
        shipVia: UPS
        freightTermsType: Prepaid
        weight:
          weight: 2
          units: lb
        dutyPaidBy: DDU
        dutyPaidByType: Seller
        dutyPaidByContactName: John Doe
        dutyPaidByAccount: abc123
        dutyPaidByPostalCode: '31302'
        dutyPaidByCountry: US
        importType: Single
        importReference: ref123
        exportReference: ref123
        otherReferenceNumber: ref123
        otherReferenceNumber2: ref123
        dropShip: true
        notes:
          - title: Gift
            body: Thank you!
            source: ABC Ecomm
        orderStatus: New
        shipFromFacility:
          businessKey:
            number: Atlanta1
        shipToFacility:
          businessKey:
            number: Savannah
        orderLines:
          data:
            - lineNumber: SO123--1
              customerLineNumber: ABCEcomm-123--1
              sortOrder: 0
              item:
                businessKey:
                  number: S456
                  businessUnit.code: ABC
              pack:
                businessKey:
                  item.number: S456
                  item.businessUnit.code: ABC
                  quantity: 1
              orderPackQuantity: 1
              lotNumber: lot1
              bornOnDate: '2019-08-24T14:15:22Z'
              expirationDate: '2019-08-24T14:15:22Z'
              productCode: S456
              plannedShipDate: '2019-08-24T14:15:22Z'
              plannedArrivalDate: '2019-08-24T14:15:22Z'
              unitPrice: 1
              unitCost: 0.5
              priceCode: string
              lineTotal: 1.2
              taxable: true
              taxCost: 0.2
              taxableTotal: 1
              shippingAmount: 0
              weight:
                weight: 1
                units: lb
              importReference: ref123
              exportReference: ref123
    inboundTransferOrderRequest:
      summary: Inbound Transfer Order
      description: Basic inbound transfer order example
      value:
        businessUnit:
          businessKey:
            code: ABC
        number: SO123
        orderPriority: 1
        orderSummary: John's ecomm order
        orderSource: Shopify
        secondaryOrderSource: ABC Ecomm Site
        customerOrderNumber: ABCEcomm-123
        consigneePartner:
          businessKey:
            code: Generic Ecomm Customer
            businessUnit.code: ABC
        shipToContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        shipToAddress:
          line1: 123 Test Street
          city: Savannah
          stateProvince: GA
          postalCode: '31302'
          country: US
        billToContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        billToAccountNumber: abc123
        billToAddress:
          line1: 123 Test Street
          city: Savannah
          stateProvince: GA
          postalCode: '31302'
          country: US
        placedDate: '2019-08-24T14:15:22Z'
        plannedArrivalDate: '2019-08-24T14:15:22Z'
        plannedReleaseDate: '2019-08-24T14:15:22Z'
        plannedShipDate: '2019-08-24T14:15:22Z'
        earliestShipDate: '2019-08-24T14:15:22Z'
        earliestDeliveryDate: '2019-08-24T14:15:22Z'
        cancelByArrivalDate: '2019-08-24T14:15:22Z'
        cancelByReleaseDate: '2019-08-24T14:15:22Z'
        cancelByShipDate: '2019-08-24T14:15:22Z'
        actualArrivalDate: '2019-08-24T14:15:22Z'
        actualReleaseDate: '2019-08-24T14:15:22Z'
        actualShipDate: '2019-08-24T14:15:22Z'
        orderTotal: 10
        orderSubtotal: 8
        orderDiscountSubtotal: 0
        orderShippingTotal: 1
        orderShipTotal: 0
        taxable: true
        orderTaxTotal: 1
        orderTaxableTotal: 8
        orderUntaxableTotal: 0
        shippingTaxTotal: 0
        shipVia: UPS
        freightTermsType: Prepaid
        weight:
          weight: 2
          units: lb
        dutyPaidBy: DDU
        dutyPaidByType: Seller
        dutyPaidByContactName: John Doe
        dutyPaidByAccount: abc123
        dutyPaidByPostalCode: '31302'
        dutyPaidByCountry: US
        importType: Single
        importReference: ref123
        exportReference: ref123
        otherReferenceNumber: ref123
        otherReferenceNumber2: ref123
        dropShip: true
        notes:
          - title: Gift
            body: Thank you!
            source: ABC Ecomm
        orderStatus: New
        shipFromFacility:
          businessKey:
            number: Atlanta1
        shipToFacility:
          businessKey:
            number: Savannah
        orderLines:
          data:
            - lineNumber: SO123--1
              customerLineNumber: ABCEcomm-123--1
              sortOrder: 0
              item:
                businessKey:
                  number: S456
                  businessUnit.code: ABC
              pack:
                businessKey:
                  item.number: S456
                  item.businessUnit.code: ABC
                  quantity: 1
              orderPackQuantity: 1
              lotNumber: lot1
              bornOnDate: '2019-08-24T14:15:22Z'
              expirationDate: '2019-08-24T14:15:22Z'
              productCode: S456
              plannedShipDate: '2019-08-24T14:15:22Z'
              plannedArrivalDate: '2019-08-24T14:15:22Z'
              unitPrice: 1
              unitCost: 0.5
              priceCode: string
              lineTotal: 1.2
              taxable: true
              taxCost: 0.2
              taxableTotal: 1
              shippingAmount: 0
              weight:
                weight: 1
                units: lb
              importReference: ref123
              exportReference: ref123
    outboundShipmentCollection:
      summary: Outbound Shipment Collection
      description: Collection of outbound shipments example
      value:
        data:
          - self:
              id: 1
              businessKey:
                number: OBShipment1
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/shipments/outbound/1
            businessUnit:
              id: 73
              businessKey:
                code: ABC
              href: https://api.deposco.com/latest/companies/73
            number: OBShipment1
            type: Outbound Shipment
            status: Shipped
            shipFromFacility:
              id: 1
              businessKey:
                number: Atlanta1
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/facilities/1
            shipVia: UPS
            shipMethod: UPS Ground
            shipVendor: UPS2
            trackingNumber: abc123
            shipToContact:
              firstName: John
              lastName: Doe
              phone: 123-456-7890
              email: john@example.com
            shipToAddress:
              line1: 123 Test Street
              city: Alpharetta
              stateProvince: GA
              postalCode: '30009'
              country: US
            shipFromContact:
              firstName: John
              lastName: Doe
              phone: 123-456-7890
            shipFromAddress:
              line1: 123 Test Rd
              city: Atlanta
              postalCode: '30308'
            shipmentDates:
              plannedShipDate: '2024-01-01T00:00:00-05:00'
              actualShipDate: '2024-01-01T00:00:00-05:00'
              plannedArrivalDate: '2024-01-01T00:00:00-05:00'
            totalWeight:
              value: 1
              units: lb
            chargeableWeight:
              value: 1
              units: lb
            totalCube:
              measurement: 1
              units: in
            totalPieces: 1
            totalPackages: 1
            shippingCosts:
              shippingCost: 1
              currencyCode: USD
              freightTermsType: Prepaid
            residential: false
            shipMode: Ground
            orderHeaders:
              data:
                - id: 1
                  businessKey:
                    number: SO1001
                    businessUnit.code: ABC
                  href: https://api.deposco.com/latest/salesorders/1
              links:
                - rel: next
                  href: https://api.deposco.com/latest/shipments/outbound/1/orderHeaders?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
            shipmentLines:
              data:
                - self:
                    id: 1
                    businessKey:
                      number: OBShipment1--1
                      businessUnit.code: ABC
                    href: https://api.deposco.com/latest/shipments/outbound/1/shipmentlines/1
                  businessUnit:
                    id: 73
                    businessKey:
                      code: ABC
                    href: https://api.deposco.com/latest/companies/73
                  shipment:
                    id: 1
                    businessKey:
                      number: OBShipment1
                      businessUnit.code: ABC
                    href: https://api.deposco.com/latest/shipments/outbound/1
                  number: OBShipment1--1
                  orderLine:
                    id: 1
                    businessKey:
                      number: SO123--1
                      businessUnit.code: ABC
                    href: https://api.deposco.com/latest/salesorders/1/orderlines/1
                  item:
                    id: 107470
                    businessKey:
                      number: S456
                      businessUnit.code: ABC
                    href: https://api.deposco.com/latest/items/107470
                  pack:
                    id: 60922
                    businessKey:
                      item.number: S456
                      item.businessUnit.code: ABC
                      quantity: 1
                    href: https://api.deposco.com/latest/items/107470/packs/60922
                  description: Normal
                  orderPackQuantity: 1
                  shippedPackQuantity: 1
                  createdDate: '2024-01-01T00:00:00-05:00'
                  updatedDate: '2024-01-01T00:00:00-05:00'
              links:
                - rel: next
                  href: https://api.deposco.com/latest/shipments/outbound/1/shipmentlines?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
            shippedContainers:
              data:
                - self:
                    id: 1
                    businessKey:
                      number: 8OIIVSKU
                      businessUnit.code: ABC
                  number: 8OIIVSKU
                  type: Carton
                  status: Shipped
                  trackingNumber: abc123
                  weight:
                    value: 1
                    units: lb
                  dimensions:
                    length:
                      measurement: 20
                      units: in
                    width:
                      measurement: 12
                      units: in
                    height:
                      measurement: 1
                      units: in
                  createdDate: '2024-01-01T00:00:00-05:00'
                  updatedDate: '2024-01-01T00:00:00-05:00'
              links:
                - rel: next
                  href: https://api.deposco.com/latest/shipments/outbound/1/shippedContainers?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
            trip:
              id: 1
              businessKey:
                number: Trip1
                businessUnit.code: ABC
            onTime: true
            createdDate: '2024-01-01T00:00:00-05:00'
            updatedDate: '2024-01-01T00:00:00-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
        links:
          - rel: next
            href: https://api.deposco.com/latest/shipments/outbound?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
    outboundShipment:
      summary: Outbound Shipment
      description: Basic outbound shipment example
      value:
        self:
          id: 1
          businessKey:
            number: OBShipment1
            businessUnit.code: ABC
          href: https://api.deposco.com/latest/shipments/outbound/1
        businessUnit:
          id: 73
          businessKey:
            code: ABC
          href: https://api.deposco.com/latest/companies/73
        number: OBShipment1
        type: Outbound Shipment
        status: Shipped
        shipFromFacility:
          id: 1
          businessKey:
            number: Atlanta1
            businessUnit.code: ABC
          href: https://api.deposco.com/latest/facilities/1
        shipVia: UPS
        shipMethod: UPS Ground
        shipVendor: UPS2
        trackingNumber: abc123
        shipToContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
          email: john@example.com
        shipToAddress:
          line1: 123 Test Street
          city: Alpharetta
          stateProvince: GA
          postalCode: '30009'
          country: US
        shipFromContact:
          firstName: John
          lastName: Doe
          phone: 123-456-7890
        shipFromAddress:
          line1: 123 Test Rd
          city: Atlanta
          postalCode: '30308'
        shipmentDates:
          plannedShipDate: '2024-01-01T00:00:00-05:00'
          actualShipDate: '2024-01-01T00:00:00-05:00'
          plannedArrivalDate: '2024-01-01T00:00:00-05:00'
        totalWeight:
          value: 1
          units: lb
        chargeableWeight:
          value: 1
          units: lb
        totalCube:
          measurement: 1
          units: in
        totalPieces: 1
        totalPackages: 1
        shippingCosts:
          shippingCost: 1
          currencyCode: USD
          freightTermsType: Prepaid
        residential: false
        shipMode: Ground
        orderHeaders:
          data:
            - id: 1
              businessKey:
                number: SO1001
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/salesorders/1
          links:
            - rel: next
              href: https://api.deposco.com/latest/shipments/outbound/1/orderHeaders?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
        shipmentLines:
          data:
            - self:
                id: 1
                businessKey:
                  number: OBShipment1--1
                  businessUnit.code: ABC
                href: https://api.deposco.com/latest/shipments/outbound/1/shipmentlines/1
              businessUnit:
                id: 73
                businessKey:
                  code: ABC
                href: https://api.deposco.com/latest/companies/73
              shipment:
                id: 1
                businessKey:
                  number: OBShipment1
                  businessUnit.code: ABC
                href: https://api.deposco.com/latest/shipments/outbound/1
              number: OBShipment1--1
              orderLine:
                id: 1
                businessKey:
                  number: SO123--1
                  businessUnit.code: ABC
                href: https://api.deposco.com/latest/salesorders/1/orderlines/1
              item:
                id: 107470
                businessKey:
                  number: S456
                  businessUnit.code: ABC
                href: https://api.deposco.com/latest/items/107470
              pack:
                id: 60922
                businessKey:
                  item.number: S456
                  item.businessUnit.code: ABC
                  quantity: 1
                href: https://api.deposco.com/latest/items/107470/packs/60922
              description: Normal
              orderPackQuantity: 1
              shippedPackQuantity: 1
              createdDate: '2024-01-01T00:00:00-05:00'
              updatedDate: '2024-01-01T00:00:00-05:00'
          links:
            - rel: next
              href: https://api.deposco.com/latest/shipments/outbound/1/shipmentlines?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
        shippedContainers:
          data:
            - self:
                id: 1
                businessKey:
                  number: 8OIIVSKU
                  businessUnit.code: ABC
              number: 8OIIVSKU
              type: Carton
              status: Shipped
              trackingNumber: abc123
              weight:
                value: 1
                units: lb
              dimensions:
                length:
                  measurement: 20
                  units: in
                width:
                  measurement: 12
                  units: in
                height:
                  measurement: 1
                  units: in
              createdDate: '2024-01-01T00:00:00-05:00'
              updatedDate: '2024-01-01T00:00:00-05:00'
          links:
            - rel: next
              href: https://api.deposco.com/latest/shipments/outbound/1/shippedContainers?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
        trip:
          id: 1
          businessKey:
            number: Trip1
            businessUnit.code: ABC
        onTime: true
        createdDate: '2024-01-01T00:00:00-05:00'
        updatedDate: '2024-01-01T00:00:00-05:00'
        createdBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
        updatedBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
    outboundShipmentLineCollection:
      summary: Outbound Shipment Line Collection
      description: Collection of outbound shipment lines example
      value:
        data:
          - self:
              id: 1
              businessKey:
                number: OBShipment1--1
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/shipments/outbound/1/shipmentlines/1
            businessUnit:
              id: 73
              businessKey:
                code: ABC
              href: https://api.deposco.com/latest/companies/73
            shipment:
              id: 1
              businessKey:
                number: OBShipment1
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/shipments/outbound/1
            number: OBShipment1--1
            status: Shipped
            orderLine:
              id: 1
              businessKey:
                number: SO123--1
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/salesorders/1/orderlines/1
            orderLineDetails:
              customerLineNumber: ABCEcomm-123--1
              pack:
                id: 60922
                businessKey:
                  item.number: S456
                  item.businessUnit.code: ABC
                  quantity: 1
                href: https://api.deposco.com/latest/items/107470/packs/60922
            item:
              id: 107470
              businessKey:
                number: S456
                businessUnit.code: ABC
              href: https://api.deposco.com/latest/items/107470
            pack:
              id: 60922
              businessKey:
                item.number: S456
                item.businessUnit.code: ABC
                quantity: 1
              href: https://api.deposco.com/latest/items/107470/packs/60922
            description: Normal
            orderPackQuantity: 1
            shippedPackQuantity: 1
            damagedPackQuantity: 0
            shippedDamagedPackQuantity: 0
            returnedPackQuantity: 0
            canceledPackQuantity: 0
            shortagePackQuantity: 0
            pickedPackQuantity: 1
            packageCount: 1
            pieceCount: 1
            totalWeight:
              value: 1
              units: lb
            chargeableWeight:
              value: 1
              units: lb
            externalLineNumber: ABCEcommShip-123--1
            createdDate: '2024-01-01T00:00:00-05:00'
            updatedDate: '2024-01-01T00:00:00-05:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: https://api.deposco.com/latest/users/1410
        links:
          - rel: next
            href: https://api.deposco.com/latest/shipments/outbound/1/shipmentlines?searchId=cGFnZVNpemU9NTAmbWF4SWQ9MTA3MzMx
    outboundShipmentLine:
      summary: Outbound Shipment Line
      description: Basic outbound shipment line example
      value:
        self:
          id: 1
          businessKey:
            number: OBShipment1--1
            businessUnit.code: ABC
          href: https://api.deposco.com/latest/shipments/outbound/1/shipmentlines/1
        businessUnit:
          id: 73
          businessKey:
            code: ABC
          href: https://api.deposco.com/latest/companies/73
        shipment:
          id: 1
          businessKey:
            number: OBShipment1
            businessUnit.code: ABC
          href: https://api.deposco.com/latest/shipments/outbound/1
        number: OBShipment1--1
        status: Shipped
        orderLine:
          id: 1
          businessKey:
            number: SO123--1
            businessUnit.code: ABC
          href: https://api.deposco.com/latest/salesorders/1/orderlines/1
        orderLineDetails:
          customerLineNumber: ABCEcomm-123--1
          pack:
            id: 60922
            businessKey:
              item.number: S456
              item.businessUnit.code: ABC
              quantity: 1
            href: https://api.deposco.com/latest/items/107470/packs/60922
        item:
          id: 107470
          businessKey:
            number: S456
            businessUnit.code: ABC
          href: https://api.deposco.com/latest/items/107470
        pack:
          id: 60922
          businessKey:
            item.number: S456
            item.businessUnit.code: ABC
            quantity: 1
          href: https://api.deposco.com/latest/items/107470/packs/60922
        description: Normal
        orderPackQuantity: 1
        shippedPackQuantity: 1
        damagedPackQuantity: 0
        shippedDamagedPackQuantity: 0
        returnedPackQuantity: 0
        canceledPackQuantity: 0
        shortagePackQuantity: 0
        pickedPackQuantity: 1
        packageCount: 1
        pieceCount: 1
        totalWeight:
          value: 1
          units: lb
        chargeableWeight:
          value: 1
          units: lb
        externalLineNumber: ABCEcommShip-123--1
        createdDate: '2024-01-01T00:00:00-05:00'
        updatedDate: '2024-01-01T00:00:00-05:00'
        createdBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
        updatedBy:
          id: 1410
          businessKey:
            username: private-app-1
          href: https://api.deposco.com/latest/users/1410
    receiptCollectionResponse:
      summary: Receipts
      description: Basic receipts example
      value:
        data:
          - self:
              id: 12568
              businessKey:
                number: receipt--1--8000--1
                businessUnit.code: SA3PL1
            number: receipt--1--8000--1
            status: Received
            receivedItem:
              id: 107470
              businessKey:
                number: S456
                businessUnit.code: ABC
              href: http://api-qa.deposco.com/items/351271
            receivedPack:
              id: 60922
              businessKey:
                item.businessUnit.code: ABC
                quantity: 1
                item.number: ABC
              href: http://api-qa.deposco.com/items/107470/packs/60922
            receivedPackQuantity: 10000
            destinationLocation:
              id: 102
              businessKey:
                facility.number: Atlanta1
                locator: Picking1
              href: http://api-qa.deposco.com/locations/102
            unitPrice: 0
            damaged: false
            receivedDamagedPackQuantity: 0
            orderLine:
              id: 380262
              businessKey:
                orderHeader.number: '8000'
                lineNumber: 8000--1
                orderHeader.businessUnit.code: ABC
            channels: []
            createdDate: '2025-03-07T11:43:11-06:00'
            updatedDate: '2025-03-07T11:43:11-06:00'
            createdBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: http://api-qa.deposco.com/users/1410
            updatedBy:
              id: 1410
              businessKey:
                username: private-app-1
              href: http://api-qa.deposco.com/users/1410
        links:
          - rel: next
            href: http://api-qa.deposco.com/receipts?searchId=bWF4SWR8bHR8MTI1Njd8aW5uZXJKb2luJnBhZ2VTaXplfGVxfDJ8aW5uZXJKb2luJnN0YXR1c3xlcXxSZWNlaXZlZHxpbm5lckpvaW4mdG90YWxQYWdlc3xlcXw2MTMw
        complete: true
        pages: 1
x-tagGroups:
  - name: API Usage
    tags:
      - Authentication and authorization
      - URLs
      - Versioning
      - Throttling
      - Additional considerations
  - name: Master Data
    tags:
      - Items
      - Kits
      - Trading partners
      - Companies
      - Facilities
      - Zones
      - Locations
      - Users
      - Containers
  - name: Orders
    tags:
      - Sales orders
      - Customer orders
      - Purchase orders
      - Customer returns
      - Vendor returns
      - Outbound transfer orders
      - Inbound transfer orders
  - name: Inventory
    tags:
      - Inventory
  - name: Shipments and Receiving
    tags:
      - Trips
      - Outbound shipments
      - Receipts
  - name: Asynchronous Operations
    tags:
      - Asynchronous operations
